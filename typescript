Script started on Fri 08 May 2015 12:59:53 PM PDT
cherber2@ada:~/CS202/Program2$ exit[2Pfgexitclearvalgrind ./a.out --leak-check=full
==17898== Memcheck, a memory error detector
==17898== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==17898== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==17898== Command: ./a.out --leak-check=full
==17898== 


Welcome to my program! The purpose of this program is to helpevaluate your progress in the CS Program.


---Menu---
1) Add A Course
2) Remove A Term/Course
3) Evaluate CS Program Progression
4) Display Current Program Requirements
5) Quit

Please Choose A Number: 1

What year was your course taken(EX: 2015)? 
2014

Please choose which term(using #): 
1) Fall
2) Winter
3) Spring
4) Summer

2


---COURSE SELECTION---
1)Computer Science 
2)Required (excluding CS)
3)Electives 
Please select a number: 1

Please enter in the course name: CS161

Please enter in the credits earned: 4

Please enter your grade(Ex: A or B+): A


---Menu---
1) Add A Course
2) Remove A Term/Course
3) Evaluate CS Program Progression
4) Display Current Program Requirements
5) Quit

Please Choose A Number: 1

What year was your course taken(EX: 2015)? 
2014

Please choose which term(using #): 
1) Fall
2) Winter
3) Spring
4) Summer

2


---COURSE SELECTION---
1)Computer Science 
2)Required (excluding CS)
3)Electives 
Please select a number: 2

Please enter in the course name: Calc I

Please enter in the credits earned: 4

Please enter your grade(Ex: A or B+): A A-


---Menu---
1) Add A Course
2) Remove A Term/Course
3) Evaluate CS Program Progression
4) Display Current Program Requirements
5) Quit

Please Choose A Number: 1

What year was your course taken(EX: 2015)? 
2015

Please choose which term(using #): 
1) Fall
2) Winter
3) Spring
4) Summer

3


---COURSE SELECTION---
1)Computer Science 
2)Required (excluding CS)
3)Electives 
Please select a number: 1

Please enter in the course name: CS163

Please enter in the credits earned: 4

Please enter your grade(Ex: A or B+): B


---Menu---
1) Add A Course
2) Remove A Term/Course
3) Evaluate CS Program Progression
4) Display Current Program Requirements
5) Quit

Please Choose A Number: 1

What year was your course taken(EX: 2015)? 
2015

Please choose which term(using #): 
1) Fall
2) Winter
3) Spring
4) Summer

4


---COURSE SELECTION---
1)Computer Science 
2)Required (excluding CS)
3)Electives 
Please select a number: 2

Please enter in the course name: Calc III

Please enter in the credits earned: 4

Please enter your grade(Ex: A or B+): B


---Menu---
1) Add A Course
2) Remove A Term/Course
3) Evaluate CS Program Progression
4) Display Current Program Requirements
5) Quit

Please Choose A Number: 1

What year was your course taken(EX: 2015)? 
2014

Please choose which term(using #): 
1) Fall
2) Winter
3) Spring
4) Summer

2


---COURSE SELECTION---
1)Computer Science 
2)Required (excluding CS)
3)Electives 
Please select a number: 2

Please enter in the course name: Calc II

Please enter in the credits earned: 4

Please enter your grade(Ex: A or B+): A C


---Menu---
1) Add A Course
2) Remove A Term/Course
3) Evaluate CS Program Progression
4) Display Current Program Requirements
5) Quit

Please Choose A Number: 3


---WINTER 2014---

  _______NON_CS_COURSE______
 |Name: Calc II	|
 |Grade: C  		|
 |Credits: 4  		|
 |__________________________|

  _______NON_CS_COURSE______
 |Name: Calc I	|
 |Grade: A-  		|
 |Credits: 4  		|
 |__________________________|

  _________CS_COURSE________
 |Name: CS161|
 |Grade: A  		|
 |Credits: 4  		|
 |_______________________|


---SUMMER 2015---

  _______NON_CS_COURSE______
 |Name: Calc III	|
 |Grade: B  		|
 |Credits: 4  		|
 |__________________________|


---SPRING 2015---

  _________CS_COURSE________
 |Name: CS163|
 |Grade: B  		|
 |Credits: 4  		|
 |_______________________|


---Menu---
1) Add A Course
2) Remove A Term/Course
3) Evaluate CS Program Progression
4) Display Current Program Requirements
5) Quit

Please Choose A Number: 2

What year was your course taken(EX: 2015)? 
2014

Please choose which term(using #): 
1) Fall
2) Winter
3) Spring
4) Summer

2
Remove Term(Enter T) or Course(Enter C)? C

  _______NON_CS_COURSE______
 |Name: Calc II	|
 |Grade: C  		|
 |Credits: 4  		|
 |__________________________|

  _______NON_CS_COURSE______
 |Name: Calc I	|
 |Grade: A-  		|
 |Credits: 4  		|
 |__________________________|

  _________CS_COURSE________
 |Name: CS161|
 |Grade: A  		|
 |Credits: 4  		|
 |_______________________|

Please enter in the name of the course you wish to delete: 
Calc II


---Menu---
1) Add A Course
2) Remove A Term/Course
3) Evaluate CS Program Progression
4) Display Current Program Requirements
5) Quit

Please Choose A Number: 3


---WINTER 2014---

  _______NON_CS_COURSE______
 |Name: Calc I	|
 |Grade: A-  		|
 |Credits: 4  		|
 |__________________________|

  _________CS_COURSE________
 |Name: CS161|
 |Grade: A  		|
 |Credits: 4  		|
 |_______________________|


---SUMMER 2015---

  _______NON_CS_COURSE______
 |Name: Calc III	|
 |Grade: B  		|
 |Credits: 4  		|
 |__________________________|


---SPRING 2015---

  _________CS_COURSE________
 |Name: CS163|
 |Grade: B  		|
 |Credits: 4  		|
 |_______________________|


---Menu---
1) Add A Course
2) Remove A Term/Course
3) Evaluate CS Program Progression
4) Display Current Program Requirements
5) Quit

Please Choose A Number: 2

What year was your course taken(EX: 2015)? 
2014

Please choose which term(using #): 
1) Fall
2) Winter
3) Spring
4) Summer

2
Remove Term(Enter T) or Course(Enter C)? T


---Menu---
1) Add A Course
2) Remove A Term/Course
3) Evaluate CS Program Progression
4) Display Current Program Requirements
5) Quit

Please Choose A Number: 3


---SUMMER 2015---

  _______NON_CS_COURSE______
 |Name: Calc III	|
 |Grade: B  		|
 |Credits: 4  		|
 |__________________________|


---SPRING 2015---

  _________CS_COURSE________
 |Name: CS163|
 |Grade: B  		|
 |Credits: 4  		|
 |_______________________|


---Menu---
1) Add A Course
2) Remove A Term/Course
3) Evaluate CS Program Progression
4) Display Current Program Requirements
5) Quit

Please Choose A Number: 3 4


---GPA---
Total: 3
CS: 3

Good Academic Standing

You have 4 which does not meet the reqirements to be accepted into the CS Program


---Menu---
1) Add A Course
2) Remove A Term/Course
3) Evaluate CS Program Progression
4) Display Current Program Requirements
5) Quit

Please Choose A Number: 5

Goodbye! 
==17898== 
==17898== HEAP SUMMARY:
==17898==     in use at exit: 0 bytes in 0 blocks
==17898==   total heap usage: 19 allocs, 19 frees, 399 bytes allocated
==17898== 
==17898== All heap blocks were freed -- no leaks are possible
==17898== 
==17898== For counts of detected and suppressed errors, rerun with: -v
==17898== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
cherber2@ada:~/CS202/Program2$ ^B[K^C
cherber2@ada:~/CS202/Program2$ ls
a.out  client.cpp  client.h  course.cpp  course.h  main.cpp  term.cpp  term.h  typescript
cherber2@ada:~/CS202/Program2$ vim[K[K[Klsvalgrind ./a.out --leak-check=full[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cexit[K[2Pfgexitclearvalgrind ./a.out --leak-check=full[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[16Pg++ *.cpp -Wall -gclear[Kvim -O client.h client.cpp
2 files to edit
[?1049h[?1h=[2;1Hâ–½[6n[1;1H  [1;1H[1;52r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[52;1H"client.h" 61L, 2434C[52;9Hcpp" [52;14H[K[52;14H453L, 13458C[>c[1;1H[1m [m[1m[35m2[m[1m client.h [m[7m                                                                                                                                                                                         [m[2;1H[33m  1 [m[34m//Cody Herberholz, CS202, Program #2[m[43C[41m [m[14C[7m|[m
[33m  2 [m[34m//client.h[m[69C[41m [m[14C[7m|[m
[33m  3 [m[34m//This file contains the main BST data structure and manager class derived from[m[34m[41m [m[34mthe [m[10C[7m|[m
[33m  4 [m[34m//BST implements an algorithm to rotate nodes once either height on the left or[m[34m[41m [m[34mright [m[8C[7m|[m
[33m  5 [m[34m//side gets to a certain size. This helps rebalance the tree and avoids a LLL[m  [41m [m[14C[7m|[m
[33m  6 [m[34m//situation. It can insert, rotate, remove, display, and remove all.[m[11C[41m [m[14C[7m|[m
[33m  7 [m[34m//The manager class provides an interface with the user and allows them to [m    [41m [m[14C[7m|[m
[33m  8 [m[34m//interact with the BST unknowingly by inserting and removing. The can also [m   [41m [m[14C[7m|[m
[33m  9 [m[34m//display and show progress towards acceptance into the CS Program.[m[12C[41m [m[14C[7m|[m
[33m 10 [m[79C[41m [m[14C[7m|[m
[33m 11 [m[79C[41m [m[14C[7m|[m
[33m 12 [m[79C[41m [m[14C[7m|[m
[33m 13 [m[35m#include [m[31m"term.h"[m[62C[41m [m[14C[7m|[m
[33m 14 [m[79C[41m [m[14C[7m|[m
[33m 15 [m[79C[41m [m[14C[7m|[m
[33m 16 [m[79C[41m [m[14C[7m|[m
[33m 17 [m[34m//This is a Binary Search Tree with an algorithm to rotate nodes move a new [m   [41m [m[14C[7m|[m
[33m 18 [m[34m//node to root's possition. Each node in this tree contains a term with a LLL o[m[34m[41mf[m[14C[7m|[m
[33m 19 [m[34m//courses within each term. This tree can insert, rotate, remove, and remove al[m[34m[41ml[m[34m.[m[13C[7m|[m
[33m 20 [m[32mclass[m Pine[69C[41m [m[14C[7m|[m
[33m 21 [m{[78C[41m [m[14C[7m|[m
[33m 22 [m    [33mpublic[m:[68C[41m [m[14C[7m|[m
[33m 23 [m[8CPine();[64C[41m [m[14C[7m|[m
[33m 24 [m[8C~Pine();[63C[41m [m[14C[7m|[m
[33m 25 [m[8C[32mint[m insert(Node *& root, [32mint[m new_year, [32mint[m new_term); [34m//Insert node[m    [41m [m[14C[7m|[m
[33m 26 [m[8C[32mvoid[m rotation(); [34m//rotate nodes[m[40C[41m [m[14C[7m|[m
[33m 27 [m[8C[32mint[m remove(Node *& root, [32mint[m rm_year, [32mint[m rm_term); [34m//remove nodes[m     [41m [m[14C[7m|[m
[33m 28 [m[8C[32mvoid[m display(Node * root) [32mconst[m; [34m//display all nodes[m[19C[41m [m[14C[7m|[m
[33m 29 [m[8C[32mvoid[m remove_all(Node *& root); [34m//remove all nodes[m[22C[41m [m[14C[7m|[m
[33m 30 [m[79C[41m [m[14C[7m|[m
[33m 31 [m    [33mprotected[m:[65C[41m [m[14C[7m|[m
[33m 32 [m[12CNode * root; [34m//Holds the root of the tree[m[26C[41m [m[14C[7m|[m
[33m 33 [m[12C[32mint[m left_height; [34m//Holds the height of the left side[m[15C[41m [m[14C[7m|[m
[33m 34 [m[12C[32mint[m right_height; [34m//Holds the height of the right side[m[13C[41m [m[14C[7m|[m
[33m 35 [m};[77C[41m [m[14C[7m|[m
[33m 36 [m[79C[41m [m[14C[7m|[m
[33m 37 [m[79C[41m [m[14C[7m|[m
[33m 38 [m[79C[41m [m[14C[7m|[m
[33m 39 [m[34m//This class acts as an interface for the user and manages the whole program[m   [41m [m[14C[7m|[m
[33m 40 [m[34m//overall. It gives a prompt to the user, has a function that controls the flow[m[41m [m[14C[7m|[m
[33m 41 [m[34m//of the program, selects a term to insert, recieves gpa and credits from each[m [41m [m[14C[7m|[m
[33m 42 [m[34m//term, calculates the gpa from data received, and evaluates user's progress [m  [41m [m[14C[7m|[m
[33m 43 [m[34m//towards acceptance into the CS program. [m[37C[41m [m[14C[7m|[m
[33m 44 [m[32mclass[m Client: [33mpublic[m Pine[54C[41m [m[14C[7m|[m
[33m 45 [m{[78C[41m [m[14C[7m|[m
[33m 46 [m    [33mpublic[m:[68C[41m [m[14C[7m|[m
[33m 47 [m[8CClient();[62C[41m [m[14C[7m|[m
[33m 48 [m[8C[32mint[m prompt(); [34m//Gives user options to perform[m[26C[41m [m[14C[7m|[m
[33m 49 [m[8C[32mint[m operation(); [34m//Controls flow of program[m[28C[41m [m[14C[7m|[m
[1m[7mclient.h                                                                        1,1            Top [m[2;100H[33m  1 [m[34m//Cody Herberholz, CS202, Program #2[m[43C[41m [m[3;100H[33m  2 [m[34m//client.cpp[m[67C[41m [m[4;100H[33m  3 [m[34m//This file implements the Pine and Client Classes which create the main data [m [41m [m[5;100H[33m  4 [m[34m//structure and allow the user to interact with the program by providing an [m   [41m [m[6;100H[33m  5 [m[34m//interface. The BST can insert, rotate nodes, remove, and remove all. The mana[m[34m[41mg[m[34mer[m[7;100H[33m  6 [m[34m//class interacts with the BST by inserting and removing. It also provides and [m[41m [m[8;100H[33m  7 [m[34m//interface for the user, displaces the term and classes being taken, and then [m[41m [m[9;100H[33m  8 [m[34m//shows progress towards the CS degree.[m[40C[41m [m[10;100H[33m  9 [m[79C[41m [m[11;100H[33m 10 [m[79C[41m [m[12;100H[33m 11 [m[79C[41m [m[13;100H[33m 12 [m[35m#include [m[31m"client.h"[m[60C[41m [m[14;100H[33m 13 using[m [32mnamespace[m std;[59C[41m [m[15;100H[33m 14 [m[79C[41m [m[16;100H[33m 15 [m[79C[41m [m[17;100H[33m 16 [m[79C[41m [m[18;100H[33m 17 [m[34m//Constructor for the Pine Class. Initalizes its data members[m[18C[41m [m[19;100H[33m 18 [mPine::Pine(): root([31m0[m),left_height([31m0[m),right_height([31m0[m) {}[24C[41m [m[20;100H[33m 19 [m[79C[41m [m[21;100H[33m 20 [m[79C[41m [m[22;100H[33m 21 [m[79C[41m [m[23;100H[33m 22 [m[34m//Dealocates data by calling upon the remove function[m[26C[41m [m[24;100H[33m 23 [mPine::~Pine()[66C[41m [m[25;100H[33m 24 [m{[78C[41m [m[26;100H[33m 25 [m    remove_all(root);[58C[41m [m[27;100H[33m 26 [m}[78C[41m [m[28;100H[33m 27 [m[79C[41m [m[29;100H[33m 28 [m[79C[41m [m[30;100H[33m 29 [m[79C[41m [m[31;100H[33m 30 [m[34m//Task: Inserts into the BST. If a LLL situation arises then a count is started[m[41m [m[32;100H[33m 31 [m[34m//      to bring about a countdown for a rotation. If the years match then it[m  [41m [m[33;100H[33m 32 [m[34m//      checks for the term and inserts node based on term as well as year.[m    [41m [m[34;100H[33m 33 [m[34m//Input:  Root is passed in by reference to recursively add to the BST and the[m [41m [m[35;100H[33m 34 [m[34m//        user's year and term are passed in to insert into new node.[m[10C[41m [m[36;100H[33m 35 [m[34m//Output: Returns a 1 if node is added and zero if something went wrong. Also [m [41m [m[37;100H[33m 36 [m[34m//        increments the left and right height data members within function.[m   [41m [m[38;100H[33m 37 [m[32mint[m Pine:: insert(Node *& root, [32mint[m new_year, [32mint[m new_term)[20C[41m [m[39;100H[33m 38 [m{[78C[41m [m[40;100H[33m 39 [m    [32mint[m check_year = [31m0[m;[34m//Holds # showing whether new year is greater or less th[m[34m[41ma[m[34mn current year[m[41;100H[33m 40 [m    [32mint[m check_term = [31m0[m;[34m//Holds # showing whether new term is greater or less th[m[34m[41ma[m[34mn current term[m[42;100H[33m 41 [m[79C[41m [m[43;100H[33m 42 [m    [33mif[m(!root)[66C[41m [m[44;100H[33m 43 [m    {[74C[41m [m[45;100H[33m 44 [m[8Croot = [33mnew[m Node;[55C[41m [m[46;100H[33m 45 [m[8Croot->insert_date(new_year, new_term);[34m//Inserts date into node[m[9C[41m [m[47;100H[33m 46 [m[8Croot->add_course();[34m//begins addition of a course[m[23C[41m [m[48;100H[33m 47 [8Creturn[m [31m1[m;[62C[41m [m[49;100H[33m 48 [m[79C[41m [m[50;100H[33m 49 [m    }[74C[41m [m[51;100H[7mclient.cpp                                                                      1,1            Top[2;5H[?12l[?25h[?25l[m[51;81H[1m[7m2,[3;5H[?12l[?25h[?25l[51;81H3,[4;5H[?12l[?25h[m[51;1H[7mclient.h[m[1m[7m [m[7m                                                                        [?25l3,1            Top[m[1m[7m [m[7m [m[1m[7mclient.cpp                                                                      1,1            Top[m[1;11H[1mcpp [2;104H[?12l[?25h[?25l[m[51;180H[1m[7m2,[3;104H[?12l[?25h[?25l[51;180H3,[4;104H[?12l[?25h[?25l[51;180H4,[5;104H[?12l[?25h[?25l[51;180H5,[6;104H[?12l[?25h[?25l[51;180H6,[7;104H[?12l[?25h[?25l[51;180H7,[8;104H[?12l[?25h[?25l[51;180H8,[9;104H[?12l[?25h[?25l[51;180H9,0-1[10;104H[?12l[?25h[?25l[51;180H10,0-1[11;104H[?12l[?25h[?25l[51;181H1,[12;104H[?12l[?25h[?25l[51;181H2,1   [13;104H[?12l[?25h[?25l[51;181H3,[14;104H[?12l[?25h[?25l[51;181H4,0-1[15;104H[?12l[?25h[?25l[51;181H5,[16;104H[?12l[?25h[?25l[51;181H6,[17;104H[?12l[?25h[?25l[51;181H7,1   [18;104H[?12l[?25h[?25l[51;181H8,[19;104H[?12l[?25h[?25l[51;181H9,0-1[20;104H[?12l[?25h[?25l[51;180H20,[21;104H[?12l[?25h[?25l[51;181H1,[22;104H[?12l[?25h[?25l[51;181H2,1   [23;104H[?12l[?25h[?25l[51;181H3,[24;104H[?12l[?25h[?25l[m[25;104H[46m{[27;104H}[m[51;181H[1m[7m4,[25;104H[?12l[?25h[?25l[m{[27;104H}[51;181H[1m[7m5,[26;104H[?12l[?25h[?25l[m[25;104H[46m{[27;104H}[m[51;181H[1m[7m6,[27;104H[?12l[?25h[?25l[m[25;104H{[27;104H}[51;181H[1m[7m7,0-1[28;104H[?12l[?25h[?25l[51;181H8,[29;104H[?12l[?25h[?25l[51;181H9,[30;104H[?12l[?25h[?25l[51;180H30,1   [31;104H[?12l[?25h[?25l[51;181H1,[32;104H[?12l[?25h[?25l[51;181H2,[33;104H[?12l[?25h[?25l[51;181H3,[34;104H[?12l[?25h[?25l[51;181H4,[35;104H[?12l[?25h[?25l[51;181H5,[36;104H[?12l[?25h[?25l[51;181H6,[37;104H[?12l[?25h[?25l[51;181H7,[38;104H[?12l[?25h[?25l[51;181H8,[39;104H[?12l[?25h[?25l[51;181H9,[40;104H[?12l[?25h[?25l[51;180H40,[41;104H[?12l[?25h[?25l[51;181H1,0-1[42;104H[?12l[?25h[?25l[51;181H2,1   [43;104H[?12l[?25h[?25l[51;181H3,[44;104H[?12l[?25h[?25l[51;181H4,[45;104H[?12l[?25h[?25l[51;181H5,[46;104H[?12l[?25h[?25l[51;181H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m  6 [m[34m//class interacts with the BST by inserting and removing. It also provides and [m[41m [m              [3;100H[33m  7 [m[34m//interface for the user, displaces the term and classes being taken, and then [m[41m [m              [4;100H[33m  8 [m[34m//shows progress towards the CS degree.[m                                        [41m [m              [5;100H[33m  9 [m                                                                               [41m [m              [6;100H[33m 10 [m                                                                               [41m [m              [7;100H[33m 11 [m                                                                               [41m [m              [8;100H[33m 12 [m[35m#include [m[31m"client.h"[m                                                            [41m [m              [9;100H[33m 13 using[m [32mnamespace[m std;                                                           [41m [m              [10;100H[33m 14 [m                                                                               [41m [m              [11;100H[33m 15 [m                                                                               [41m [m              [12;100H[33m 16 [m                                                                               [41m [m              [13;100H[33m 17 [m[34m//Constructor for the Pine Class. Initalizes its data members[m                  [41m [m              [14;100H[33m 18 [mPine::Pine(): root([31m0[m),left_height([31m0[m),right_height([31m0[m) {}                        [41m [m              [15;100H[33m 19 [m                                                                               [41m [m              [16;100H[33m 20 [m                                                                               [41m [m              [17;100H[33m 21 [m                                                                               [41m [m              [18;100H[33m 22 [m[34m//Dealocates data by calling upon the remove function[m                          [41m [m              [19;100H[33m 23 [mPine::~Pine()                                                                  [41m [m              [20;100H[33m 24 [m{                                                                              [41m [m              [21;100H[33m 25 [m    remove_all(root);                                                          [41m [m              [22;100H[33m 26 [m}                                                                              [41m [m              [23;100H[33m 27 [m                                                                               [41m [m              [24;100H[33m 28 [m                                                                               [41m [m              [25;100H[33m 29 [m                                                                               [41m [m              [26;100H[33m 30 [m[34m//Task: Inserts into the BST. If a LLL situation arises then a count is started[m[41m [m              [27;100H[33m 31 [m[34m//      to bring about a countdown for a rotation. If the years match then it[m  [41m [m              [28;100H[33m 32 [m[34m//      checks for the term and inserts node based on term as well as year.[m    [41m [m              [29;100H[33m 33 [m[34m//Input:  Root is passed in by reference to recursively add to the BST and the[m [41m [m              [30;100H[33m 34 [m[34m//        user's year and term are passed in to insert into new node.[m          [41m [m              [31;100H[33m 35 [m[34m//Output: Returns a 1 if node is added and zero if something went wrong. Also [m [41m [m              [32;100H[33m 36 [m[34m//        increments the left and right height data members within function.[m   [41m [m              [33;100H[33m 37 [m[32mint[m Pine:: insert(Node *& root, [32mint[m new_year, [32mint[m new_term)                    [41m [m              [34;100H[33m 38 [m{                                                                              [41m [m              [35;100H[33m 39 [m    [32mint[m check_year = [31m0[m;[34m//Holds # showing whether new year is greater or less th[m[34m[41ma[m[34mn current year[m[36;100H[33m 40 [m    [32mint[m check_term = [31m0[m;[34m//Holds # showing whether new term is greater or less th[m[34m[41ma[m[34mn current term[m[37;100H[33m 41 [m                                                                               [41m [m              [38;100H[33m 42 [m    [33mif[m(!root)                                                                  [41m [m              [39;100H[33m 43 [m    {                                                                          [41m [m              [40;100H[33m 44 [m        root = [33mnew[m Node;                                                       [41m [m              [41;100H[33m 45 [m        root->insert_date(new_year, new_term);[34m//Inserts date into node[m         [41m [m              [42;100H[33m 46 [m        root->add_course();[34m//begins addition of a course[m                       [41m [m              [43;100H[33m 47 [m        [33mreturn[m [31m1[m;                                                              [41m [m              [44;100H[33m 48 [m                                                                               [41m [m              [45;100H[33m 49 [m    }                                                                          [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m 50 [m[79C[41m [m[47;100H[33m 51 [m    [33mif[m(!root->go_left() && root->go_right())[35C[41m [m[48;100H[33m 52 [m[8C++right_height; [34m//Increments if LLL situation arises on the right side[m [41m [m[49;100H[33m 53 [m    [33mif[m(root->go_left() && !root->go_right())[35C[41m [m[50;100H[33m 54 [m[8C++left_height; [34m//Increments if LLL situation arises on the left side[m   [41m [m[52;1H[K[51;181H[1m[7m7,[12C 1%[43;104H[?12l[?25h[?25l[51;181H8,0-1[44;104H[?12l[?25h[?25l[51;181H9,1   [45;104H[?12l[?25h[?25l[51;180H50,[46;104H[?12l[?25h[?25l[51;181H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m 11 [m                                                                               [41m [m              [3;100H[33m 12 [m[35m#include [m[31m"client.h"[m                                                            [41m [m              [4;100H[33m 13 using[m [32mnamespace[m std;                                                           [41m [m              [5;100H[33m 14 [m                                                                               [41m [m              [6;100H[33m 15 [m                                                                               [41m [m              [7;100H[33m 16 [m                                                                               [41m [m              [8;100H[33m 17 [m[34m//Constructor for the Pine Class. Initalizes its data members[m                  [41m [m              [9;100H[33m 18 [mPine::Pine(): root([31m0[m),left_height([31m0[m),right_height([31m0[m) {}                        [41m [m              [10;100H[33m 19 [m                                                                               [41m [m              [11;100H[33m 20 [m                                                                               [41m [m              [12;100H[33m 21 [m                                                                               [41m [m              [13;100H[33m 22 [m[34m//Dealocates data by calling upon the remove function[m                          [41m [m              [14;100H[33m 23 [mPine::~Pine()                                                                  [41m [m              [15;100H[33m 24 [m{                                                                              [41m [m              [16;100H[33m 25 [m    remove_all(root);                                                          [41m [m              [17;100H[33m 26 [m}                                                                              [41m [m              [18;100H[33m 27 [m                                                                               [41m [m              [19;100H[33m 28 [m                                                                               [41m [m              [20;100H[33m 29 [m                                                                               [41m [m              [21;100H[33m 30 [m[34m//Task: Inserts into the BST. If a LLL situation arises then a count is started[m[41m [m              [22;100H[33m 31 [m[34m//      to bring about a countdown for a rotation. If the years match then it[m  [41m [m              [23;100H[33m 32 [m[34m//      checks for the term and inserts node based on term as well as year.[m    [41m [m              [24;100H[33m 33 [m[34m//Input:  Root is passed in by reference to recursively add to the BST and the[m [41m [m              [25;100H[33m 34 [m[34m//        user's year and term are passed in to insert into new node.[m          [41m [m              [26;100H[33m 35 [m[34m//Output: Returns a 1 if node is added and zero if something went wrong. Also [m [41m [m              [27;100H[33m 36 [m[34m//        increments the left and right height data members within function.[m   [41m [m              [28;100H[33m 37 [m[32mint[m Pine:: insert(Node *& root, [32mint[m new_year, [32mint[m new_term)                    [41m [m              [29;100H[33m 38 [m{                                                                              [41m [m              [30;100H[33m 39 [m    [32mint[m check_year = [31m0[m;[34m//Holds # showing whether new year is greater or less th[m[34m[41ma[m[34mn current year[m[31;100H[33m 40 [m    [32mint[m check_term = [31m0[m;[34m//Holds # showing whether new term is greater or less th[m[34m[41ma[m[34mn current term[m[32;100H[33m 41 [m                                                                               [41m [m              [33;100H[33m 42 [m    [33mif[m(!root)                                                                  [41m [m              [34;100H[33m 43 [m    {                                                                          [41m [m              [35;100H[33m 44 [m        root = [33mnew[m Node;                                                       [41m [m              [36;100H[33m 45 [m        root->insert_date(new_year, new_term);[34m//Inserts date into node[m         [41m [m              [37;100H[33m 46 [m        root->add_course();[34m//begins addition of a course[m                       [41m [m              [38;100H[33m 47 [m        [33mreturn[m [31m1[m;                                                              [41m [m              [39;100H[33m 48 [m                                                                               [41m [m              [40;100H[33m 49 [m    }                                                                          [41m [m              [41;100H[33m 50 [m                                                                               [41m [m              [42;100H[33m 51 [m    [33mif[m(!root->go_left() && root->go_right())                                   [41m [m              [43;100H[33m 52 [m        ++right_height; [34m//Increments if LLL situation arises on the right side[m [41m [m              [44;100H[33m 53 [m    [33mif[m(root->go_left() && !root->go_right())                                   [41m [m              [45;100H[33m 54 [m        ++left_height; [34m//Increments if LLL situation arises on the left side[m   [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m 55 [m[79C[41m [m[47;100H[33m 56 [m    check_year = root->compare_year(new_year);[33C[41m [m[48;100H[33m 57 [m    check_term = root->compare_term(new_term);[33C[41m [m[49;100H[33m 58 [m[79C[41m [m[50;100H[33m 59 [m    [33mif[m([31m1[m == check_year)[34m//If year is equal[m[38C[41m [m[51;181H[1m[7m2,[13C2%[43;104H[?12l[?25h[?25l[51;181H3,[44;104H[?12l[?25h[?25l[51;181H4,[45;104H[?12l[?25h[?25l[51;181H5,0-1[46;104H[?12l[?25h[?25l[51;181H6,1   [47;104H[?12l[?25h[?25l[m[2;100H[33m 16 [m                                                                               [41m [m              [3;100H[33m 17 [m[34m//Constructor for the Pine Class. Initalizes its data members[m                  [41m [m              [4;100H[33m 18 [mPine::Pine(): root([31m0[m),left_height([31m0[m),right_height([31m0[m) {}                        [41m [m              [5;100H[33m 19 [m                                                                               [41m [m              [6;100H[33m 20 [m                                                                               [41m [m              [7;100H[33m 21 [m                                                                               [41m [m              [8;100H[33m 22 [m[34m//Dealocates data by calling upon the remove function[m                          [41m [m              [9;100H[33m 23 [mPine::~Pine()                                                                  [41m [m              [10;100H[33m 24 [m{                                                                              [41m [m              [11;100H[33m 25 [m    remove_all(root);                                                          [41m [m              [12;100H[33m 26 [m}                                                                              [41m [m              [13;100H[33m 27 [m                                                                               [41m [m              [14;100H[33m 28 [m                                                                               [41m [m              [15;100H[33m 29 [m                                                                               [41m [m              [16;100H[33m 30 [m[34m//Task: Inserts into the BST. If a LLL situation arises then a count is started[m[41m [m              [17;100H[33m 31 [m[34m//      to bring about a countdown for a rotation. If the years match then it[m  [41m [m              [18;100H[33m 32 [m[34m//      checks for the term and inserts node based on term as well as year.[m    [41m [m              [19;100H[33m 33 [m[34m//Input:  Root is passed in by reference to recursively add to the BST and the[m [41m [m              [20;100H[33m 34 [m[34m//        user's year and term are passed in to insert into new node.[m          [41m [m              [21;100H[33m 35 [m[34m//Output: Returns a 1 if node is added and zero if something went wrong. Also [m [41m [m              [22;100H[33m 36 [m[34m//        increments the left and right height data members within function.[m   [41m [m              [23;100H[33m 37 [m[32mint[m Pine:: insert(Node *& root, [32mint[m new_year, [32mint[m new_term)                    [41m [m              [24;100H[33m 38 [m{                                                                              [41m [m              [25;100H[33m 39 [m    [32mint[m check_year = [31m0[m;[34m//Holds # showing whether new year is greater or less th[m[34m[41ma[m[34mn current year[m[26;100H[33m 40 [m    [32mint[m check_term = [31m0[m;[34m//Holds # showing whether new term is greater or less th[m[34m[41ma[m[34mn current term[m[27;100H[33m 41 [m                                                                               [41m [m              [28;100H[33m 42 [m    [33mif[m(!root)                                                                  [41m [m              [29;100H[33m 43 [m    {                                                                          [41m [m              [30;100H[33m 44 [m        root = [33mnew[m Node;                                                       [41m [m              [31;100H[33m 45 [m        root->insert_date(new_year, new_term);[34m//Inserts date into node[m         [41m [m              [32;100H[33m 46 [m        root->add_course();[34m//begins addition of a course[m                       [41m [m              [33;100H[33m 47 [m        [33mreturn[m [31m1[m;                                                              [41m [m              [34;100H[33m 48 [m                                                                               [41m [m              [35;100H[33m 49 [m    }                                                                          [41m [m              [36;100H[33m 50 [m                                                                               [41m [m              [37;100H[33m 51 [m    [33mif[m(!root->go_left() && root->go_right())                                   [41m [m              [38;100H[33m 52 [m        ++right_height; [34m//Increments if LLL situation arises on the right side[m [41m [m              [39;100H[33m 53 [m    [33mif[m(root->go_left() && !root->go_right())                                   [41m [m              [40;100H[33m 54 [m        ++left_height; [34m//Increments if LLL situation arises on the left side[m   [41m [m              [41;100H[33m 55 [m                                                                               [41m [m              [42;100H[33m 56 [m    check_year = root->compare_year(new_year);                                 [41m [m              [43;100H[33m 57 [m    check_term = root->compare_term(new_term);                                 [41m [m              [44;100H[33m 58 [m                                                                               [41m [m              [45;100H[33m 59 [m    [33mif[m([31m1[m == check_year)[34m//If year is equal[m                                      [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m 60 [m    {[74C[41m [m[47;100H[33m 61 [8Cif[m([31m1[m == check_term) [34m//If term is less than [m[28C[41m [m[48;100H[33m 62 [12Creturn[m insert(root->go_left(), new_year, new_term);[16C[41m [m[49;100H[33m 63 [m[79C[41m [m[50;100H[33m 64 [8Celse[m [33mif[m([31m2[m == check_term) [34m//If term is greater than[m[21C[41m [m[51;181H[1m[7m7,[13C3%[43;104H[?12l[?25h[?25l[51;181H8,0-1[44;104H[?12l[?25h[?25l[51;181H9,1   [45;104H[?12l[?25h[?25l[51;180H60,[46;104H[?12l[?25h[?25l[51;181H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m 21 [m                                                                               [41m [m              [3;100H[33m 22 [m[34m//Dealocates data by calling upon the remove function[m                          [41m [m              [4;100H[33m 23 [mPine::~Pine()                                                                  [41m [m              [5;100H[33m 24 [m{                                                                              [41m [m              [6;100H[33m 25 [m    remove_all(root);                                                          [41m [m              [7;100H[33m 26 [m}                                                                              [41m [m              [8;100H[33m 27 [m                                                                               [41m [m              [9;100H[33m 28 [m                                                                               [41m [m              [10;100H[33m 29 [m                                                                               [41m [m              [11;100H[33m 30 [m[34m//Task: Inserts into the BST. If a LLL situation arises then a count is started[m[41m [m              [12;100H[33m 31 [m[34m//      to bring about a countdown for a rotation. If the years match then it[m  [41m [m              [13;100H[33m 32 [m[34m//      checks for the term and inserts node based on term as well as year.[m    [41m [m              [14;100H[33m 33 [m[34m//Input:  Root is passed in by reference to recursively add to the BST and the[m [41m [m              [15;100H[33m 34 [m[34m//        user's year and term are passed in to insert into new node.[m          [41m [m              [16;100H[33m 35 [m[34m//Output: Returns a 1 if node is added and zero if something went wrong. Also [m [41m [m              [17;100H[33m 36 [m[34m//        increments the left and right height data members within function.[m   [41m [m              [18;100H[33m 37 [m[32mint[m Pine:: insert(Node *& root, [32mint[m new_year, [32mint[m new_term)                    [41m [m              [19;100H[33m 38 [m{                                                                              [41m [m              [20;100H[33m 39 [m    [32mint[m check_year = [31m0[m;[34m//Holds # showing whether new year is greater or less th[m[34m[41ma[m[34mn current year[m[21;100H[33m 40 [m    [32mint[m check_term = [31m0[m;[34m//Holds # showing whether new term is greater or less th[m[34m[41ma[m[34mn current term[m[22;100H[33m 41 [m                                                                               [41m [m              [23;100H[33m 42 [m    [33mif[m(!root)                                                                  [41m [m              [24;100H[33m 43 [m    {                                                                          [41m [m              [25;100H[33m 44 [m        root = [33mnew[m Node;                                                       [41m [m              [26;100H[33m 45 [m        root->insert_date(new_year, new_term);[34m//Inserts date into node[m         [41m [m              [27;100H[33m 46 [m        root->add_course();[34m//begins addition of a course[m                       [41m [m              [28;100H[33m 47 [m        [33mreturn[m [31m1[m;                                                              [41m [m              [29;100H[33m 48 [m                                                                               [41m [m              [30;100H[33m 49 [m    }                                                                          [41m [m              [31;100H[33m 50 [m                                                                               [41m [m              [32;100H[33m 51 [m    [33mif[m(!root->go_left() && root->go_right())                                   [41m [m              [33;100H[33m 52 [m        ++right_height; [34m//Increments if LLL situation arises on the right side[m [41m [m              [34;100H[33m 53 [m    [33mif[m(root->go_left() && !root->go_right())                                   [41m [m              [35;100H[33m 54 [m        ++left_height; [34m//Increments if LLL situation arises on the left side[m   [41m [m              [36;100H[33m 55 [m                                                                               [41m [m              [37;100H[33m 56 [m    check_year = root->compare_year(new_year);                                 [41m [m              [38;100H[33m 57 [m    check_term = root->compare_term(new_term);                                 [41m [m              [39;100H[33m 58 [m                                                                               [41m [m              [40;100H[33m 59 [m    [33mif[m([31m1[m == check_year)[34m//If year is equal[m                                      [41m [m              [41;100H[33m 60 [m    {                                                                          [41m [m              [42;100H[33m 61 [m        [33mif[m([31m1[m == check_term) [34m//If term is less than [m                            [41m [m              [43;100H[33m 62 [m            [33mreturn[m insert(root->go_left(), new_year, new_term);                [41m [m              [44;100H[33m 63 [m                                                                               [41m [m              [45;100H[33m 64 [m        [33melse[m [33mif[m([31m2[m == check_term) [34m//If term is greater than[m                     [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m 65 [12Creturn[m insert(root->go_right(), new_year, new_term);[15C[41m [m[47;100H[33m 66 [m[79C[41m [m[48;100H[33m 67 [8Celse[m [33mif[m([31m3[m == check_term) [34m//If term is equal[m[28C[41m [m[49;100H[33m 68 [m[12Croot->add_course();[48C[41m [m[50;100H[33m 69 [m    }[74C[41m [m[51;181H[1m[7m2,[13C4%[43;104H[?12l[?25h[?25l[51;181H3,0-1[44;104H[?12l[?25h[?25l[51;181H4,1   [45;104H[?12l[?25h[?25l[51;181H5,[46;104H[?12l[?25h[?25l[51;181H6,0-1[47;104H[?12l[?25h[?25l[m[2;100H[33m 26 [m}                                                                              [41m [m              [3;100H[33m 27 [m                                                                               [41m [m              [4;100H[33m 28 [m                                                                               [41m [m              [5;100H[33m 29 [m                                                                               [41m [m              [6;100H[33m 30 [m[34m//Task: Inserts into the BST. If a LLL situation arises then a count is started[m[41m [m              [7;100H[33m 31 [m[34m//      to bring about a countdown for a rotation. If the years match then it[m  [41m [m              [8;100H[33m 32 [m[34m//      checks for the term and inserts node based on term as well as year.[m    [41m [m              [9;100H[33m 33 [m[34m//Input:  Root is passed in by reference to recursively add to the BST and the[m [41m [m              [10;100H[33m 34 [m[34m//        user's year and term are passed in to insert into new node.[m          [41m [m              [11;100H[33m 35 [m[34m//Output: Returns a 1 if node is added and zero if something went wrong. Also [m [41m [m              [12;100H[33m 36 [m[34m//        increments the left and right height data members within function.[m   [41m [m              [13;100H[33m 37 [m[32mint[m Pine:: insert(Node *& root, [32mint[m new_year, [32mint[m new_term)                    [41m [m              [14;100H[33m 38 [m{                                                                              [41m [m              [15;100H[33m 39 [m    [32mint[m check_year = [31m0[m;[34m//Holds # showing whether new year is greater or less th[m[34m[41ma[m[34mn current year[m[16;100H[33m 40 [m    [32mint[m check_term = [31m0[m;[34m//Holds # showing whether new term is greater or less th[m[34m[41ma[m[34mn current term[m[17;100H[33m 41 [m                                                                               [41m [m              [18;100H[33m 42 [m    [33mif[m(!root)                                                                  [41m [m              [19;100H[33m 43 [m    {                                                                          [41m [m              [20;100H[33m 44 [m        root = [33mnew[m Node;                                                       [41m [m              [21;100H[33m 45 [m        root->insert_date(new_year, new_term);[34m//Inserts date into node[m         [41m [m              [22;100H[33m 46 [m        root->add_course();[34m//begins addition of a course[m                       [41m [m              [23;100H[33m 47 [m        [33mreturn[m [31m1[m;                                                              [41m [m              [24;100H[33m 48 [m                                                                               [41m [m              [25;100H[33m 49 [m    }                                                                          [41m [m              [26;100H[33m 50 [m                                                                               [41m [m              [27;100H[33m 51 [m    [33mif[m(!root->go_left() && root->go_right())                                   [41m [m              [28;100H[33m 52 [m        ++right_height; [34m//Increments if LLL situation arises on the right side[m [41m [m              [29;100H[33m 53 [m    [33mif[m(root->go_left() && !root->go_right())                                   [41m [m              [30;100H[33m 54 [m        ++left_height; [34m//Increments if LLL situation arises on the left side[m   [41m [m              [31;100H[33m 55 [m                                                                               [41m [m              [32;100H[33m 56 [m    check_year = root->compare_year(new_year);                                 [41m [m              [33;100H[33m 57 [m    check_term = root->compare_term(new_term);                                 [41m [m              [34;100H[33m 58 [m                                                                               [41m [m              [35;100H[33m 59 [m    [33mif[m([31m1[m == check_year)[34m//If year is equal[m                                      [41m [m              [36;100H[33m 60 [m    {                                                                          [41m [m              [37;100H[33m 61 [m        [33mif[m([31m1[m == check_term) [34m//If term is less than [m                            [41m [m              [38;100H[33m 62 [m            [33mreturn[m insert(root->go_left(), new_year, new_term);                [41m [m              [39;100H[33m 63 [m                                                                               [41m [m              [40;100H[33m 64 [m        [33melse[m [33mif[m([31m2[m == check_term) [34m//If term is greater than[m                     [41m [m              [41;100H[33m 65 [m            [33mreturn[m insert(root->go_right(), new_year, new_term);               [41m [m              [42;100H[33m 66 [m                                                                               [41m [m              [43;100H[33m 67 [m        [33melse[m [33mif[m([31m3[m == check_term) [34m//If term is equal[m                            [41m [m              [44;100H[33m 68 [m            root->add_course();                                                [41m [m              [45;100H[33m 69 [m    }                                                                          [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m 70 [m[79C[41m [m[47;100H[33m 71 [m    [33melse[m [33mif[m([31m2[m == check_year) [34m//If year is less than[m[28C[41m [m[48;100H[33m 72 [8Creturn[m insert(root->go_left(), new_year, new_term);[20C[41m [m[49;100H[33m 73 [m[79C[41m [m[50;100H[33m 74 [m    [33melse[m [33mif[m([31m3[m == check_year) [34m//If year is greater than[m[25C[41m [m[51;181H[1m[7m7,1   [9C6%[43;104H[?12l[?25h[?25l[51;181H8,[44;104H[?12l[?25h[?25l[51;181H9,[45;104H[?12l[?25h[?25l[51;180H70,0-1[46;104H[?12l[?25h[?25l[51;181H1,1   [47;104H[?12l[?25h[?25l[m[2;100H[33m 31 [m[34m//      to bring about a countdown for a rotation. If the years match then it[m  [41m [m              [3;100H[33m 32 [m[34m//      checks for the term and inserts node based on term as well as year.[m    [41m [m              [4;100H[33m 33 [m[34m//Input:  Root is passed in by reference to recursively add to the BST and the[m [41m [m              [5;100H[33m 34 [m[34m//        user's year and term are passed in to insert into new node.[m          [41m [m              [6;100H[33m 35 [m[34m//Output: Returns a 1 if node is added and zero if something went wrong. Also [m [41m [m              [7;100H[33m 36 [m[34m//        increments the left and right height data members within function.[m   [41m [m              [8;100H[33m 37 [m[32mint[m Pine:: insert(Node *& root, [32mint[m new_year, [32mint[m new_term)                    [41m [m              [9;100H[33m 38 [m{                                                                              [41m [m              [10;100H[33m 39 [m    [32mint[m check_year = [31m0[m;[34m//Holds # showing whether new year is greater or less th[m[34m[41ma[m[34mn current year[m[11;100H[33m 40 [m    [32mint[m check_term = [31m0[m;[34m//Holds # showing whether new term is greater or less th[m[34m[41ma[m[34mn current term[m[12;100H[33m 41 [m                                                                               [41m [m              [13;100H[33m 42 [m    [33mif[m(!root)                                                                  [41m [m              [14;100H[33m 43 [m    {                                                                          [41m [m              [15;100H[33m 44 [m        root = [33mnew[m Node;                                                       [41m [m              [16;100H[33m 45 [m        root->insert_date(new_year, new_term);[34m//Inserts date into node[m         [41m [m              [17;100H[33m 46 [m        root->add_course();[34m//begins addition of a course[m                       [41m [m              [18;100H[33m 47 [m        [33mreturn[m [31m1[m;                                                              [41m [m              [19;100H[33m 48 [m                                                                               [41m [m              [20;100H[33m 49 [m    }                                                                          [41m [m              [21;100H[33m 50 [m                                                                               [41m [m              [22;100H[33m 51 [m    [33mif[m(!root->go_left() && root->go_right())                                   [41m [m              [23;100H[33m 52 [m        ++right_height; [34m//Increments if LLL situation arises on the right side[m [41m [m              [24;100H[33m 53 [m    [33mif[m(root->go_left() && !root->go_right())                                   [41m [m              [25;100H[33m 54 [m        ++left_height; [34m//Increments if LLL situation arises on the left side[m   [41m [m              [26;100H[33m 55 [m                                                                               [41m [m              [27;100H[33m 56 [m    check_year = root->compare_year(new_year);                                 [41m [m              [28;100H[33m 57 [m    check_term = root->compare_term(new_term);                                 [41m [m              [29;100H[33m 58 [m                                                                               [41m [m              [30;100H[33m 59 [m    [33mif[m([31m1[m == check_year)[34m//If year is equal[m                                      [41m [m              [31;100H[33m 60 [m    {                                                                          [41m [m              [32;100H[33m 61 [m        [33mif[m([31m1[m == check_term) [34m//If term is less than [m                            [41m [m              [33;100H[33m 62 [m            [33mreturn[m insert(root->go_left(), new_year, new_term);                [41m [m              [34;100H[33m 63 [m                                                                               [41m [m              [35;100H[33m 64 [m        [33melse[m [33mif[m([31m2[m == check_term) [34m//If term is greater than[m                     [41m [m              [36;100H[33m 65 [m            [33mreturn[m insert(root->go_right(), new_year, new_term);               [41m [m              [37;100H[33m 66 [m                                                                               [41m [m              [38;100H[33m 67 [m        [33melse[m [33mif[m([31m3[m == check_term) [34m//If term is equal[m                            [41m [m              [39;100H[33m 68 [m            root->add_course();                                                [41m [m              [40;100H[33m 69 [m    }                                                                          [41m [m              [41;100H[33m 70 [m                                                                               [41m [m              [42;100H[33m 71 [m    [33melse[m [33mif[m([31m2[m == check_year) [34m//If year is less than[m                            [41m [m              [43;100H[33m 72 [m        [33mreturn[m insert(root->go_left(), new_year, new_term);                    [41m [m              [44;100H[33m 73 [m                                                                               [41m [m              [45;100H[33m 74 [m    [33melse[m [33mif[m([31m3[m == check_year) [34m//If year is greater than[m                         [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m 75 [8Creturn[m insert(root->go_right(), new_year, new_term);[19C[41m [m[47;100H[33m 76 [m[79C[41m [m[48;100H[33m 77 [m[79C[41m [m[49;100H[33m 78 [m    [33mreturn[m [31m0[m;[66C[41m [m[50;100H[33m 79 [m}[78C[41m [m[51;181H[1m[7m2,[13C7%[43;104H[?12l[?25h[?25l[51;181H3,0-1[44;104H[?12l[?25h[?25l[51;181H4,1   [45;104H[?12l[?25h[?25l[51;181H5,[46;104H[?12l[?25h[?25l[51;181H6,0-1[47;104H[?12l[?25h[?25l[m[2;100H[33m 36 [m[34m//        increments the left and right height data members within function.[m   [41m [m              [3;100H[33m 37 [m[32mint[m Pine:: insert(Node *& root, [32mint[m new_year, [32mint[m new_term)                    [41m [m              [4;100H[33m 38 [m{                                                                              [41m [m              [5;100H[33m 39 [m    [32mint[m check_year = [31m0[m;[34m//Holds # showing whether new year is greater or less th[m[34m[41ma[m[34mn current year[m[6;100H[33m 40 [m    [32mint[m check_term = [31m0[m;[34m//Holds # showing whether new term is greater or less th[m[34m[41ma[m[34mn current term[m[7;100H[33m 41 [m                                                                               [41m [m              [8;100H[33m 42 [m    [33mif[m(!root)                                                                  [41m [m              [9;100H[33m 43 [m    {                                                                          [41m [m              [10;100H[33m 44 [m        root = [33mnew[m Node;                                                       [41m [m              [11;100H[33m 45 [m        root->insert_date(new_year, new_term);[34m//Inserts date into node[m         [41m [m              [12;100H[33m 46 [m        root->add_course();[34m//begins addition of a course[m                       [41m [m              [13;100H[33m 47 [m        [33mreturn[m [31m1[m;                                                              [41m [m              [14;100H[33m 48 [m                                                                               [41m [m              [15;100H[33m 49 [m    }                                                                          [41m [m              [16;100H[33m 50 [m                                                                               [41m [m              [17;100H[33m 51 [m    [33mif[m(!root->go_left() && root->go_right())                                   [41m [m              [18;100H[33m 52 [m        ++right_height; [34m//Increments if LLL situation arises on the right side[m [41m [m              [19;100H[33m 53 [m    [33mif[m(root->go_left() && !root->go_right())                                   [41m [m              [20;100H[33m 54 [m        ++left_height; [34m//Increments if LLL situation arises on the left side[m   [41m [m              [21;100H[33m 55 [m                                                                               [41m [m              [22;100H[33m 56 [m    check_year = root->compare_year(new_year);                                 [41m [m              [23;100H[33m 57 [m    check_term = root->compare_term(new_term);                                 [41m [m              [24;100H[33m 58 [m                                                                               [41m [m              [25;100H[33m 59 [m    [33mif[m([31m1[m == check_year)[34m//If year is equal[m                                      [41m [m              [26;100H[33m 60 [m    {                                                                          [41m [m              [27;100H[33m 61 [m        [33mif[m([31m1[m == check_term) [34m//If term is less than [m                            [41m [m              [28;100H[33m 62 [m            [33mreturn[m insert(root->go_left(), new_year, new_term);                [41m [m              [29;100H[33m 63 [m                                                                               [41m [m              [30;100H[33m 64 [m        [33melse[m [33mif[m([31m2[m == check_term) [34m//If term is greater than[m                     [41m [m              [31;100H[33m 65 [m            [33mreturn[m insert(root->go_right(), new_year, new_term);               [41m [m              [32;100H[33m 66 [m                                                                               [41m [m              [33;100H[33m 67 [m        [33melse[m [33mif[m([31m3[m == check_term) [34m//If term is equal[m                            [41m [m              [34;100H[33m 68 [m            root->add_course();                                                [41m [m              [35;100H[33m 69 [m    }                                                                          [41m [m              [36;100H[33m 70 [m                                                                               [41m [m              [37;100H[33m 71 [m    [33melse[m [33mif[m([31m2[m == check_year) [34m//If year is less than[m                            [41m [m              [38;100H[33m 72 [m        [33mreturn[m insert(root->go_left(), new_year, new_term);                    [41m [m              [39;100H[33m 73 [m                                                                               [41m [m              [40;100H[33m 74 [m    [33melse[m [33mif[m([31m3[m == check_year) [34m//If year is greater than[m                         [41m [m              [41;100H[33m 75 [m        [33mreturn[m insert(root->go_right(), new_year, new_term);                   [41m [m              [42;100H[33m 76 [m                                                                               [41m [m              [43;100H[33m 77 [m                                                                               [41m [m              [44;100H[33m 78 [m    [33mreturn[m [31m0[m;                                                                  [41m [m              [45;100H[33m 79 [m}                                                                              [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m 80 [m[79C[41m [m[47;100H[33m 81 [m[79C[41m [m[48;100H[33m 82 [m[79C[41m [m[49;100H[33m 83 [m[34m//Task:   Rotates the nodes to avoid a LLL situation by make a different node [m [41m [m[50;100H[33m 84 [m[34m//        the new root. Handles situations for both the left and right side.[m   [41m [m[51;181H[1m[7m7,1   [9C8%[43;104H[?12l[?25h[?25l[51;181H8,[44;104H[?12l[?25h[?25l[m[4;104H[46m{[45;104H}[m[51;181H[1m[7m9,[45;104H[?12l[?25h[?25l[m[4;104H{[45;104H}[51;180H[1m[7m80,0-1[46;104H[?12l[?25h[?25l[51;181H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m 41 [m                                                                               [41m [m              [3;100H[33m 42 [m    [33mif[m(!root)                                                                  [41m [m              [4;100H[33m 43 [m    {                                                                          [41m [m              [5;100H[33m 44 [m        root = [33mnew[m Node;                                                       [41m [m              [6;100H[33m 45 [m        root->insert_date(new_year, new_term);[34m//Inserts date into node[m         [41m [m              [7;100H[33m 46 [m        root->add_course();[34m//begins addition of a course[m                       [41m [m              [8;100H[33m 47 [m        [33mreturn[m [31m1[m;                                                              [41m [m              [9;100H[33m 48 [m                                                                               [41m [m              [10;100H[33m 49 [m    }                                                                          [41m [m              [11;100H[33m 50 [m                                                                               [41m [m              [12;100H[33m 51 [m    [33mif[m(!root->go_left() && root->go_right())                                   [41m [m              [13;100H[33m 52 [m        ++right_height; [34m//Increments if LLL situation arises on the right side[m [41m [m              [14;100H[33m 53 [m    [33mif[m(root->go_left() && !root->go_right())                                   [41m [m              [15;100H[33m 54 [m        ++left_height; [34m//Increments if LLL situation arises on the left side[m   [41m [m              [16;100H[33m 55 [m                                                                               [41m [m              [17;100H[33m 56 [m    check_year = root->compare_year(new_year);                                 [41m [m              [18;100H[33m 57 [m    check_term = root->compare_term(new_term);                                 [41m [m              [19;100H[33m 58 [m                                                                               [41m [m              [20;100H[33m 59 [m    [33mif[m([31m1[m == check_year)[34m//If year is equal[m                                      [41m [m              [21;100H[33m 60 [m    {                                                                          [41m [m              [22;100H[33m 61 [m        [33mif[m([31m1[m == check_term) [34m//If term is less than [m                            [41m [m              [23;100H[33m 62 [m            [33mreturn[m insert(root->go_left(), new_year, new_term);                [41m [m              [24;100H[33m 63 [m                                                                               [41m [m              [25;100H[33m 64 [m        [33melse[m [33mif[m([31m2[m == check_term) [34m//If term is greater than[m                     [41m [m              [26;100H[33m 65 [m            [33mreturn[m insert(root->go_right(), new_year, new_term);               [41m [m              [27;100H[33m 66 [m                                                                               [41m [m              [28;100H[33m 67 [m        [33melse[m [33mif[m([31m3[m == check_term) [34m//If term is equal[m                            [41m [m              [29;100H[33m 68 [m            root->add_course();                                                [41m [m              [30;100H[33m 69 [m    }                                                                          [41m [m              [31;100H[33m 70 [m                                                                               [41m [m              [32;100H[33m 71 [m    [33melse[m [33mif[m([31m2[m == check_year) [34m//If year is less than[m                            [41m [m              [33;100H[33m 72 [m        [33mreturn[m insert(root->go_left(), new_year, new_term);                    [41m [m              [34;100H[33m 73 [m                                                                               [41m [m              [35;100H[33m 74 [m    [33melse[m [33mif[m([31m3[m == check_year) [34m//If year is greater than[m                         [41m [m              [36;100H[33m 75 [m        [33mreturn[m insert(root->go_right(), new_year, new_term);                   [41m [m              [37;100H[33m 76 [m                                                                               [41m [m              [38;100H[33m 77 [m                                                                               [41m [m              [39;100H[33m 78 [m    [33mreturn[m [31m0[m;                                                                  [41m [m              [40;100H[33m 79 [m}                                                                              [41m [m              [41;100H[33m 80 [m                                                                               [41m [m              [42;100H[33m 81 [m                                                                               [41m [m              [43;100H[33m 82 [m                                                                               [41m [m              [44;100H[33m 83 [m[34m//Task:   Rotates the nodes to avoid a LLL situation by make a different node [m [41m [m              [45;100H[33m 84 [m[34m//        the new root. Handles situations for both the left and right side.[m   [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m 85 [m[34m//Input:  None[m[65C[41m [m[47;100H[33m 86 [m[34m//Output: None[m[65C[41m [m[48;100H[33m 87 [m[32mvoid[m Pine::rotation()[58C[41m [m[49;100H[33m 88 [m{[78C[41m [m[50;100H[33m 89 [m    Node * temp = root; [34m//Used to traverse to the node to become new root[m      [41m [m[51;181H[1m[7m2,[13C9%[43;104H[?12l[?25h[?25l[51;181H3,1   [44;104H[?12l[?25h[?25l[51;181H4,[45;104H[?12l[?25h[?25l[51;181H5,[46;104H[?12l[?25h[?25l[51;181H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m 46 [m        root->add_course();[34m//begins addition of a course[m                       [41m [m              [3;100H[33m 47 [m        [33mreturn[m [31m1[m;                                                              [41m [m              [4;100H[33m 48 [m                                                                               [41m [m              [5;100H[33m 49 [m    }                                                                          [41m [m              [6;100H[33m 50 [m                                                                               [41m [m              [7;100H[33m 51 [m    [33mif[m(!root->go_left() && root->go_right())                                   [41m [m              [8;100H[33m 52 [m        ++right_height; [34m//Increments if LLL situation arises on the right side[m [41m [m              [9;100H[33m 53 [m    [33mif[m(root->go_left() && !root->go_right())                                   [41m [m              [10;100H[33m 54 [m        ++left_height; [34m//Increments if LLL situation arises on the left side[m   [41m [m              [11;100H[33m 55 [m                                                                               [41m [m              [12;100H[33m 56 [m    check_year = root->compare_year(new_year);                                 [41m [m              [13;100H[33m 57 [m    check_term = root->compare_term(new_term);                                 [41m [m              [14;100H[33m 58 [m                                                                               [41m [m              [15;100H[33m 59 [m    [33mif[m([31m1[m == check_year)[34m//If year is equal[m                                      [41m [m              [16;100H[33m 60 [m    {                                                                          [41m [m              [17;100H[33m 61 [m        [33mif[m([31m1[m == check_term) [34m//If term is less than [m                            [41m [m              [18;100H[33m 62 [m            [33mreturn[m insert(root->go_left(), new_year, new_term);                [41m [m              [19;100H[33m 63 [m                                                                               [41m [m              [20;100H[33m 64 [m        [33melse[m [33mif[m([31m2[m == check_term) [34m//If term is greater than[m                     [41m [m              [21;100H[33m 65 [m            [33mreturn[m insert(root->go_right(), new_year, new_term);               [41m [m              [22;100H[33m 66 [m                                                                               [41m [m              [23;100H[33m 67 [m        [33melse[m [33mif[m([31m3[m == check_term) [34m//If term is equal[m                            [41m [m              [24;100H[33m 68 [m            root->add_course();                                                [41m [m              [25;100H[33m 69 [m    }                                                                          [41m [m              [26;100H[33m 70 [m                                                                               [41m [m              [27;100H[33m 71 [m    [33melse[m [33mif[m([31m2[m == check_year) [34m//If year is less than[m                            [41m [m              [28;100H[33m 72 [m        [33mreturn[m insert(root->go_left(), new_year, new_term);                    [41m [m              [29;100H[33m 73 [m                                                                               [41m [m              [30;100H[33m 74 [m    [33melse[m [33mif[m([31m3[m == check_year) [34m//If year is greater than[m                         [41m [m              [31;100H[33m 75 [m        [33mreturn[m insert(root->go_right(), new_year, new_term);                   [41m [m              [32;100H[33m 76 [m                                                                               [41m [m              [33;100H[33m 77 [m                                                                               [41m [m              [34;100H[33m 78 [m    [33mreturn[m [31m0[m;                                                                  [41m [m              [35;100H[33m 79 [m}                                                                              [41m [m              [36;100H[33m 80 [m                                                                               [41m [m              [37;100H[33m 81 [m                                                                               [41m [m              [38;100H[33m 82 [m                                                                               [41m [m              [39;100H[33m 83 [m[34m//Task:   Rotates the nodes to avoid a LLL situation by make a different node [m [41m [m              [40;100H[33m 84 [m[34m//        the new root. Handles situations for both the left and right side.[m   [41m [m              [41;100H[33m 85 [m[34m//Input:  None[m                                                                 [41m [m              [42;100H[33m 86 [m[34m//Output: None[m                                                                 [41m [m              [43;100H[33m 87 [m[32mvoid[m Pine::rotation()                                                          [41m [m              [44;100H[33m 88 [m{                                                                              [41m [m              [45;100H[33m 89 [m    Node * temp = root; [34m//Used to traverse to the node to become new root[m      [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m 90 [m    Node * prev = [31mNULL[m; [34m//Holds on to parent of new root[m[23C[41m [m[47;100H[33m 91 [m[79C[41m [m[48;100H[33m 92 [m    [33mif[m([31m5[m < right_height)[55C[41m [m[49;100H[33m 93 [m    {[74C[41m [m[50;100H[33m 94 [8Cfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)[45C[41m [m[51;181H[1m[7m7,[12C11%[43;104H[?12l[?25h[?25l[51;181H8,[44;104H[?12l[?25h[?25l[51;181H9,[45;104H[?12l[?25h[?25l[51;180H90,[46;104H[?12l[?25h[?25l[51;181H1,0-1[47;104H[?12l[?25h[?25l[m[2;100H[33m 51 [m    [33mif[m(!root->go_left() && root->go_right())                                   [41m [m              [3;100H[33m 52 [m        ++right_height; [34m//Increments if LLL situation arises on the right side[m [41m [m              [4;100H[33m 53 [m    [33mif[m(root->go_left() && !root->go_right())                                   [41m [m              [5;100H[33m 54 [m        ++left_height; [34m//Increments if LLL situation arises on the left side[m   [41m [m              [6;100H[33m 55 [m                                                                               [41m [m              [7;100H[33m 56 [m    check_year = root->compare_year(new_year);                                 [41m [m              [8;100H[33m 57 [m    check_term = root->compare_term(new_term);                                 [41m [m              [9;100H[33m 58 [m                                                                               [41m [m              [10;100H[33m 59 [m    [33mif[m([31m1[m == check_year)[34m//If year is equal[m                                      [41m [m              [11;100H[33m 60 [m    {                                                                          [41m [m              [12;100H[33m 61 [m        [33mif[m([31m1[m == check_term) [34m//If term is less than [m                            [41m [m              [13;100H[33m 62 [m            [33mreturn[m insert(root->go_left(), new_year, new_term);                [41m [m              [14;100H[33m 63 [m                                                                               [41m [m              [15;100H[33m 64 [m        [33melse[m [33mif[m([31m2[m == check_term) [34m//If term is greater than[m                     [41m [m              [16;100H[33m 65 [m            [33mreturn[m insert(root->go_right(), new_year, new_term);               [41m [m              [17;100H[33m 66 [m                                                                               [41m [m              [18;100H[33m 67 [m        [33melse[m [33mif[m([31m3[m == check_term) [34m//If term is equal[m                            [41m [m              [19;100H[33m 68 [m            root->add_course();                                                [41m [m              [20;100H[33m 69 [m    }                                                                          [41m [m              [21;100H[33m 70 [m                                                                               [41m [m              [22;100H[33m 71 [m    [33melse[m [33mif[m([31m2[m == check_year) [34m//If year is less than[m                            [41m [m              [23;100H[33m 72 [m        [33mreturn[m insert(root->go_left(), new_year, new_term);                    [41m [m              [24;100H[33m 73 [m                                                                               [41m [m              [25;100H[33m 74 [m    [33melse[m [33mif[m([31m3[m == check_year) [34m//If year is greater than[m                         [41m [m              [26;100H[33m 75 [m        [33mreturn[m insert(root->go_right(), new_year, new_term);                   [41m [m              [27;100H[33m 76 [m                                                                               [41m [m              [28;100H[33m 77 [m                                                                               [41m [m              [29;100H[33m 78 [m    [33mreturn[m [31m0[m;                                                                  [41m [m              [30;100H[33m 79 [m}                                                                              [41m [m              [31;100H[33m 80 [m                                                                               [41m [m              [32;100H[33m 81 [m                                                                               [41m [m              [33;100H[33m 82 [m                                                                               [41m [m              [34;100H[33m 83 [m[34m//Task:   Rotates the nodes to avoid a LLL situation by make a different node [m [41m [m              [35;100H[33m 84 [m[34m//        the new root. Handles situations for both the left and right side.[m   [41m [m              [36;100H[33m 85 [m[34m//Input:  None[m                                                                 [41m [m              [37;100H[33m 86 [m[34m//Output: None[m                                                                 [41m [m              [38;100H[33m 87 [m[32mvoid[m Pine::rotation()                                                          [41m [m              [39;100H[33m 88 [m{                                                                              [41m [m              [40;100H[33m 89 [m    Node * temp = root; [34m//Used to traverse to the node to become new root[m      [41m [m              [41;100H[33m 90 [m    Node * prev = [31mNULL[m; [34m//Holds on to parent of new root[m                       [41m [m              [42;100H[33m 91 [m                                                                               [41m [m              [43;100H[33m 92 [m    [33mif[m([31m5[m < right_height)                                                       [41m [m              [44;100H[33m 93 [m    {                                                                          [41m [m              [45;100H[33m 94 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m 95 [m[8C{[70C[41m [m[47;100H[33m 96 [m[12Cprev = temp;[55C[41m [m[48;100H[33m 97 [m[12Ctemp = temp->go_right();[43C[41m [m[49;100H[33m 98 [m[8C}[70C[41m [m[50;100H[33m 99 [8Cif[m(prev->go_left())[52C[41m [m[51;181H[1m[7m2,1   [9C2%[43;104H[?12l[?25h[?25l[51;181H3,[44;104H[?12l[?25h[?25l[51;181H4,[45;104H[?12l[?25h[?25l[51;181H5,[46;104H[?12l[?25h[?25l[51;181H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m 56 [m    check_year = root->compare_year(new_year);                                 [41m [m              [3;100H[33m 57 [m    check_term = root->compare_term(new_term);                                 [41m [m              [4;100H[33m 58 [m                                                                               [41m [m              [5;100H[33m 59 [m    [33mif[m([31m1[m == check_year)[34m//If year is equal[m                                      [41m [m              [6;100H[33m 60 [m    {                                                                          [41m [m              [7;100H[33m 61 [m        [33mif[m([31m1[m == check_term) [34m//If term is less than [m                            [41m [m              [8;100H[33m 62 [m            [33mreturn[m insert(root->go_left(), new_year, new_term);                [41m [m              [9;100H[33m 63 [m                                                                               [41m [m              [10;100H[33m 64 [m        [33melse[m [33mif[m([31m2[m == check_term) [34m//If term is greater than[m                     [41m [m              [11;100H[33m 65 [m            [33mreturn[m insert(root->go_right(), new_year, new_term);               [41m [m              [12;100H[33m 66 [m                                                                               [41m [m              [13;100H[33m 67 [m        [33melse[m [33mif[m([31m3[m == check_term) [34m//If term is equal[m                            [41m [m              [14;100H[33m 68 [m            root->add_course();                                                [41m [m              [15;100H[33m 69 [m    }                                                                          [41m [m              [16;100H[33m 70 [m                                                                               [41m [m              [17;100H[33m 71 [m    [33melse[m [33mif[m([31m2[m == check_year) [34m//If year is less than[m                            [41m [m              [18;100H[33m 72 [m        [33mreturn[m insert(root->go_left(), new_year, new_term);                    [41m [m              [19;100H[33m 73 [m                                                                               [41m [m              [20;100H[33m 74 [m    [33melse[m [33mif[m([31m3[m == check_year) [34m//If year is greater than[m                         [41m [m              [21;100H[33m 75 [m        [33mreturn[m insert(root->go_right(), new_year, new_term);                   [41m [m              [22;100H[33m 76 [m                                                                               [41m [m              [23;100H[33m 77 [m                                                                               [41m [m              [24;100H[33m 78 [m    [33mreturn[m [31m0[m;                                                                  [41m [m              [25;100H[33m 79 [m}                                                                              [41m [m              [26;100H[33m 80 [m                                                                               [41m [m              [27;100H[33m 81 [m                                                                               [41m [m              [28;100H[33m 82 [m                                                                               [41m [m              [29;100H[33m 83 [m[34m//Task:   Rotates the nodes to avoid a LLL situation by make a different node [m [41m [m              [30;100H[33m 84 [m[34m//        the new root. Handles situations for both the left and right side.[m   [41m [m              [31;100H[33m 85 [m[34m//Input:  None[m                                                                 [41m [m              [32;100H[33m 86 [m[34m//Output: None[m                                                                 [41m [m              [33;100H[33m 87 [m[32mvoid[m Pine::rotation()                                                          [41m [m              [34;100H[33m 88 [m{                                                                              [41m [m              [35;100H[33m 89 [m    Node * temp = root; [34m//Used to traverse to the node to become new root[m      [41m [m              [36;100H[33m 90 [m    Node * prev = [31mNULL[m; [34m//Holds on to parent of new root[m                       [41m [m              [37;100H[33m 91 [m                                                                               [41m [m              [38;100H[33m 92 [m    [33mif[m([31m5[m < right_height)                                                       [41m [m              [39;100H[33m 93 [m    {                                                                          [41m [m              [40;100H[33m 94 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [41;100H[33m 95 [m        {                                                                      [41m [m              [42;100H[33m 96 [m            prev = temp;                                                       [41m [m              [43;100H[33m 97 [m            temp = temp->go_right();                                           [41m [m              [44;100H[33m 98 [m        }                                                                      [41m [m              [45;100H[33m 99 [m        [33mif[m(prev->go_left())                                                    [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m100 [m[8C{[70C[41m [m[47;100H[33m101 [m[12CNode * other = prev->go_left();[36C[41m [m[48;100H[33m102 [m[12Ctemp->go_left() = other;[43C[41m [m[49;100H[33m103 [m[12Cother->go_right() = prev;[42C[41m [m[50;100H[33m104 [m[12Cother->go_left() = root;[43C[41m [m[51;181H[1m[7m7,[13C3%[43;104H[?12l[?25h[?25l[51;181H8,[44;104H[?12l[?25h[?25l[51;181H9,[45;104H[?12l[?25h[?25l[51;180H100,1[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m 61 [m        [33mif[m([31m1[m == check_term) [34m//If term is less than [m                            [41m [m              [3;100H[33m 62 [m            [33mreturn[m insert(root->go_left(), new_year, new_term);                [41m [m              [4;100H[33m 63 [m                                                                               [41m [m              [5;100H[33m 64 [m        [33melse[m [33mif[m([31m2[m == check_term) [34m//If term is greater than[m                     [41m [m              [6;100H[33m 65 [m            [33mreturn[m insert(root->go_right(), new_year, new_term);               [41m [m              [7;100H[33m 66 [m                                                                               [41m [m              [8;100H[33m 67 [m        [33melse[m [33mif[m([31m3[m == check_term) [34m//If term is equal[m                            [41m [m              [9;100H[33m 68 [m            root->add_course();                                                [41m [m              [10;100H[33m 69 [m    }                                                                          [41m [m              [11;100H[33m 70 [m                                                                               [41m [m              [12;100H[33m 71 [m    [33melse[m [33mif[m([31m2[m == check_year) [34m//If year is less than[m                            [41m [m              [13;100H[33m 72 [m        [33mreturn[m insert(root->go_left(), new_year, new_term);                    [41m [m              [14;100H[33m 73 [m                                                                               [41m [m              [15;100H[33m 74 [m    [33melse[m [33mif[m([31m3[m == check_year) [34m//If year is greater than[m                         [41m [m              [16;100H[33m 75 [m        [33mreturn[m insert(root->go_right(), new_year, new_term);                   [41m [m              [17;100H[33m 76 [m                                                                               [41m [m              [18;100H[33m 77 [m                                                                               [41m [m              [19;100H[33m 78 [m    [33mreturn[m [31m0[m;                                                                  [41m [m              [20;100H[33m 79 [m}                                                                              [41m [m              [21;100H[33m 80 [m                                                                               [41m [m              [22;100H[33m 81 [m                                                                               [41m [m              [23;100H[33m 82 [m                                                                               [41m [m              [24;100H[33m 83 [m[34m//Task:   Rotates the nodes to avoid a LLL situation by make a different node [m [41m [m              [25;100H[33m 84 [m[34m//        the new root. Handles situations for both the left and right side.[m   [41m [m              [26;100H[33m 85 [m[34m//Input:  None[m                                                                 [41m [m              [27;100H[33m 86 [m[34m//Output: None[m                                                                 [41m [m              [28;100H[33m 87 [m[32mvoid[m Pine::rotation()                                                          [41m [m              [29;100H[33m 88 [m{                                                                              [41m [m              [30;100H[33m 89 [m    Node * temp = root; [34m//Used to traverse to the node to become new root[m      [41m [m              [31;100H[33m 90 [m    Node * prev = [31mNULL[m; [34m//Holds on to parent of new root[m                       [41m [m              [32;100H[33m 91 [m                                                                               [41m [m              [33;100H[33m 92 [m    [33mif[m([31m5[m < right_height)                                                       [41m [m              [34;100H[33m 93 [m    {                                                                          [41m [m              [35;100H[33m 94 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [36;100H[33m 95 [m        {                                                                      [41m [m              [37;100H[33m 96 [m            prev = temp;                                                       [41m [m              [38;100H[33m 97 [m            temp = temp->go_right();                                           [41m [m              [39;100H[33m 98 [m        }                                                                      [41m [m              [40;100H[33m 99 [m        [33mif[m(prev->go_left())                                                    [41m [m              [41;100H[33m100 [m        {                                                                      [41m [m              [42;100H[33m101 [m            Node * other = prev->go_left();                                    [41m [m              [43;100H[33m102 [m            temp->go_left() = other;                                           [41m [m              [44;100H[33m103 [m            other->go_right() = prev;                                          [41m [m              [45;100H[33m104 [m            other->go_left() = root;                                           [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m105 [m[12Cprev->go_right() = [31mNULL[m;[43C[41m [m[47;100H[33m106 [m[12Cprev->go_left() = [31mNULL[m;[44C[41m [m[48;100H[33m107 [m[12Croot->go_right() = [31mNULL[m;[43C[41m [m[49;100H[33m108 [m[8C}[70C[41m [m[50;100H[33m109 [8Celse[m[67C[41m [m[51;182H[1m[7m2,[12C4%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m 66 [m                                                                               [41m [m              [3;100H[33m 67 [m        [33melse[m [33mif[m([31m3[m == check_term) [34m//If term is equal[m                            [41m [m              [4;100H[33m 68 [m            root->add_course();                                                [41m [m              [5;100H[33m 69 [m    }                                                                          [41m [m              [6;100H[33m 70 [m                                                                               [41m [m              [7;100H[33m 71 [m    [33melse[m [33mif[m([31m2[m == check_year) [34m//If year is less than[m                            [41m [m              [8;100H[33m 72 [m        [33mreturn[m insert(root->go_left(), new_year, new_term);                    [41m [m              [9;100H[33m 73 [m                                                                               [41m [m              [10;100H[33m 74 [m    [33melse[m [33mif[m([31m3[m == check_year) [34m//If year is greater than[m                         [41m [m              [11;100H[33m 75 [m        [33mreturn[m insert(root->go_right(), new_year, new_term);                   [41m [m              [12;100H[33m 76 [m                                                                               [41m [m              [13;100H[33m 77 [m                                                                               [41m [m              [14;100H[33m 78 [m    [33mreturn[m [31m0[m;                                                                  [41m [m              [15;100H[33m 79 [m}                                                                              [41m [m              [16;100H[33m 80 [m                                                                               [41m [m              [17;100H[33m 81 [m                                                                               [41m [m              [18;100H[33m 82 [m                                                                               [41m [m              [19;100H[33m 83 [m[34m//Task:   Rotates the nodes to avoid a LLL situation by make a different node [m [41m [m              [20;100H[33m 84 [m[34m//        the new root. Handles situations for both the left and right side.[m   [41m [m              [21;100H[33m 85 [m[34m//Input:  None[m                                                                 [41m [m              [22;100H[33m 86 [m[34m//Output: None[m                                                                 [41m [m              [23;100H[33m 87 [m[32mvoid[m Pine::rotation()                                                          [41m [m              [24;100H[33m 88 [m{                                                                              [41m [m              [25;100H[33m 89 [m    Node * temp = root; [34m//Used to traverse to the node to become new root[m      [41m [m              [26;100H[33m 90 [m    Node * prev = [31mNULL[m; [34m//Holds on to parent of new root[m                       [41m [m              [27;100H[33m 91 [m                                                                               [41m [m              [28;100H[33m 92 [m    [33mif[m([31m5[m < right_height)                                                       [41m [m              [29;100H[33m 93 [m    {                                                                          [41m [m              [30;100H[33m 94 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [31;100H[33m 95 [m        {                                                                      [41m [m              [32;100H[33m 96 [m            prev = temp;                                                       [41m [m              [33;100H[33m 97 [m            temp = temp->go_right();                                           [41m [m              [34;100H[33m 98 [m        }                                                                      [41m [m              [35;100H[33m 99 [m        [33mif[m(prev->go_left())                                                    [41m [m              [36;100H[33m100 [m        {                                                                      [41m [m              [37;100H[33m101 [m            Node * other = prev->go_left();                                    [41m [m              [38;100H[33m102 [m            temp->go_left() = other;                                           [41m [m              [39;100H[33m103 [m            other->go_right() = prev;                                          [41m [m              [40;100H[33m104 [m            other->go_left() = root;                                           [41m [m              [41;100H[33m105 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [42;100H[33m106 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [43;100H[33m107 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [44;100H[33m108 [m        }                                                                      [41m [m              [45;100H[33m109 [m        [33melse[m                                                                   [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m110 [m[8C{[70C[41m [m[47;100H[33m111 [m[12Ctemp->go_left() = prev;[44C[41m [m[48;100H[33m112 [m[12Cprev->go_right() = [31mNULL[m;[43C[41m [m[49;100H[33m113 [m[12Cprev->go_left() = root;[44C[41m [m[50;100H[33m114 [m[12Croot->go_right() = [31mNULL[m;[43C[41m [m[51;182H[1m[7m7,[12C6%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H10,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m 71 [m    [33melse[m [33mif[m([31m2[m == check_year) [34m//If year is less than[m                            [41m [m              [3;100H[33m 72 [m        [33mreturn[m insert(root->go_left(), new_year, new_term);                    [41m [m              [4;100H[33m 73 [m                                                                               [41m [m              [5;100H[33m 74 [m    [33melse[m [33mif[m([31m3[m == check_year) [34m//If year is greater than[m                         [41m [m              [6;100H[33m 75 [m        [33mreturn[m insert(root->go_right(), new_year, new_term);                   [41m [m              [7;100H[33m 76 [m                                                                               [41m [m              [8;100H[33m 77 [m                                                                               [41m [m              [9;100H[33m 78 [m    [33mreturn[m [31m0[m;                                                                  [41m [m              [10;100H[33m 79 [m}                                                                              [41m [m              [11;100H[33m 80 [m                                                                               [41m [m              [12;100H[33m 81 [m                                                                               [41m [m              [13;100H[33m 82 [m                                                                               [41m [m              [14;100H[33m 83 [m[34m//Task:   Rotates the nodes to avoid a LLL situation by make a different node [m [41m [m              [15;100H[33m 84 [m[34m//        the new root. Handles situations for both the left and right side.[m   [41m [m              [16;100H[33m 85 [m[34m//Input:  None[m                                                                 [41m [m              [17;100H[33m 86 [m[34m//Output: None[m                                                                 [41m [m              [18;100H[33m 87 [m[32mvoid[m Pine::rotation()                                                          [41m [m              [19;100H[33m 88 [m{                                                                              [41m [m              [20;100H[33m 89 [m    Node * temp = root; [34m//Used to traverse to the node to become new root[m      [41m [m              [21;100H[33m 90 [m    Node * prev = [31mNULL[m; [34m//Holds on to parent of new root[m                       [41m [m              [22;100H[33m 91 [m                                                                               [41m [m              [23;100H[33m 92 [m    [33mif[m([31m5[m < right_height)                                                       [41m [m              [24;100H[33m 93 [m    {                                                                          [41m [m              [25;100H[33m 94 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [26;100H[33m 95 [m        {                                                                      [41m [m              [27;100H[33m 96 [m            prev = temp;                                                       [41m [m              [28;100H[33m 97 [m            temp = temp->go_right();                                           [41m [m              [29;100H[33m 98 [m        }                                                                      [41m [m              [30;100H[33m 99 [m        [33mif[m(prev->go_left())                                                    [41m [m              [31;100H[33m100 [m        {                                                                      [41m [m              [32;100H[33m101 [m            Node * other = prev->go_left();                                    [41m [m              [33;100H[33m102 [m            temp->go_left() = other;                                           [41m [m              [34;100H[33m103 [m            other->go_right() = prev;                                          [41m [m              [35;100H[33m104 [m            other->go_left() = root;                                           [41m [m              [36;100H[33m105 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [37;100H[33m106 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [38;100H[33m107 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [39;100H[33m108 [m        }                                                                      [41m [m              [40;100H[33m109 [m        [33melse[m                                                                   [41m [m              [41;100H[33m110 [m        {                                                                      [41m [m              [42;100H[33m111 [m            temp->go_left() = prev;                                            [41m [m              [43;100H[33m112 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [44;100H[33m113 [m            prev->go_left() = root;                                            [41m [m              [45;100H[33m114 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m115 [m[8C}[70C[41m [m[47;100H[33m116 [m[8Cright_height = [31m0[m; [34m//Resets counter[m[37C[41m [m[48;100H[33m117 [m[8Croot = temp; [34m//Sets root to new root node[m[30C[41m [m[49;100H[33m118 [m    }[74C[41m [m[50;100H[33m119 [m    [33mif[m([31m5[m < left_height)[56C[41m [m[51;182H[1m[7m2,[12C7%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m 76 [m                                                                               [41m [m              [3;100H[33m 77 [m                                                                               [41m [m              [4;100H[33m 78 [m    [33mreturn[m [31m0[m;                                                                  [41m [m              [5;100H[33m 79 [m}                                                                              [41m [m              [6;100H[33m 80 [m                                                                               [41m [m              [7;100H[33m 81 [m                                                                               [41m [m              [8;100H[33m 82 [m                                                                               [41m [m              [9;100H[33m 83 [m[34m//Task:   Rotates the nodes to avoid a LLL situation by make a different node [m [41m [m              [10;100H[33m 84 [m[34m//        the new root. Handles situations for both the left and right side.[m   [41m [m              [11;100H[33m 85 [m[34m//Input:  None[m                                                                 [41m [m              [12;100H[33m 86 [m[34m//Output: None[m                                                                 [41m [m              [13;100H[33m 87 [m[32mvoid[m Pine::rotation()                                                          [41m [m              [14;100H[33m 88 [m{                                                                              [41m [m              [15;100H[33m 89 [m    Node * temp = root; [34m//Used to traverse to the node to become new root[m      [41m [m              [16;100H[33m 90 [m    Node * prev = [31mNULL[m; [34m//Holds on to parent of new root[m                       [41m [m              [17;100H[33m 91 [m                                                                               [41m [m              [18;100H[33m 92 [m    [33mif[m([31m5[m < right_height)                                                       [41m [m              [19;100H[33m 93 [m    {                                                                          [41m [m              [20;100H[33m 94 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [21;100H[33m 95 [m        {                                                                      [41m [m              [22;100H[33m 96 [m            prev = temp;                                                       [41m [m              [23;100H[33m 97 [m            temp = temp->go_right();                                           [41m [m              [24;100H[33m 98 [m        }                                                                      [41m [m              [25;100H[33m 99 [m        [33mif[m(prev->go_left())                                                    [41m [m              [26;100H[33m100 [m        {                                                                      [41m [m              [27;100H[33m101 [m            Node * other = prev->go_left();                                    [41m [m              [28;100H[33m102 [m            temp->go_left() = other;                                           [41m [m              [29;100H[33m103 [m            other->go_right() = prev;                                          [41m [m              [30;100H[33m104 [m            other->go_left() = root;                                           [41m [m              [31;100H[33m105 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [32;100H[33m106 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [33;100H[33m107 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [34;100H[33m108 [m        }                                                                      [41m [m              [35;100H[33m109 [m        [33melse[m                                                                   [41m [m              [36;100H[33m110 [m        {                                                                      [41m [m              [37;100H[33m111 [m            temp->go_left() = prev;                                            [41m [m              [38;100H[33m112 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [39;100H[33m113 [m            prev->go_left() = root;                                            [41m [m              [40;100H[33m114 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [41;100H[33m115 [m        }                                                                      [41m [m              [42;100H[33m116 [m        right_height = [31m0[m; [34m//Resets counter[m                                     [41m [m              [43;100H[33m117 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [44;100H[33m118 [m    }                                                                          [41m [m              [45;100H[33m119 [m    [33mif[m([31m5[m < left_height)                                                        [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m120 [m    {[74C[41m [m[47;100H[33m121 [8Cfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)[45C[41m [m[48;100H[33m122 [m[8C{[70C[41m [m[49;100H[33m123 [m[12Cprev = temp;[55C[41m [m[50;100H[33m124 [m[12Ctemp = temp->go_left();[44C[41m [m[51;182H[1m[7m7,[12C8%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H20,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m 81 [m                                                                               [41m [m              [3;100H[33m 82 [m                                                                               [41m [m              [4;100H[33m 83 [m[34m//Task:   Rotates the nodes to avoid a LLL situation by make a different node [m [41m [m              [5;100H[33m 84 [m[34m//        the new root. Handles situations for both the left and right side.[m   [41m [m              [6;100H[33m 85 [m[34m//Input:  None[m                                                                 [41m [m              [7;100H[33m 86 [m[34m//Output: None[m                                                                 [41m [m              [8;100H[33m 87 [m[32mvoid[m Pine::rotation()                                                          [41m [m              [9;100H[33m 88 [m{                                                                              [41m [m              [10;100H[33m 89 [m    Node * temp = root; [34m//Used to traverse to the node to become new root[m      [41m [m              [11;100H[33m 90 [m    Node * prev = [31mNULL[m; [34m//Holds on to parent of new root[m                       [41m [m              [12;100H[33m 91 [m                                                                               [41m [m              [13;100H[33m 92 [m    [33mif[m([31m5[m < right_height)                                                       [41m [m              [14;100H[33m 93 [m    {                                                                          [41m [m              [15;100H[33m 94 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [16;100H[33m 95 [m        {                                                                      [41m [m              [17;100H[33m 96 [m            prev = temp;                                                       [41m [m              [18;100H[33m 97 [m            temp = temp->go_right();                                           [41m [m              [19;100H[33m 98 [m        }                                                                      [41m [m              [20;100H[33m 99 [m        [33mif[m(prev->go_left())                                                    [41m [m              [21;100H[33m100 [m        {                                                                      [41m [m              [22;100H[33m101 [m            Node * other = prev->go_left();                                    [41m [m              [23;100H[33m102 [m            temp->go_left() = other;                                           [41m [m              [24;100H[33m103 [m            other->go_right() = prev;                                          [41m [m              [25;100H[33m104 [m            other->go_left() = root;                                           [41m [m              [26;100H[33m105 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [27;100H[33m106 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [28;100H[33m107 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [29;100H[33m108 [m        }                                                                      [41m [m              [30;100H[33m109 [m        [33melse[m                                                                   [41m [m              [31;100H[33m110 [m        {                                                                      [41m [m              [32;100H[33m111 [m            temp->go_left() = prev;                                            [41m [m              [33;100H[33m112 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [34;100H[33m113 [m            prev->go_left() = root;                                            [41m [m              [35;100H[33m114 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [36;100H[33m115 [m        }                                                                      [41m [m              [37;100H[33m116 [m        right_height = [31m0[m; [34m//Resets counter[m                                     [41m [m              [38;100H[33m117 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [39;100H[33m118 [m    }                                                                          [41m [m              [40;100H[33m119 [m    [33mif[m([31m5[m < left_height)                                                        [41m [m              [41;100H[33m120 [m    {                                                                          [41m [m              [42;100H[33m121 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [43;100H[33m122 [m        {                                                                      [41m [m              [44;100H[33m123 [m            prev = temp;                                                       [41m [m              [45;100H[33m124 [m            temp = temp->go_left();                                            [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m125 [m[8C}[70C[41m [m[47;100H[33m126 [8Cif[m(prev->go_right())[51C[41m [m[48;100H[33m127 [m[8C{[70C[41m [m[49;100H[33m128 [m[12CNode * other = prev->go_right();[35C[41m [m[50;100H[33m129 [m[12Ctemp->go_right() = other;[42C[41m [m[51;182H[1m[7m2,[12C9%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m 86 [m[34m//Output: None[m                                                                 [41m [m              [3;100H[33m 87 [m[32mvoid[m Pine::rotation()                                                          [41m [m              [4;100H[33m 88 [m{                                                                              [41m [m              [5;100H[33m 89 [m    Node * temp = root; [34m//Used to traverse to the node to become new root[m      [41m [m              [6;100H[33m 90 [m    Node * prev = [31mNULL[m; [34m//Holds on to parent of new root[m                       [41m [m              [7;100H[33m 91 [m                                                                               [41m [m              [8;100H[33m 92 [m    [33mif[m([31m5[m < right_height)                                                       [41m [m              [9;100H[33m 93 [m    {                                                                          [41m [m              [10;100H[33m 94 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [11;100H[33m 95 [m        {                                                                      [41m [m              [12;100H[33m 96 [m            prev = temp;                                                       [41m [m              [13;100H[33m 97 [m            temp = temp->go_right();                                           [41m [m              [14;100H[33m 98 [m        }                                                                      [41m [m              [15;100H[33m 99 [m        [33mif[m(prev->go_left())                                                    [41m [m              [16;100H[33m100 [m        {                                                                      [41m [m              [17;100H[33m101 [m            Node * other = prev->go_left();                                    [41m [m              [18;100H[33m102 [m            temp->go_left() = other;                                           [41m [m              [19;100H[33m103 [m            other->go_right() = prev;                                          [41m [m              [20;100H[33m104 [m            other->go_left() = root;                                           [41m [m              [21;100H[33m105 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [22;100H[33m106 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [23;100H[33m107 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [24;100H[33m108 [m        }                                                                      [41m [m              [25;100H[33m109 [m        [33melse[m                                                                   [41m [m              [26;100H[33m110 [m        {                                                                      [41m [m              [27;100H[33m111 [m            temp->go_left() = prev;                                            [41m [m              [28;100H[33m112 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [29;100H[33m113 [m            prev->go_left() = root;                                            [41m [m              [30;100H[33m114 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [31;100H[33m115 [m        }                                                                      [41m [m              [32;100H[33m116 [m        right_height = [31m0[m; [34m//Resets counter[m                                     [41m [m              [33;100H[33m117 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [34;100H[33m118 [m    }                                                                          [41m [m              [35;100H[33m119 [m    [33mif[m([31m5[m < left_height)                                                        [41m [m              [36;100H[33m120 [m    {                                                                          [41m [m              [37;100H[33m121 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [38;100H[33m122 [m        {                                                                      [41m [m              [39;100H[33m123 [m            prev = temp;                                                       [41m [m              [40;100H[33m124 [m            temp = temp->go_left();                                            [41m [m              [41;100H[33m125 [m        }                                                                      [41m [m              [42;100H[33m126 [m        [33mif[m(prev->go_right())                                                   [41m [m              [43;100H[33m127 [m        {                                                                      [41m [m              [44;100H[33m128 [m            Node * other = prev->go_right();                                   [41m [m              [45;100H[33m129 [m            temp->go_right() = other;                                          [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m130 [m[12Cother->go_left() = prev;[43C[41m [m[47;100H[33m131 [m[12Cother->go_right() = root;[42C[41m [m[48;100H[33m132 [m[12Cprev->go_right() = [31mNULL[m;[43C[41m [m[49;100H[33m133 [m[12Cprev->go_left() = [31mNULL[m;[44C[41m [m[50;100H[33m134 [m[8C}[70C[41m [m[51;182H[1m[7m7,[11C21%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H30,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m 91 [m                                                                               [41m [m              [3;100H[33m 92 [m    [33mif[m([31m5[m < right_height)                                                       [41m [m              [4;100H[33m 93 [m    {                                                                          [41m [m              [5;100H[33m 94 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [6;100H[33m 95 [m        {                                                                      [41m [m              [7;100H[33m 96 [m            prev = temp;                                                       [41m [m              [8;100H[33m 97 [m            temp = temp->go_right();                                           [41m [m              [9;100H[33m 98 [m        }                                                                      [41m [m              [10;100H[33m 99 [m        [33mif[m(prev->go_left())                                                    [41m [m              [11;100H[33m100 [m        {                                                                      [41m [m              [12;100H[33m101 [m            Node * other = prev->go_left();                                    [41m [m              [13;100H[33m102 [m            temp->go_left() = other;                                           [41m [m              [14;100H[33m103 [m            other->go_right() = prev;                                          [41m [m              [15;100H[33m104 [m            other->go_left() = root;                                           [41m [m              [16;100H[33m105 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [17;100H[33m106 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [18;100H[33m107 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [19;100H[33m108 [m        }                                                                      [41m [m              [20;100H[33m109 [m        [33melse[m                                                                   [41m [m              [21;100H[33m110 [m        {                                                                      [41m [m              [22;100H[33m111 [m            temp->go_left() = prev;                                            [41m [m              [23;100H[33m112 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [24;100H[33m113 [m            prev->go_left() = root;                                            [41m [m              [25;100H[33m114 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [26;100H[33m115 [m        }                                                                      [41m [m              [27;100H[33m116 [m        right_height = [31m0[m; [34m//Resets counter[m                                     [41m [m              [28;100H[33m117 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [29;100H[33m118 [m    }                                                                          [41m [m              [30;100H[33m119 [m    [33mif[m([31m5[m < left_height)                                                        [41m [m              [31;100H[33m120 [m    {                                                                          [41m [m              [32;100H[33m121 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [33;100H[33m122 [m        {                                                                      [41m [m              [34;100H[33m123 [m            prev = temp;                                                       [41m [m              [35;100H[33m124 [m            temp = temp->go_left();                                            [41m [m              [36;100H[33m125 [m        }                                                                      [41m [m              [37;100H[33m126 [m        [33mif[m(prev->go_right())                                                   [41m [m              [38;100H[33m127 [m        {                                                                      [41m [m              [39;100H[33m128 [m            Node * other = prev->go_right();                                   [41m [m              [40;100H[33m129 [m            temp->go_right() = other;                                          [41m [m              [41;100H[33m130 [m            other->go_left() = prev;                                           [41m [m              [42;100H[33m131 [m            other->go_right() = root;                                          [41m [m              [43;100H[33m132 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [44;100H[33m133 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [45;100H[33m134 [m        }                                                                      [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m135 [8Celse[m[67C[41m [m[47;100H[33m136 [m[8C{[70C[41m [m[48;100H[33m137 [m[12Ctemp->go_right() = prev;[43C[41m [m[49;100H[33m138 [m[12Cprev->go_left() = [31mNULL[m;[44C[41m [m[50;100H[33m139 [m[12Cprev->go_right() = root;[43C[41m [m[51;182H[1m[7m2,[12C2%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m 96 [m            prev = temp;                                                       [41m [m              [3;100H[33m 97 [m            temp = temp->go_right();                                           [41m [m              [4;100H[33m 98 [m        }                                                                      [41m [m              [5;100H[33m 99 [m        [33mif[m(prev->go_left())                                                    [41m [m              [6;100H[33m100 [m        {                                                                      [41m [m              [7;100H[33m101 [m            Node * other = prev->go_left();                                    [41m [m              [8;100H[33m102 [m            temp->go_left() = other;                                           [41m [m              [9;100H[33m103 [m            other->go_right() = prev;                                          [41m [m              [10;100H[33m104 [m            other->go_left() = root;                                           [41m [m              [11;100H[33m105 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [12;100H[33m106 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [13;100H[33m107 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [14;100H[33m108 [m        }                                                                      [41m [m              [15;100H[33m109 [m        [33melse[m                                                                   [41m [m              [16;100H[33m110 [m        {                                                                      [41m [m              [17;100H[33m111 [m            temp->go_left() = prev;                                            [41m [m              [18;100H[33m112 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [19;100H[33m113 [m            prev->go_left() = root;                                            [41m [m              [20;100H[33m114 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [21;100H[33m115 [m        }                                                                      [41m [m              [22;100H[33m116 [m        right_height = [31m0[m; [34m//Resets counter[m                                     [41m [m              [23;100H[33m117 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [24;100H[33m118 [m    }                                                                          [41m [m              [25;100H[33m119 [m    [33mif[m([31m5[m < left_height)                                                        [41m [m              [26;100H[33m120 [m    {                                                                          [41m [m              [27;100H[33m121 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [28;100H[33m122 [m        {                                                                      [41m [m              [29;100H[33m123 [m            prev = temp;                                                       [41m [m              [30;100H[33m124 [m            temp = temp->go_left();                                            [41m [m              [31;100H[33m125 [m        }                                                                      [41m [m              [32;100H[33m126 [m        [33mif[m(prev->go_right())                                                   [41m [m              [33;100H[33m127 [m        {                                                                      [41m [m              [34;100H[33m128 [m            Node * other = prev->go_right();                                   [41m [m              [35;100H[33m129 [m            temp->go_right() = other;                                          [41m [m              [36;100H[33m130 [m            other->go_left() = prev;                                           [41m [m              [37;100H[33m131 [m            other->go_right() = root;                                          [41m [m              [38;100H[33m132 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [39;100H[33m133 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [40;100H[33m134 [m        }                                                                      [41m [m              [41;100H[33m135 [m        [33melse[m                                                                   [41m [m              [42;100H[33m136 [m        {                                                                      [41m [m              [43;100H[33m137 [m            temp->go_right() = prev;                                           [41m [m              [44;100H[33m138 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [45;100H[33m139 [m            prev->go_right() = root;                                           [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m140 [m[12Croot->go_left() = [31mNULL[m;[44C[41m [m[47;100H[33m141 [m[8C}[70C[41m [m[48;100H[33m142 [m[8Cleft_height = [31m0[m; [34m//Resets Counter[m[38C[41m [m[49;100H[33m143 [m[8Croot = temp; [34m//Sets root to new root node[m[30C[41m [m[50;100H[33m144 [m    }[74C[41m [m[51;182H[1m[7m7,[12C3%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H40,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m101 [m            Node * other = prev->go_left();                                    [41m [m              [3;100H[33m102 [m            temp->go_left() = other;                                           [41m [m              [4;100H[33m103 [m            other->go_right() = prev;                                          [41m [m              [5;100H[33m104 [m            other->go_left() = root;                                           [41m [m              [6;100H[33m105 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [7;100H[33m106 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [8;100H[33m107 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [9;100H[33m108 [m        }                                                                      [41m [m              [10;100H[33m109 [m        [33melse[m                                                                   [41m [m              [11;100H[33m110 [m        {                                                                      [41m [m              [12;100H[33m111 [m            temp->go_left() = prev;                                            [41m [m              [13;100H[33m112 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [14;100H[33m113 [m            prev->go_left() = root;                                            [41m [m              [15;100H[33m114 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [16;100H[33m115 [m        }                                                                      [41m [m              [17;100H[33m116 [m        right_height = [31m0[m; [34m//Resets counter[m                                     [41m [m              [18;100H[33m117 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [19;100H[33m118 [m    }                                                                          [41m [m              [20;100H[33m119 [m    [33mif[m([31m5[m < left_height)                                                        [41m [m              [21;100H[33m120 [m    {                                                                          [41m [m              [22;100H[33m121 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [23;100H[33m122 [m        {                                                                      [41m [m              [24;100H[33m123 [m            prev = temp;                                                       [41m [m              [25;100H[33m124 [m            temp = temp->go_left();                                            [41m [m              [26;100H[33m125 [m        }                                                                      [41m [m              [27;100H[33m126 [m        [33mif[m(prev->go_right())                                                   [41m [m              [28;100H[33m127 [m        {                                                                      [41m [m              [29;100H[33m128 [m            Node * other = prev->go_right();                                   [41m [m              [30;100H[33m129 [m            temp->go_right() = other;                                          [41m [m              [31;100H[33m130 [m            other->go_left() = prev;                                           [41m [m              [32;100H[33m131 [m            other->go_right() = root;                                          [41m [m              [33;100H[33m132 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [34;100H[33m133 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [35;100H[33m134 [m        }                                                                      [41m [m              [36;100H[33m135 [m        [33melse[m                                                                   [41m [m              [37;100H[33m136 [m        {                                                                      [41m [m              [38;100H[33m137 [m            temp->go_right() = prev;                                           [41m [m              [39;100H[33m138 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [40;100H[33m139 [m            prev->go_right() = root;                                           [41m [m              [41;100H[33m140 [m            root->go_left() = [31mNULL[m;                                            [41m [m              [42;100H[33m141 [m        }                                                                      [41m [m              [43;100H[33m142 [m        left_height = [31m0[m; [34m//Resets Counter[m                                      [41m [m              [44;100H[33m143 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [45;100H[33m144 [m    }                                                                          [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m145 [m    [33mreturn[m;[68C[41m [m[47;100H[33m146 [m}[78C[41m [m[48;100H[33m147 [m[79C[41m [m[49;100H[33m148 [m[79C[41m [m[50;100H[33m149 [m[79C[41m [m[51;182H[1m[7m2,[12C4%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m106 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [3;100H[33m107 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [4;100H[33m108 [m        }                                                                      [41m [m              [5;100H[33m109 [m        [33melse[m                                                                   [41m [m              [6;100H[33m110 [m        {                                                                      [41m [m              [7;100H[33m111 [m            temp->go_left() = prev;                                            [41m [m              [8;100H[33m112 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [9;100H[33m113 [m            prev->go_left() = root;                                            [41m [m              [10;100H[33m114 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [11;100H[33m115 [m        }                                                                      [41m [m              [12;100H[33m116 [m        right_height = [31m0[m; [34m//Resets counter[m                                     [41m [m              [13;100H[33m117 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [14;100H[33m118 [m    }                                                                          [41m [m              [15;100H[33m119 [m    [33mif[m([31m5[m < left_height)                                                        [41m [m              [16;100H[33m120 [m    {                                                                          [41m [m              [17;100H[33m121 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [18;100H[33m122 [m        {                                                                      [41m [m              [19;100H[33m123 [m            prev = temp;                                                       [41m [m              [20;100H[33m124 [m            temp = temp->go_left();                                            [41m [m              [21;100H[33m125 [m        }                                                                      [41m [m              [22;100H[33m126 [m        [33mif[m(prev->go_right())                                                   [41m [m              [23;100H[33m127 [m        {                                                                      [41m [m              [24;100H[33m128 [m            Node * other = prev->go_right();                                   [41m [m              [25;100H[33m129 [m            temp->go_right() = other;                                          [41m [m              [26;100H[33m130 [m            other->go_left() = prev;                                           [41m [m              [27;100H[33m131 [m            other->go_right() = root;                                          [41m [m              [28;100H[33m132 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [29;100H[33m133 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [30;100H[33m134 [m        }                                                                      [41m [m              [31;100H[33m135 [m        [33melse[m                                                                   [41m [m              [32;100H[33m136 [m        {                                                                      [41m [m              [33;100H[33m137 [m            temp->go_right() = prev;                                           [41m [m              [34;100H[33m138 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [35;100H[33m139 [m            prev->go_right() = root;                                           [41m [m              [36;100H[33m140 [m            root->go_left() = [31mNULL[m;                                            [41m [m              [37;100H[33m141 [m        }                                                                      [41m [m              [38;100H[33m142 [m        left_height = [31m0[m; [34m//Resets Counter[m                                      [41m [m              [39;100H[33m143 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [40;100H[33m144 [m    }                                                                          [41m [m              [41;100H[33m145 [m    [33mreturn[m;                                                                    [41m [m              [42;100H[33m146 [m}                                                                              [41m [m              [43;100H[33m147 [m                                                                               [41m [m              [44;100H[33m148 [m                                                                               [41m [m              [45;100H[33m149 [m                                                                               [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m150 [m[34m//Task:   Removes a Node from the BST. Choice is given to remove term or course[m[41m [m[47;100H[33m151 [m[34m//        If a term is removed then it goes through the BST to remove a match [m [41m [m[48;100H[33m152 [m[34m//        taking into account all the situations of removing from a BST.[m[7C[41m [m[49;100H[33m153 [m[34m//Input:  Takes in the root by reference to recursively call upon itself and th[m[34m[41me[m[34mn [m[50;100H[33m154 [m[34m//        the year/term that needs to be removed.[m[30C[41m [m[51;182H[1m[7m7,0-1[9C5%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H50,1   [46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m111 [m            temp->go_left() = prev;                                            [41m [m              [3;100H[33m112 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [4;100H[33m113 [m            prev->go_left() = root;                                            [41m [m              [5;100H[33m114 [m            root->go_right() = [31mNULL[m;                                           [41m [m              [6;100H[33m115 [m        }                                                                      [41m [m              [7;100H[33m116 [m        right_height = [31m0[m; [34m//Resets counter[m                                     [41m [m              [8;100H[33m117 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [9;100H[33m118 [m    }                                                                          [41m [m              [10;100H[33m119 [m    [33mif[m([31m5[m < left_height)                                                        [41m [m              [11;100H[33m120 [m    {                                                                          [41m [m              [12;100H[33m121 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [13;100H[33m122 [m        {                                                                      [41m [m              [14;100H[33m123 [m            prev = temp;                                                       [41m [m              [15;100H[33m124 [m            temp = temp->go_left();                                            [41m [m              [16;100H[33m125 [m        }                                                                      [41m [m              [17;100H[33m126 [m        [33mif[m(prev->go_right())                                                   [41m [m              [18;100H[33m127 [m        {                                                                      [41m [m              [19;100H[33m128 [m            Node * other = prev->go_right();                                   [41m [m              [20;100H[33m129 [m            temp->go_right() = other;                                          [41m [m              [21;100H[33m130 [m            other->go_left() = prev;                                           [41m [m              [22;100H[33m131 [m            other->go_right() = root;                                          [41m [m              [23;100H[33m132 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [24;100H[33m133 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [25;100H[33m134 [m        }                                                                      [41m [m              [26;100H[33m135 [m        [33melse[m                                                                   [41m [m              [27;100H[33m136 [m        {                                                                      [41m [m              [28;100H[33m137 [m            temp->go_right() = prev;                                           [41m [m              [29;100H[33m138 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [30;100H[33m139 [m            prev->go_right() = root;                                           [41m [m              [31;100H[33m140 [m            root->go_left() = [31mNULL[m;                                            [41m [m              [32;100H[33m141 [m        }                                                                      [41m [m              [33;100H[33m142 [m        left_height = [31m0[m; [34m//Resets Counter[m                                      [41m [m              [34;100H[33m143 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [35;100H[33m144 [m    }                                                                          [41m [m              [36;100H[33m145 [m    [33mreturn[m;                                                                    [41m [m              [37;100H[33m146 [m}                                                                              [41m [m              [38;100H[33m147 [m                                                                               [41m [m              [39;100H[33m148 [m                                                                               [41m [m              [40;100H[33m149 [m                                                                               [41m [m              [41;100H[33m150 [m[34m//Task:   Removes a Node from the BST. Choice is given to remove term or course[m[41m [m              [42;100H[33m151 [m[34m//        If a term is removed then it goes through the BST to remove a match [m [41m [m              [43;100H[33m152 [m[34m//        taking into account all the situations of removing from a BST.[m       [41m [m              [44;100H[33m153 [m[34m//Input:  Takes in the root by reference to recursively call upon itself and th[m[34m[41me[m[34mn [m            [45;100H[33m154 [m[34m//        the year/term that needs to be removed.[m                              [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m155 [m[34m//Output: Returns one with a successful removal and zero when unsuccessful.[m    [41m [m[47;100H[33m156 [m[32mint[m Pine::remove(Node *& root, [32mint[m rm_year, [32mint[m rm_term)[23C[41m [m[48;100H[33m157 [m{[78C[41m [m[49;100H[33m158 [m    [32mchar[m letter = [35m'\0'[m;[56C[41m [m[50;100H[33m159 [m[79C[41m [m[51;182H[1m[7m2,[12C7%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m116 [m        right_height = [31m0[m; [34m//Resets counter[m                                     [41m [m              [3;100H[33m117 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [4;100H[33m118 [m    }                                                                          [41m [m              [5;100H[33m119 [m    [33mif[m([31m5[m < left_height)                                                        [41m [m              [6;100H[33m120 [m    {                                                                          [41m [m              [7;100H[33m121 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [8;100H[33m122 [m        {                                                                      [41m [m              [9;100H[33m123 [m            prev = temp;                                                       [41m [m              [10;100H[33m124 [m            temp = temp->go_left();                                            [41m [m              [11;100H[33m125 [m        }                                                                      [41m [m              [12;100H[33m126 [m        [33mif[m(prev->go_right())                                                   [41m [m              [13;100H[33m127 [m        {                                                                      [41m [m              [14;100H[33m128 [m            Node * other = prev->go_right();                                   [41m [m              [15;100H[33m129 [m            temp->go_right() = other;                                          [41m [m              [16;100H[33m130 [m            other->go_left() = prev;                                           [41m [m              [17;100H[33m131 [m            other->go_right() = root;                                          [41m [m              [18;100H[33m132 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [19;100H[33m133 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [20;100H[33m134 [m        }                                                                      [41m [m              [21;100H[33m135 [m        [33melse[m                                                                   [41m [m              [22;100H[33m136 [m        {                                                                      [41m [m              [23;100H[33m137 [m            temp->go_right() = prev;                                           [41m [m              [24;100H[33m138 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [25;100H[33m139 [m            prev->go_right() = root;                                           [41m [m              [26;100H[33m140 [m            root->go_left() = [31mNULL[m;                                            [41m [m              [27;100H[33m141 [m        }                                                                      [41m [m              [28;100H[33m142 [m        left_height = [31m0[m; [34m//Resets Counter[m                                      [41m [m              [29;100H[33m143 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [30;100H[33m144 [m    }                                                                          [41m [m              [31;100H[33m145 [m    [33mreturn[m;                                                                    [41m [m              [32;100H[33m146 [m}                                                                              [41m [m              [33;100H[33m147 [m                                                                               [41m [m              [34;100H[33m148 [m                                                                               [41m [m              [35;100H[33m149 [m                                                                               [41m [m              [36;100H[33m150 [m[34m//Task:   Removes a Node from the BST. Choice is given to remove term or course[m[41m [m              [37;100H[33m151 [m[34m//        If a term is removed then it goes through the BST to remove a match [m [41m [m              [38;100H[33m152 [m[34m//        taking into account all the situations of removing from a BST.[m       [41m [m              [39;100H[33m153 [m[34m//Input:  Takes in the root by reference to recursively call upon itself and th[m[34m[41me[m[34mn [m            [40;100H[33m154 [m[34m//        the year/term that needs to be removed.[m                              [41m [m              [41;100H[33m155 [m[34m//Output: Returns one with a successful removal and zero when unsuccessful.[m    [41m [m              [42;100H[33m156 [m[32mint[m Pine::remove(Node *& root, [32mint[m rm_year, [32mint[m rm_term)                       [41m [m              [43;100H[33m157 [m{                                                                              [41m [m              [44;100H[33m158 [m    [32mchar[m letter = [35m'\0'[m;                                                        [41m [m              [45;100H[33m159 [m                                                                               [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m160 [m    [33mif[m(!root) [33mreturn[m [31m0[m;[56C[41m [m[47;100H[33m161 [m[79C[41m [m[48;100H[33m162 [m    [33mif[m(root->give_year() == rm_year && root->give_term() == rm_term)[11C[41m [m[49;100H[33m163 [m    {[74C[41m [m[50;100H[33m164 [m[8Ccout << [31m"Remove Term(Enter T) or Course(Enter C)? "[m;[19C[41m [m[51;182H[1m[7m7,[12C8%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,0-1[45;104H[?12l[?25h[?25l[51;181H60,1   [46;104H[?12l[?25h[?25l[51;182H1,0-1[47;104H[?12l[?25h[?25l[m[2;100H[33m121 [m        [33mfor[m([32mint[m i = [31m0[m; i < [31m2[m; ++i)                                             [41m [m              [3;100H[33m122 [m        {                                                                      [41m [m              [4;100H[33m123 [m            prev = temp;                                                       [41m [m              [5;100H[33m124 [m            temp = temp->go_left();                                            [41m [m              [6;100H[33m125 [m        }                                                                      [41m [m              [7;100H[33m126 [m        [33mif[m(prev->go_right())                                                   [41m [m              [8;100H[33m127 [m        {                                                                      [41m [m              [9;100H[33m128 [m            Node * other = prev->go_right();                                   [41m [m              [10;100H[33m129 [m            temp->go_right() = other;                                          [41m [m              [11;100H[33m130 [m            other->go_left() = prev;                                           [41m [m              [12;100H[33m131 [m            other->go_right() = root;                                          [41m [m              [13;100H[33m132 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [14;100H[33m133 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [15;100H[33m134 [m        }                                                                      [41m [m              [16;100H[33m135 [m        [33melse[m                                                                   [41m [m              [17;100H[33m136 [m        {                                                                      [41m [m              [18;100H[33m137 [m            temp->go_right() = prev;                                           [41m [m              [19;100H[33m138 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [20;100H[33m139 [m            prev->go_right() = root;                                           [41m [m              [21;100H[33m140 [m            root->go_left() = [31mNULL[m;                                            [41m [m              [22;100H[33m141 [m        }                                                                      [41m [m              [23;100H[33m142 [m        left_height = [31m0[m; [34m//Resets Counter[m                                      [41m [m              [24;100H[33m143 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [25;100H[33m144 [m    }                                                                          [41m [m              [26;100H[33m145 [m    [33mreturn[m;                                                                    [41m [m              [27;100H[33m146 [m}                                                                              [41m [m              [28;100H[33m147 [m                                                                               [41m [m              [29;100H[33m148 [m                                                                               [41m [m              [30;100H[33m149 [m                                                                               [41m [m              [31;100H[33m150 [m[34m//Task:   Removes a Node from the BST. Choice is given to remove term or course[m[41m [m              [32;100H[33m151 [m[34m//        If a term is removed then it goes through the BST to remove a match [m [41m [m              [33;100H[33m152 [m[34m//        taking into account all the situations of removing from a BST.[m       [41m [m              [34;100H[33m153 [m[34m//Input:  Takes in the root by reference to recursively call upon itself and th[m[34m[41me[m[34mn [m            [35;100H[33m154 [m[34m//        the year/term that needs to be removed.[m                              [41m [m              [36;100H[33m155 [m[34m//Output: Returns one with a successful removal and zero when unsuccessful.[m    [41m [m              [37;100H[33m156 [m[32mint[m Pine::remove(Node *& root, [32mint[m rm_year, [32mint[m rm_term)                       [41m [m              [38;100H[33m157 [m{                                                                              [41m [m              [39;100H[33m158 [m    [32mchar[m letter = [35m'\0'[m;                                                        [41m [m              [40;100H[33m159 [m                                                                               [41m [m              [41;100H[33m160 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [42;100H[33m161 [m                                                                               [41m [m              [43;100H[33m162 [m    [33mif[m(root->give_year() == rm_year && root->give_term() == rm_term)           [41m [m              [44;100H[33m163 [m    {                                                                          [41m [m              [45;100H[33m164 [m        cout << [31m"Remove Term(Enter T) or Course(Enter C)? "[m;                   [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m165 [m[8Ccin >> letter;[57C[41m [m[47;100H[33m166 [m[8Ccin.ignore([31m100[m,[35m'\n'[m);[50C[41m [m[48;100H[33m167 [m[79C[41m [m[49;100H[33m168 [8Cif[m([31m'C'[m == toupper(letter))[45C[41m [m[50;100H[33m169 [m[12Croot->remove_course(); [34m//Removes course[m[28C[41m [m[51;182H[1m[7m2,1   [8C9%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m126 [m        [33mif[m(prev->go_right())                                                   [41m [m              [3;100H[33m127 [m        {                                                                      [41m [m              [4;100H[33m128 [m            Node * other = prev->go_right();                                   [41m [m              [5;100H[33m129 [m            temp->go_right() = other;                                          [41m [m              [6;100H[33m130 [m            other->go_left() = prev;                                           [41m [m              [7;100H[33m131 [m            other->go_right() = root;                                          [41m [m              [8;100H[33m132 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [9;100H[33m133 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [10;100H[33m134 [m        }                                                                      [41m [m              [11;100H[33m135 [m        [33melse[m                                                                   [41m [m              [12;100H[33m136 [m        {                                                                      [41m [m              [13;100H[33m137 [m            temp->go_right() = prev;                                           [41m [m              [14;100H[33m138 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [15;100H[33m139 [m            prev->go_right() = root;                                           [41m [m              [16;100H[33m140 [m            root->go_left() = [31mNULL[m;                                            [41m [m              [17;100H[33m141 [m        }                                                                      [41m [m              [18;100H[33m142 [m        left_height = [31m0[m; [34m//Resets Counter[m                                      [41m [m              [19;100H[33m143 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [20;100H[33m144 [m    }                                                                          [41m [m              [21;100H[33m145 [m    [33mreturn[m;                                                                    [41m [m              [22;100H[33m146 [m}                                                                              [41m [m              [23;100H[33m147 [m                                                                               [41m [m              [24;100H[33m148 [m                                                                               [41m [m              [25;100H[33m149 [m                                                                               [41m [m              [26;100H[33m150 [m[34m//Task:   Removes a Node from the BST. Choice is given to remove term or course[m[41m [m              [27;100H[33m151 [m[34m//        If a term is removed then it goes through the BST to remove a match [m [41m [m              [28;100H[33m152 [m[34m//        taking into account all the situations of removing from a BST.[m       [41m [m              [29;100H[33m153 [m[34m//Input:  Takes in the root by reference to recursively call upon itself and th[m[34m[41me[m[34mn [m            [30;100H[33m154 [m[34m//        the year/term that needs to be removed.[m                              [41m [m              [31;100H[33m155 [m[34m//Output: Returns one with a successful removal and zero when unsuccessful.[m    [41m [m              [32;100H[33m156 [m[32mint[m Pine::remove(Node *& root, [32mint[m rm_year, [32mint[m rm_term)                       [41m [m              [33;100H[33m157 [m{                                                                              [41m [m              [34;100H[33m158 [m    [32mchar[m letter = [35m'\0'[m;                                                        [41m [m              [35;100H[33m159 [m                                                                               [41m [m              [36;100H[33m160 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [37;100H[33m161 [m                                                                               [41m [m              [38;100H[33m162 [m    [33mif[m(root->give_year() == rm_year && root->give_term() == rm_term)           [41m [m              [39;100H[33m163 [m    {                                                                          [41m [m              [40;100H[33m164 [m        cout << [31m"Remove Term(Enter T) or Course(Enter C)? "[m;                   [41m [m              [41;100H[33m165 [m        cin >> letter;                                                         [41m [m              [42;100H[33m166 [m        cin.ignore([31m100[m,[35m'\n'[m);                                                  [41m [m              [43;100H[33m167 [m                                                                               [41m [m              [44;100H[33m168 [m        [33mif[m([31m'C'[m == toupper(letter))                                             [41m [m              [45;100H[33m169 [m            root->remove_course(); [34m//Removes course[m                            [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m170 [8Celse[m[67C[41m [m[47;100H[33m171 [m[8C{[70C[41m [m[48;100H[33m172 [12Cif[m(!root->go_left() && !root->go_right())[26C[41m [m[49;100H[33m173 [m[12C{[66C[41m [m[50;100H[33m174 [16Cdelete[m root;[51C[41m [m[51;182H[1m[7m7,0-1[8C30%[43;104H[?12l[?25h[?25l[51;182H8,1   [44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H70,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m131 [m            other->go_right() = root;                                          [41m [m              [3;100H[33m132 [m            prev->go_right() = [31mNULL[m;                                           [41m [m              [4;100H[33m133 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [5;100H[33m134 [m        }                                                                      [41m [m              [6;100H[33m135 [m        [33melse[m                                                                   [41m [m              [7;100H[33m136 [m        {                                                                      [41m [m              [8;100H[33m137 [m            temp->go_right() = prev;                                           [41m [m              [9;100H[33m138 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [10;100H[33m139 [m            prev->go_right() = root;                                           [41m [m              [11;100H[33m140 [m            root->go_left() = [31mNULL[m;                                            [41m [m              [12;100H[33m141 [m        }                                                                      [41m [m              [13;100H[33m142 [m        left_height = [31m0[m; [34m//Resets Counter[m                                      [41m [m              [14;100H[33m143 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [15;100H[33m144 [m    }                                                                          [41m [m              [16;100H[33m145 [m    [33mreturn[m;                                                                    [41m [m              [17;100H[33m146 [m}                                                                              [41m [m              [18;100H[33m147 [m                                                                               [41m [m              [19;100H[33m148 [m                                                                               [41m [m              [20;100H[33m149 [m                                                                               [41m [m              [21;100H[33m150 [m[34m//Task:   Removes a Node from the BST. Choice is given to remove term or course[m[41m [m              [22;100H[33m151 [m[34m//        If a term is removed then it goes through the BST to remove a match [m [41m [m              [23;100H[33m152 [m[34m//        taking into account all the situations of removing from a BST.[m       [41m [m              [24;100H[33m153 [m[34m//Input:  Takes in the root by reference to recursively call upon itself and th[m[34m[41me[m[34mn [m            [25;100H[33m154 [m[34m//        the year/term that needs to be removed.[m                              [41m [m              [26;100H[33m155 [m[34m//Output: Returns one with a successful removal and zero when unsuccessful.[m    [41m [m              [27;100H[33m156 [m[32mint[m Pine::remove(Node *& root, [32mint[m rm_year, [32mint[m rm_term)                       [41m [m              [28;100H[33m157 [m{                                                                              [41m [m              [29;100H[33m158 [m    [32mchar[m letter = [35m'\0'[m;                                                        [41m [m              [30;100H[33m159 [m                                                                               [41m [m              [31;100H[33m160 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [32;100H[33m161 [m                                                                               [41m [m              [33;100H[33m162 [m    [33mif[m(root->give_year() == rm_year && root->give_term() == rm_term)           [41m [m              [34;100H[33m163 [m    {                                                                          [41m [m              [35;100H[33m164 [m        cout << [31m"Remove Term(Enter T) or Course(Enter C)? "[m;                   [41m [m              [36;100H[33m165 [m        cin >> letter;                                                         [41m [m              [37;100H[33m166 [m        cin.ignore([31m100[m,[35m'\n'[m);                                                  [41m [m              [38;100H[33m167 [m                                                                               [41m [m              [39;100H[33m168 [m        [33mif[m([31m'C'[m == toupper(letter))                                             [41m [m              [40;100H[33m169 [m            root->remove_course(); [34m//Removes course[m                            [41m [m              [41;100H[33m170 [m        [33melse[m                                                                   [41m [m              [42;100H[33m171 [m        {                                                                      [41m [m              [43;100H[33m172 [m            [33mif[m(!root->go_left() && !root->go_right())                          [41m [m              [44;100H[33m173 [m            {                                                                  [41m [m              [45;100H[33m174 [m                [33mdelete[m root;                                                   [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m175 [m[16Croot = [31mNULL[m;[51C[41m [m[47;100H[33m176 [16Creturn[m [31m1[m;[54C[41m [m[48;100H[33m177 [m[12C}[66C[41m [m[49;100H[33m178 [12Celse[m [33mif[m(!root->go_left() && root->go_right())[22C[41m [m[50;100H[33m179 [m[12C{[66C[41m [m[51;182H[1m[7m2,[12C2%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m136 [m        {                                                                      [41m [m              [3;100H[33m137 [m            temp->go_right() = prev;                                           [41m [m              [4;100H[33m138 [m            prev->go_left() = [31mNULL[m;                                            [41m [m              [5;100H[33m139 [m            prev->go_right() = root;                                           [41m [m              [6;100H[33m140 [m            root->go_left() = [31mNULL[m;                                            [41m [m              [7;100H[33m141 [m        }                                                                      [41m [m              [8;100H[33m142 [m        left_height = [31m0[m; [34m//Resets Counter[m                                      [41m [m              [9;100H[33m143 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [10;100H[33m144 [m    }                                                                          [41m [m              [11;100H[33m145 [m    [33mreturn[m;                                                                    [41m [m              [12;100H[33m146 [m}                                                                              [41m [m              [13;100H[33m147 [m                                                                               [41m [m              [14;100H[33m148 [m                                                                               [41m [m              [15;100H[33m149 [m                                                                               [41m [m              [16;100H[33m150 [m[34m//Task:   Removes a Node from the BST. Choice is given to remove term or course[m[41m [m              [17;100H[33m151 [m[34m//        If a term is removed then it goes through the BST to remove a match [m [41m [m              [18;100H[33m152 [m[34m//        taking into account all the situations of removing from a BST.[m       [41m [m              [19;100H[33m153 [m[34m//Input:  Takes in the root by reference to recursively call upon itself and th[m[34m[41me[m[34mn [m            [20;100H[33m154 [m[34m//        the year/term that needs to be removed.[m                              [41m [m              [21;100H[33m155 [m[34m//Output: Returns one with a successful removal and zero when unsuccessful.[m    [41m [m              [22;100H[33m156 [m[32mint[m Pine::remove(Node *& root, [32mint[m rm_year, [32mint[m rm_term)                       [41m [m              [23;100H[33m157 [m{                                                                              [41m [m              [24;100H[33m158 [m    [32mchar[m letter = [35m'\0'[m;                                                        [41m [m              [25;100H[33m159 [m                                                                               [41m [m              [26;100H[33m160 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [27;100H[33m161 [m                                                                               [41m [m              [28;100H[33m162 [m    [33mif[m(root->give_year() == rm_year && root->give_term() == rm_term)           [41m [m              [29;100H[33m163 [m    {                                                                          [41m [m              [30;100H[33m164 [m        cout << [31m"Remove Term(Enter T) or Course(Enter C)? "[m;                   [41m [m              [31;100H[33m165 [m        cin >> letter;                                                         [41m [m              [32;100H[33m166 [m        cin.ignore([31m100[m,[35m'\n'[m);                                                  [41m [m              [33;100H[33m167 [m                                                                               [41m [m              [34;100H[33m168 [m        [33mif[m([31m'C'[m == toupper(letter))                                             [41m [m              [35;100H[33m169 [m            root->remove_course(); [34m//Removes course[m                            [41m [m              [36;100H[33m170 [m        [33melse[m                                                                   [41m [m              [37;100H[33m171 [m        {                                                                      [41m [m              [38;100H[33m172 [m            [33mif[m(!root->go_left() && !root->go_right())                          [41m [m              [39;100H[33m173 [m            {                                                                  [41m [m              [40;100H[33m174 [m                [33mdelete[m root;                                                   [41m [m              [41;100H[33m175 [m                root = [31mNULL[m;                                                   [41m [m              [42;100H[33m176 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [43;100H[33m177 [m            }                                                                  [41m [m              [44;100H[33m178 [m            [33melse[m [33mif[m(!root->go_left() && root->go_right())                      [41m [m              [45;100H[33m179 [m            {                                                                  [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m180 [m[16CNode * temp = root->go_right();[32C[41m [m[47;100H[33m181 [16Cdelete[m root;[51C[41m [m[48;100H[33m182 [m[16Croot = temp;[51C[41m [m[49;100H[33m183 [16Creturn[m [31m1[m;[54C[41m [m[50;100H[33m184 [m[12C}[66C[41m [m[51;182H[1m[7m7,[12C3%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H80,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m141 [m        }                                                                      [41m [m              [3;100H[33m142 [m        left_height = [31m0[m; [34m//Resets Counter[m                                      [41m [m              [4;100H[33m143 [m        root = temp; [34m//Sets root to new root node[m                              [41m [m              [5;100H[33m144 [m    }                                                                          [41m [m              [6;100H[33m145 [m    [33mreturn[m;                                                                    [41m [m              [7;100H[33m146 [m}                                                                              [41m [m              [8;100H[33m147 [m                                                                               [41m [m              [9;100H[33m148 [m                                                                               [41m [m              [10;100H[33m149 [m                                                                               [41m [m              [11;100H[33m150 [m[34m//Task:   Removes a Node from the BST. Choice is given to remove term or course[m[41m [m              [12;100H[33m151 [m[34m//        If a term is removed then it goes through the BST to remove a match [m [41m [m              [13;100H[33m152 [m[34m//        taking into account all the situations of removing from a BST.[m       [41m [m              [14;100H[33m153 [m[34m//Input:  Takes in the root by reference to recursively call upon itself and th[m[34m[41me[m[34mn [m            [15;100H[33m154 [m[34m//        the year/term that needs to be removed.[m                              [41m [m              [16;100H[33m155 [m[34m//Output: Returns one with a successful removal and zero when unsuccessful.[m    [41m [m              [17;100H[33m156 [m[32mint[m Pine::remove(Node *& root, [32mint[m rm_year, [32mint[m rm_term)                       [41m [m              [18;100H[33m157 [m{                                                                              [41m [m              [19;100H[33m158 [m    [32mchar[m letter = [35m'\0'[m;                                                        [41m [m              [20;100H[33m159 [m                                                                               [41m [m              [21;100H[33m160 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [22;100H[33m161 [m                                                                               [41m [m              [23;100H[33m162 [m    [33mif[m(root->give_year() == rm_year && root->give_term() == rm_term)           [41m [m              [24;100H[33m163 [m    {                                                                          [41m [m              [25;100H[33m164 [m        cout << [31m"Remove Term(Enter T) or Course(Enter C)? "[m;                   [41m [m              [26;100H[33m165 [m        cin >> letter;                                                         [41m [m              [27;100H[33m166 [m        cin.ignore([31m100[m,[35m'\n'[m);                                                  [41m [m              [28;100H[33m167 [m                                                                               [41m [m              [29;100H[33m168 [m        [33mif[m([31m'C'[m == toupper(letter))                                             [41m [m              [30;100H[33m169 [m            root->remove_course(); [34m//Removes course[m                            [41m [m              [31;100H[33m170 [m        [33melse[m                                                                   [41m [m              [32;100H[33m171 [m        {                                                                      [41m [m              [33;100H[33m172 [m            [33mif[m(!root->go_left() && !root->go_right())                          [41m [m              [34;100H[33m173 [m            {                                                                  [41m [m              [35;100H[33m174 [m                [33mdelete[m root;                                                   [41m [m              [36;100H[33m175 [m                root = [31mNULL[m;                                                   [41m [m              [37;100H[33m176 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [38;100H[33m177 [m            }                                                                  [41m [m              [39;100H[33m178 [m            [33melse[m [33mif[m(!root->go_left() && root->go_right())                      [41m [m              [40;100H[33m179 [m            {                                                                  [41m [m              [41;100H[33m180 [m                Node * temp = root->go_right();                                [41m [m              [42;100H[33m181 [m                [33mdelete[m root;                                                   [41m [m              [43;100H[33m182 [m                root = temp;                                                   [41m [m              [44;100H[33m183 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [45;100H[33m184 [m            }                                                                  [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m185 [12Celse[m [33mif[m(root->go_left() && !root->go_right())[22C[41m [m[47;100H[33m186 [m[12C{[66C[41m [m[48;100H[33m187 [m[16CNode * temp = root->go_left();[33C[41m [m[49;100H[33m188 [16Cdelete[m root;[51C[41m [m[50;100H[33m189 [m[16Croot = temp;[51C[41m [m[51;182H[1m[7m2,[12C4%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m146 [m}                                                                              [41m [m              [3;100H[33m147 [m                                                                               [41m [m              [4;100H[33m148 [m                                                                               [41m [m              [5;100H[33m149 [m                                                                               [41m [m              [6;100H[33m150 [m[34m//Task:   Removes a Node from the BST. Choice is given to remove term or course[m[41m [m              [7;100H[33m151 [m[34m//        If a term is removed then it goes through the BST to remove a match [m [41m [m              [8;100H[33m152 [m[34m//        taking into account all the situations of removing from a BST.[m       [41m [m              [9;100H[33m153 [m[34m//Input:  Takes in the root by reference to recursively call upon itself and th[m[34m[41me[m[34mn [m            [10;100H[33m154 [m[34m//        the year/term that needs to be removed.[m                              [41m [m              [11;100H[33m155 [m[34m//Output: Returns one with a successful removal and zero when unsuccessful.[m    [41m [m              [12;100H[33m156 [m[32mint[m Pine::remove(Node *& root, [32mint[m rm_year, [32mint[m rm_term)                       [41m [m              [13;100H[33m157 [m{                                                                              [41m [m              [14;100H[33m158 [m    [32mchar[m letter = [35m'\0'[m;                                                        [41m [m              [15;100H[33m159 [m                                                                               [41m [m              [16;100H[33m160 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [17;100H[33m161 [m                                                                               [41m [m              [18;100H[33m162 [m    [33mif[m(root->give_year() == rm_year && root->give_term() == rm_term)           [41m [m              [19;100H[33m163 [m    {                                                                          [41m [m              [20;100H[33m164 [m        cout << [31m"Remove Term(Enter T) or Course(Enter C)? "[m;                   [41m [m              [21;100H[33m165 [m        cin >> letter;                                                         [41m [m              [22;100H[33m166 [m        cin.ignore([31m100[m,[35m'\n'[m);                                                  [41m [m              [23;100H[33m167 [m                                                                               [41m [m              [24;100H[33m168 [m        [33mif[m([31m'C'[m == toupper(letter))                                             [41m [m              [25;100H[33m169 [m            root->remove_course(); [34m//Removes course[m                            [41m [m              [26;100H[33m170 [m        [33melse[m                                                                   [41m [m              [27;100H[33m171 [m        {                                                                      [41m [m              [28;100H[33m172 [m            [33mif[m(!root->go_left() && !root->go_right())                          [41m [m              [29;100H[33m173 [m            {                                                                  [41m [m              [30;100H[33m174 [m                [33mdelete[m root;                                                   [41m [m              [31;100H[33m175 [m                root = [31mNULL[m;                                                   [41m [m              [32;100H[33m176 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [33;100H[33m177 [m            }                                                                  [41m [m              [34;100H[33m178 [m            [33melse[m [33mif[m(!root->go_left() && root->go_right())                      [41m [m              [35;100H[33m179 [m            {                                                                  [41m [m              [36;100H[33m180 [m                Node * temp = root->go_right();                                [41m [m              [37;100H[33m181 [m                [33mdelete[m root;                                                   [41m [m              [38;100H[33m182 [m                root = temp;                                                   [41m [m              [39;100H[33m183 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [40;100H[33m184 [m            }                                                                  [41m [m              [41;100H[33m185 [m            [33melse[m [33mif[m(root->go_left() && !root->go_right())                      [41m [m              [42;100H[33m186 [m            {                                                                  [41m [m              [43;100H[33m187 [m                Node * temp = root->go_left();                                 [41m [m              [44;100H[33m188 [m                [33mdelete[m root;                                                   [41m [m              [45;100H[33m189 [m                root = temp;                                                   [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m190 [16Creturn[m [31m1[m;[54C[41m [m[47;100H[33m191 [m[12C}[66C[41m [m[48;100H[33m192 [12Celse[m[63C[41m [m[49;100H[33m193 [m[12C{[66C[41m [m[50;100H[33m194 [m[16CNode * current = root->go_right();[29C[41m [m[51;182H[1m[7m7,[12C5%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H90,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m151 [m[34m//        If a term is removed then it goes through the BST to remove a match [m [41m [m              [3;100H[33m152 [m[34m//        taking into account all the situations of removing from a BST.[m       [41m [m              [4;100H[33m153 [m[34m//Input:  Takes in the root by reference to recursively call upon itself and th[m[34m[41me[m[34mn [m            [5;100H[33m154 [m[34m//        the year/term that needs to be removed.[m                              [41m [m              [6;100H[33m155 [m[34m//Output: Returns one with a successful removal and zero when unsuccessful.[m    [41m [m              [7;100H[33m156 [m[32mint[m Pine::remove(Node *& root, [32mint[m rm_year, [32mint[m rm_term)                       [41m [m              [8;100H[33m157 [m{                                                                              [41m [m              [9;100H[33m158 [m    [32mchar[m letter = [35m'\0'[m;                                                        [41m [m              [10;100H[33m159 [m                                                                               [41m [m              [11;100H[33m160 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [12;100H[33m161 [m                                                                               [41m [m              [13;100H[33m162 [m    [33mif[m(root->give_year() == rm_year && root->give_term() == rm_term)           [41m [m              [14;100H[33m163 [m    {                                                                          [41m [m              [15;100H[33m164 [m        cout << [31m"Remove Term(Enter T) or Course(Enter C)? "[m;                   [41m [m              [16;100H[33m165 [m        cin >> letter;                                                         [41m [m              [17;100H[33m166 [m        cin.ignore([31m100[m,[35m'\n'[m);                                                  [41m [m              [18;100H[33m167 [m                                                                               [41m [m              [19;100H[33m168 [m        [33mif[m([31m'C'[m == toupper(letter))                                             [41m [m              [20;100H[33m169 [m            root->remove_course(); [34m//Removes course[m                            [41m [m              [21;100H[33m170 [m        [33melse[m                                                                   [41m [m              [22;100H[33m171 [m        {                                                                      [41m [m              [23;100H[33m172 [m            [33mif[m(!root->go_left() && !root->go_right())                          [41m [m              [24;100H[33m173 [m            {                                                                  [41m [m              [25;100H[33m174 [m                [33mdelete[m root;                                                   [41m [m              [26;100H[33m175 [m                root = [31mNULL[m;                                                   [41m [m              [27;100H[33m176 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [28;100H[33m177 [m            }                                                                  [41m [m              [29;100H[33m178 [m            [33melse[m [33mif[m(!root->go_left() && root->go_right())                      [41m [m              [30;100H[33m179 [m            {                                                                  [41m [m              [31;100H[33m180 [m                Node * temp = root->go_right();                                [41m [m              [32;100H[33m181 [m                [33mdelete[m root;                                                   [41m [m              [33;100H[33m182 [m                root = temp;                                                   [41m [m              [34;100H[33m183 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [35;100H[33m184 [m            }                                                                  [41m [m              [36;100H[33m185 [m            [33melse[m [33mif[m(root->go_left() && !root->go_right())                      [41m [m              [37;100H[33m186 [m            {                                                                  [41m [m              [38;100H[33m187 [m                Node * temp = root->go_left();                                 [41m [m              [39;100H[33m188 [m                [33mdelete[m root;                                                   [41m [m              [40;100H[33m189 [m                root = temp;                                                   [41m [m              [41;100H[33m190 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [42;100H[33m191 [m            }                                                                  [41m [m              [43;100H[33m192 [m            [33melse[m                                                               [41m [m              [44;100H[33m193 [m            {                                                                  [41m [m              [45;100H[33m194 [m                Node * current = root->go_right();                             [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m195 [16Cif[m(!current->go_left())[40C[41m [m[47;100H[33m196 [m[16C{[62C[41m [m[48;100H[33m197 [m[20C[32mint[m year = current->give_year();[27C[41m [m[49;100H[33m198 [m[20C[32mint[m term = current->give_term();[27C[41m [m[50;100H[33m199 [m[20C[32mint[m credits = current->give_credits();[21C[41m [m[51;182H[1m[7m2,[12C7%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m156 [m[32mint[m Pine::remove(Node *& root, [32mint[m rm_year, [32mint[m rm_term)                       [41m [m              [3;100H[33m157 [m{                                                                              [41m [m              [4;100H[33m158 [m    [32mchar[m letter = [35m'\0'[m;                                                        [41m [m              [5;100H[33m159 [m                                                                               [41m [m              [6;100H[33m160 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [7;100H[33m161 [m                                                                               [41m [m              [8;100H[33m162 [m    [33mif[m(root->give_year() == rm_year && root->give_term() == rm_term)           [41m [m              [9;100H[33m163 [m    {                                                                          [41m [m              [10;100H[33m164 [m        cout << [31m"Remove Term(Enter T) or Course(Enter C)? "[m;                   [41m [m              [11;100H[33m165 [m        cin >> letter;                                                         [41m [m              [12;100H[33m166 [m        cin.ignore([31m100[m,[35m'\n'[m);                                                  [41m [m              [13;100H[33m167 [m                                                                               [41m [m              [14;100H[33m168 [m        [33mif[m([31m'C'[m == toupper(letter))                                             [41m [m              [15;100H[33m169 [m            root->remove_course(); [34m//Removes course[m                            [41m [m              [16;100H[33m170 [m        [33melse[m                                                                   [41m [m              [17;100H[33m171 [m        {                                                                      [41m [m              [18;100H[33m172 [m            [33mif[m(!root->go_left() && !root->go_right())                          [41m [m              [19;100H[33m173 [m            {                                                                  [41m [m              [20;100H[33m174 [m                [33mdelete[m root;                                                   [41m [m              [21;100H[33m175 [m                root = [31mNULL[m;                                                   [41m [m              [22;100H[33m176 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [23;100H[33m177 [m            }                                                                  [41m [m              [24;100H[33m178 [m            [33melse[m [33mif[m(!root->go_left() && root->go_right())                      [41m [m              [25;100H[33m179 [m            {                                                                  [41m [m              [26;100H[33m180 [m                Node * temp = root->go_right();                                [41m [m              [27;100H[33m181 [m                [33mdelete[m root;                                                   [41m [m              [28;100H[33m182 [m                root = temp;                                                   [41m [m              [29;100H[33m183 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [30;100H[33m184 [m            }                                                                  [41m [m              [31;100H[33m185 [m            [33melse[m [33mif[m(root->go_left() && !root->go_right())                      [41m [m              [32;100H[33m186 [m            {                                                                  [41m [m              [33;100H[33m187 [m                Node * temp = root->go_left();                                 [41m [m              [34;100H[33m188 [m                [33mdelete[m root;                                                   [41m [m              [35;100H[33m189 [m                root = temp;                                                   [41m [m              [36;100H[33m190 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [37;100H[33m191 [m            }                                                                  [41m [m              [38;100H[33m192 [m            [33melse[m                                                               [41m [m              [39;100H[33m193 [m            {                                                                  [41m [m              [40;100H[33m194 [m                Node * current = root->go_right();                             [41m [m              [41;100H[33m195 [m                [33mif[m(!current->go_left())                                        [41m [m              [42;100H[33m196 [m                {                                                              [41m [m              [43;100H[33m197 [m                    [32mint[m year = current->give_year();                           [41m [m              [44;100H[33m198 [m                    [32mint[m term = current->give_term();                           [41m [m              [45;100H[33m199 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m200 [m[20C[32mint[m cs_credits = current->give_cs_credits();[15C[41m [m[47;100H[33m201 [m[20C[32mint[m term_gpa = current->give_term_gpa();[19C[41m [m[48;100H[33m202 [m[20C[32mint[m cs_gpa = current->give_cs_gpa();[23C[41m [m[49;100H[33m203 [m[79C[41m [m[50;100H[33m204 [m[20Croot->insert_date(year, term);[29C[41m [m[51;182H[1m[7m7,[12C8%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;180H200,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m161 [m                                                                               [41m [m              [3;100H[33m162 [m    [33mif[m(root->give_year() == rm_year && root->give_term() == rm_term)           [41m [m              [4;100H[33m163 [m    {                                                                          [41m [m              [5;100H[33m164 [m        cout << [31m"Remove Term(Enter T) or Course(Enter C)? "[m;                   [41m [m              [6;100H[33m165 [m        cin >> letter;                                                         [41m [m              [7;100H[33m166 [m        cin.ignore([31m100[m,[35m'\n'[m);                                                  [41m [m              [8;100H[33m167 [m                                                                               [41m [m              [9;100H[33m168 [m        [33mif[m([31m'C'[m == toupper(letter))                                             [41m [m              [10;100H[33m169 [m            root->remove_course(); [34m//Removes course[m                            [41m [m              [11;100H[33m170 [m        [33melse[m                                                                   [41m [m              [12;100H[33m171 [m        {                                                                      [41m [m              [13;100H[33m172 [m            [33mif[m(!root->go_left() && !root->go_right())                          [41m [m              [14;100H[33m173 [m            {                                                                  [41m [m              [15;100H[33m174 [m                [33mdelete[m root;                                                   [41m [m              [16;100H[33m175 [m                root = [31mNULL[m;                                                   [41m [m              [17;100H[33m176 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [18;100H[33m177 [m            }                                                                  [41m [m              [19;100H[33m178 [m            [33melse[m [33mif[m(!root->go_left() && root->go_right())                      [41m [m              [20;100H[33m179 [m            {                                                                  [41m [m              [21;100H[33m180 [m                Node * temp = root->go_right();                                [41m [m              [22;100H[33m181 [m                [33mdelete[m root;                                                   [41m [m              [23;100H[33m182 [m                root = temp;                                                   [41m [m              [24;100H[33m183 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [25;100H[33m184 [m            }                                                                  [41m [m              [26;100H[33m185 [m            [33melse[m [33mif[m(root->go_left() && !root->go_right())                      [41m [m              [27;100H[33m186 [m            {                                                                  [41m [m              [28;100H[33m187 [m                Node * temp = root->go_left();                                 [41m [m              [29;100H[33m188 [m                [33mdelete[m root;                                                   [41m [m              [30;100H[33m189 [m                root = temp;                                                   [41m [m              [31;100H[33m190 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [32;100H[33m191 [m            }                                                                  [41m [m              [33;100H[33m192 [m            [33melse[m                                                               [41m [m              [34;100H[33m193 [m            {                                                                  [41m [m              [35;100H[33m194 [m                Node * current = root->go_right();                             [41m [m              [36;100H[33m195 [m                [33mif[m(!current->go_left())                                        [41m [m              [37;100H[33m196 [m                {                                                              [41m [m              [38;100H[33m197 [m                    [32mint[m year = current->give_year();                           [41m [m              [39;100H[33m198 [m                    [32mint[m term = current->give_term();                           [41m [m              [40;100H[33m199 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [41;100H[33m200 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [42;100H[33m201 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [43;100H[33m202 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [44;100H[33m203 [m                                                                               [41m [m              [45;100H[33m204 [m                    root->insert_date(year, term);                             [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m205 [m[20Croot->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m[47;100H[33m206 [m[79C[41m [m[48;100H[33m207 [m[20CNode * temp = current->go_right();[25C[41m [m[49;100H[33m208 [20Cdelete[m current;[44C[41m [m[50;100H[33m209 [m[20Croot = temp;[47C[41m [m[51;182H[1m[7m2,[12C9%[43;104H[?12l[?25h[?25l[51;182H3,0-1[44;104H[?12l[?25h[?25l[51;182H4,1   [45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,0-1[47;104H[?12l[?25h[?25l[m[2;100H[33m166 [m        cin.ignore([31m100[m,[35m'\n'[m);                                                  [41m [m              [3;100H[33m167 [m                                                                               [41m [m              [4;100H[33m168 [m        [33mif[m([31m'C'[m == toupper(letter))                                             [41m [m              [5;100H[33m169 [m            root->remove_course(); [34m//Removes course[m                            [41m [m              [6;100H[33m170 [m        [33melse[m                                                                   [41m [m              [7;100H[33m171 [m        {                                                                      [41m [m              [8;100H[33m172 [m            [33mif[m(!root->go_left() && !root->go_right())                          [41m [m              [9;100H[33m173 [m            {                                                                  [41m [m              [10;100H[33m174 [m                [33mdelete[m root;                                                   [41m [m              [11;100H[33m175 [m                root = [31mNULL[m;                                                   [41m [m              [12;100H[33m176 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [13;100H[33m177 [m            }                                                                  [41m [m              [14;100H[33m178 [m            [33melse[m [33mif[m(!root->go_left() && root->go_right())                      [41m [m              [15;100H[33m179 [m            {                                                                  [41m [m              [16;100H[33m180 [m                Node * temp = root->go_right();                                [41m [m              [17;100H[33m181 [m                [33mdelete[m root;                                                   [41m [m              [18;100H[33m182 [m                root = temp;                                                   [41m [m              [19;100H[33m183 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [20;100H[33m184 [m            }                                                                  [41m [m              [21;100H[33m185 [m            [33melse[m [33mif[m(root->go_left() && !root->go_right())                      [41m [m              [22;100H[33m186 [m            {                                                                  [41m [m              [23;100H[33m187 [m                Node * temp = root->go_left();                                 [41m [m              [24;100H[33m188 [m                [33mdelete[m root;                                                   [41m [m              [25;100H[33m189 [m                root = temp;                                                   [41m [m              [26;100H[33m190 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [27;100H[33m191 [m            }                                                                  [41m [m              [28;100H[33m192 [m            [33melse[m                                                               [41m [m              [29;100H[33m193 [m            {                                                                  [41m [m              [30;100H[33m194 [m                Node * current = root->go_right();                             [41m [m              [31;100H[33m195 [m                [33mif[m(!current->go_left())                                        [41m [m              [32;100H[33m196 [m                {                                                              [41m [m              [33;100H[33m197 [m                    [32mint[m year = current->give_year();                           [41m [m              [34;100H[33m198 [m                    [32mint[m term = current->give_term();                           [41m [m              [35;100H[33m199 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [36;100H[33m200 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [37;100H[33m201 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [38;100H[33m202 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [39;100H[33m203 [m                                                                               [41m [m              [40;100H[33m204 [m                    root->insert_date(year, term);                             [41m [m              [41;100H[33m205 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [42;100H[33m206 [m                                                                               [41m [m              [43;100H[33m207 [m                    Node * temp = current->go_right();                         [41m [m              [44;100H[33m208 [m                    [33mdelete[m current;                                            [41m [m              [45;100H[33m209 [m                    root = temp;                                               [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m210 [20Creturn[m [31m1[m;[50C[41m [m[47;100H[33m211 [m[16C}[62C[41m [m[48;100H[33m212 [16Celse[m[59C[41m [m[49;100H[33m213 [m[16C{[62C[41m [m[50;100H[33m214 [m[20CNode * prev = [31mNULL[m;[40C[41m [m[51;182H[1m[7m7,1   [7C40%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H10,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m171 [m        {                                                                      [41m [m              [3;100H[33m172 [m            [33mif[m(!root->go_left() && !root->go_right())                          [41m [m              [4;100H[33m173 [m            {                                                                  [41m [m              [5;100H[33m174 [m                [33mdelete[m root;                                                   [41m [m              [6;100H[33m175 [m                root = [31mNULL[m;                                                   [41m [m              [7;100H[33m176 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [8;100H[33m177 [m            }                                                                  [41m [m              [9;100H[33m178 [m            [33melse[m [33mif[m(!root->go_left() && root->go_right())                      [41m [m              [10;100H[33m179 [m            {                                                                  [41m [m              [11;100H[33m180 [m                Node * temp = root->go_right();                                [41m [m              [12;100H[33m181 [m                [33mdelete[m root;                                                   [41m [m              [13;100H[33m182 [m                root = temp;                                                   [41m [m              [14;100H[33m183 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [15;100H[33m184 [m            }                                                                  [41m [m              [16;100H[33m185 [m            [33melse[m [33mif[m(root->go_left() && !root->go_right())                      [41m [m              [17;100H[33m186 [m            {                                                                  [41m [m              [18;100H[33m187 [m                Node * temp = root->go_left();                                 [41m [m              [19;100H[33m188 [m                [33mdelete[m root;                                                   [41m [m              [20;100H[33m189 [m                root = temp;                                                   [41m [m              [21;100H[33m190 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [22;100H[33m191 [m            }                                                                  [41m [m              [23;100H[33m192 [m            [33melse[m                                                               [41m [m              [24;100H[33m193 [m            {                                                                  [41m [m              [25;100H[33m194 [m                Node * current = root->go_right();                             [41m [m              [26;100H[33m195 [m                [33mif[m(!current->go_left())                                        [41m [m              [27;100H[33m196 [m                {                                                              [41m [m              [28;100H[33m197 [m                    [32mint[m year = current->give_year();                           [41m [m              [29;100H[33m198 [m                    [32mint[m term = current->give_term();                           [41m [m              [30;100H[33m199 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [31;100H[33m200 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [32;100H[33m201 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [33;100H[33m202 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [34;100H[33m203 [m                                                                               [41m [m              [35;100H[33m204 [m                    root->insert_date(year, term);                             [41m [m              [36;100H[33m205 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [37;100H[33m206 [m                                                                               [41m [m              [38;100H[33m207 [m                    Node * temp = current->go_right();                         [41m [m              [39;100H[33m208 [m                    [33mdelete[m current;                                            [41m [m              [40;100H[33m209 [m                    root = temp;                                               [41m [m              [41;100H[33m210 [m                    [33mreturn[m [31m1[m;                                                  [41m [m              [42;100H[33m211 [m                }                                                              [41m [m              [43;100H[33m212 [m                [33melse[m                                                           [41m [m              [44;100H[33m213 [m                {                                                              [41m [m              [45;100H[33m214 [m                    Node * prev = [31mNULL[m;                                        [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m215 [m[79C[41m [m[47;100H[33m216 [20Cwhile[m(current->go_left())[34C[41m [m[48;100H[33m217 [m[20C{[58C[41m [m[49;100H[33m218 [m[24Cprev = current;[40C[41m [m[50;100H[33m219 [m[24Ccurrent = current->go_left();[26C[41m [m[51;182H[1m[7m2,[12C2%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,0-1[46;104H[?12l[?25h[?25l[51;182H6,1   [47;104H[?12l[?25h[?25l[m[2;100H[33m176 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [3;100H[33m177 [m            }                                                                  [41m [m              [4;100H[33m178 [m            [33melse[m [33mif[m(!root->go_left() && root->go_right())                      [41m [m              [5;100H[33m179 [m            {                                                                  [41m [m              [6;100H[33m180 [m                Node * temp = root->go_right();                                [41m [m              [7;100H[33m181 [m                [33mdelete[m root;                                                   [41m [m              [8;100H[33m182 [m                root = temp;                                                   [41m [m              [9;100H[33m183 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [10;100H[33m184 [m            }                                                                  [41m [m              [11;100H[33m185 [m            [33melse[m [33mif[m(root->go_left() && !root->go_right())                      [41m [m              [12;100H[33m186 [m            {                                                                  [41m [m              [13;100H[33m187 [m                Node * temp = root->go_left();                                 [41m [m              [14;100H[33m188 [m                [33mdelete[m root;                                                   [41m [m              [15;100H[33m189 [m                root = temp;                                                   [41m [m              [16;100H[33m190 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [17;100H[33m191 [m            }                                                                  [41m [m              [18;100H[33m192 [m            [33melse[m                                                               [41m [m              [19;100H[33m193 [m            {                                                                  [41m [m              [20;100H[33m194 [m                Node * current = root->go_right();                             [41m [m              [21;100H[33m195 [m                [33mif[m(!current->go_left())                                        [41m [m              [22;100H[33m196 [m                {                                                              [41m [m              [23;100H[33m197 [m                    [32mint[m year = current->give_year();                           [41m [m              [24;100H[33m198 [m                    [32mint[m term = current->give_term();                           [41m [m              [25;100H[33m199 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [26;100H[33m200 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [27;100H[33m201 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [28;100H[33m202 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [29;100H[33m203 [m                                                                               [41m [m              [30;100H[33m204 [m                    root->insert_date(year, term);                             [41m [m              [31;100H[33m205 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [32;100H[33m206 [m                                                                               [41m [m              [33;100H[33m207 [m                    Node * temp = current->go_right();                         [41m [m              [34;100H[33m208 [m                    [33mdelete[m current;                                            [41m [m              [35;100H[33m209 [m                    root = temp;                                               [41m [m              [36;100H[33m210 [m                    [33mreturn[m [31m1[m;                                                  [41m [m              [37;100H[33m211 [m                }                                                              [41m [m              [38;100H[33m212 [m                [33melse[m                                                           [41m [m              [39;100H[33m213 [m                {                                                              [41m [m              [40;100H[33m214 [m                    Node * prev = [31mNULL[m;                                        [41m [m              [41;100H[33m215 [m                                                                               [41m [m              [42;100H[33m216 [m                    [33mwhile[m(current->go_left())                                  [41m [m              [43;100H[33m217 [m                    {                                                          [41m [m              [44;100H[33m218 [m                        prev = current;                                        [41m [m              [45;100H[33m219 [m                        current = current->go_left();                          [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m220 [m[20C}[58C[41m [m[47;100H[33m221 [m[79C[41m [m[48;100H[33m222 [m[20C[32mint[m year = current->give_year();[27C[41m [m[49;100H[33m223 [m[20C[32mint[m term = current->give_term();[27C[41m [m[50;100H[33m224 [m[20C[32mint[m credits = current->give_credits();[21C[41m [m[51;182H[1m[7m7,[12C3%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H20,[46;104H[?12l[?25h[?25l[51;182H1,0-1[47;104H[?12l[?25h[?25l[m[2;100H[33m181 [m                [33mdelete[m root;                                                   [41m [m              [3;100H[33m182 [m                root = temp;                                                   [41m [m              [4;100H[33m183 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [5;100H[33m184 [m            }                                                                  [41m [m              [6;100H[33m185 [m            [33melse[m [33mif[m(root->go_left() && !root->go_right())                      [41m [m              [7;100H[33m186 [m            {                                                                  [41m [m              [8;100H[33m187 [m                Node * temp = root->go_left();                                 [41m [m              [9;100H[33m188 [m                [33mdelete[m root;                                                   [41m [m              [10;100H[33m189 [m                root = temp;                                                   [41m [m              [11;100H[33m190 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [12;100H[33m191 [m            }                                                                  [41m [m              [13;100H[33m192 [m            [33melse[m                                                               [41m [m              [14;100H[33m193 [m            {                                                                  [41m [m              [15;100H[33m194 [m                Node * current = root->go_right();                             [41m [m              [16;100H[33m195 [m                [33mif[m(!current->go_left())                                        [41m [m              [17;100H[33m196 [m                {                                                              [41m [m              [18;100H[33m197 [m                    [32mint[m year = current->give_year();                           [41m [m              [19;100H[33m198 [m                    [32mint[m term = current->give_term();                           [41m [m              [20;100H[33m199 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [21;100H[33m200 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [22;100H[33m201 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [23;100H[33m202 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [24;100H[33m203 [m                                                                               [41m [m              [25;100H[33m204 [m                    root->insert_date(year, term);                             [41m [m              [26;100H[33m205 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [27;100H[33m206 [m                                                                               [41m [m              [28;100H[33m207 [m                    Node * temp = current->go_right();                         [41m [m              [29;100H[33m208 [m                    [33mdelete[m current;                                            [41m [m              [30;100H[33m209 [m                    root = temp;                                               [41m [m              [31;100H[33m210 [m                    [33mreturn[m [31m1[m;                                                  [41m [m              [32;100H[33m211 [m                }                                                              [41m [m              [33;100H[33m212 [m                [33melse[m                                                           [41m [m              [34;100H[33m213 [m                {                                                              [41m [m              [35;100H[33m214 [m                    Node * prev = [31mNULL[m;                                        [41m [m              [36;100H[33m215 [m                                                                               [41m [m              [37;100H[33m216 [m                    [33mwhile[m(current->go_left())                                  [41m [m              [38;100H[33m217 [m                    {                                                          [41m [m              [39;100H[33m218 [m                        prev = current;                                        [41m [m              [40;100H[33m219 [m                        current = current->go_left();                          [41m [m              [41;100H[33m220 [m                    }                                                          [41m [m              [42;100H[33m221 [m                                                                               [41m [m              [43;100H[33m222 [m                    [32mint[m year = current->give_year();                           [41m [m              [44;100H[33m223 [m                    [32mint[m term = current->give_term();                           [41m [m              [45;100H[33m224 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m225 [m[20C[32mint[m cs_credits = current->give_cs_credits();[15C[41m [m[47;100H[33m226 [m[20C[32mint[m term_gpa = current->give_term_gpa();[19C[41m [m[48;100H[33m227 [m[20C[32mint[m cs_gpa = current->give_cs_gpa();[23C[41m [m[49;100H[33m228 [m[79C[41m [m[50;100H[33m229 [m[20Croot->insert_date(year, term);[29C[41m [m[51;182H[1m[7m2,1   [8C4%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m186 [m            {                                                                  [41m [m              [3;100H[33m187 [m                Node * temp = root->go_left();                                 [41m [m              [4;100H[33m188 [m                [33mdelete[m root;                                                   [41m [m              [5;100H[33m189 [m                root = temp;                                                   [41m [m              [6;100H[33m190 [m                [33mreturn[m [31m1[m;                                                      [41m [m              [7;100H[33m191 [m            }                                                                  [41m [m              [8;100H[33m192 [m            [33melse[m                                                               [41m [m              [9;100H[33m193 [m            {                                                                  [41m [m              [10;100H[33m194 [m                Node * current = root->go_right();                             [41m [m              [11;100H[33m195 [m                [33mif[m(!current->go_left())                                        [41m [m              [12;100H[33m196 [m                {                                                              [41m [m              [13;100H[33m197 [m                    [32mint[m year = current->give_year();                           [41m [m              [14;100H[33m198 [m                    [32mint[m term = current->give_term();                           [41m [m              [15;100H[33m199 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [16;100H[33m200 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [17;100H[33m201 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [18;100H[33m202 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [19;100H[33m203 [m                                                                               [41m [m              [20;100H[33m204 [m                    root->insert_date(year, term);                             [41m [m              [21;100H[33m205 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [22;100H[33m206 [m                                                                               [41m [m              [23;100H[33m207 [m                    Node * temp = current->go_right();                         [41m [m              [24;100H[33m208 [m                    [33mdelete[m current;                                            [41m [m              [25;100H[33m209 [m                    root = temp;                                               [41m [m              [26;100H[33m210 [m                    [33mreturn[m [31m1[m;                                                  [41m [m              [27;100H[33m211 [m                }                                                              [41m [m              [28;100H[33m212 [m                [33melse[m                                                           [41m [m              [29;100H[33m213 [m                {                                                              [41m [m              [30;100H[33m214 [m                    Node * prev = [31mNULL[m;                                        [41m [m              [31;100H[33m215 [m                                                                               [41m [m              [32;100H[33m216 [m                    [33mwhile[m(current->go_left())                                  [41m [m              [33;100H[33m217 [m                    {                                                          [41m [m              [34;100H[33m218 [m                        prev = current;                                        [41m [m              [35;100H[33m219 [m                        current = current->go_left();                          [41m [m              [36;100H[33m220 [m                    }                                                          [41m [m              [37;100H[33m221 [m                                                                               [41m [m              [38;100H[33m222 [m                    [32mint[m year = current->give_year();                           [41m [m              [39;100H[33m223 [m                    [32mint[m term = current->give_term();                           [41m [m              [40;100H[33m224 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [41;100H[33m225 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [42;100H[33m226 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [43;100H[33m227 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [44;100H[33m228 [m                                                                               [41m [m              [45;100H[33m229 [m                    root->insert_date(year, term);                             [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m230 [m[20Croot->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m[47;100H[33m231 [m[79C[41m [m[48;100H[33m232 [m[79C[41m [m[49;100H[33m233 [20Cif[m(current->go_right())[36C[41m [m[50;100H[33m234 [m[20C{[58C[41m [m[51;182H[1m[7m7,[12C5%[43;104H[?12l[?25h[?25l[51;182H8,0-1[44;104H[?12l[?25h[?25l[51;182H9,1   [45;104H[?12l[?25h[?25l[51;181H30,[46;104H[?12l[?25h[?25l[51;182H1,0-1[47;104H[?12l[?25h[?25l[m[2;100H[33m191 [m            }                                                                  [41m [m              [3;100H[33m192 [m            [33melse[m                                                               [41m [m              [4;100H[33m193 [m            {                                                                  [41m [m              [5;100H[33m194 [m                Node * current = root->go_right();                             [41m [m              [6;100H[33m195 [m                [33mif[m(!current->go_left())                                        [41m [m              [7;100H[33m196 [m                {                                                              [41m [m              [8;100H[33m197 [m                    [32mint[m year = current->give_year();                           [41m [m              [9;100H[33m198 [m                    [32mint[m term = current->give_term();                           [41m [m              [10;100H[33m199 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [11;100H[33m200 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [12;100H[33m201 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [13;100H[33m202 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [14;100H[33m203 [m                                                                               [41m [m              [15;100H[33m204 [m                    root->insert_date(year, term);                             [41m [m              [16;100H[33m205 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [17;100H[33m206 [m                                                                               [41m [m              [18;100H[33m207 [m                    Node * temp = current->go_right();                         [41m [m              [19;100H[33m208 [m                    [33mdelete[m current;                                            [41m [m              [20;100H[33m209 [m                    root = temp;                                               [41m [m              [21;100H[33m210 [m                    [33mreturn[m [31m1[m;                                                  [41m [m              [22;100H[33m211 [m                }                                                              [41m [m              [23;100H[33m212 [m                [33melse[m                                                           [41m [m              [24;100H[33m213 [m                {                                                              [41m [m              [25;100H[33m214 [m                    Node * prev = [31mNULL[m;                                        [41m [m              [26;100H[33m215 [m                                                                               [41m [m              [27;100H[33m216 [m                    [33mwhile[m(current->go_left())                                  [41m [m              [28;100H[33m217 [m                    {                                                          [41m [m              [29;100H[33m218 [m                        prev = current;                                        [41m [m              [30;100H[33m219 [m                        current = current->go_left();                          [41m [m              [31;100H[33m220 [m                    }                                                          [41m [m              [32;100H[33m221 [m                                                                               [41m [m              [33;100H[33m222 [m                    [32mint[m year = current->give_year();                           [41m [m              [34;100H[33m223 [m                    [32mint[m term = current->give_term();                           [41m [m              [35;100H[33m224 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [36;100H[33m225 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [37;100H[33m226 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [38;100H[33m227 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [39;100H[33m228 [m                                                                               [41m [m              [40;100H[33m229 [m                    root->insert_date(year, term);                             [41m [m              [41;100H[33m230 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [42;100H[33m231 [m                                                                               [41m [m              [43;100H[33m232 [m                                                                               [41m [m              [44;100H[33m233 [m                    [33mif[m(current->go_right())                                    [41m [m              [45;100H[33m234 [m                    {                                                          [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m235 [m[24CNode * temp = current->go_right();[21C[41m [m[47;100H[33m236 [24Cdelete[m current;[40C[41m [m[48;100H[33m237 [m[24Cprev->go_left() = temp;[32C[41m [m[49;100H[33m238 [24Creturn[m [31m1[m;[46C[41m [m[50;100H[33m239 [m[20C}[58C[41m [m[51;182H[1m[7m2,[12C7%[43;104H[?12l[?25h[?25l[51;182H3,1   [44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m196 [m                {                                                              [41m [m              [3;100H[33m197 [m                    [32mint[m year = current->give_year();                           [41m [m              [4;100H[33m198 [m                    [32mint[m term = current->give_term();                           [41m [m              [5;100H[33m199 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [6;100H[33m200 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [7;100H[33m201 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [8;100H[33m202 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [9;100H[33m203 [m                                                                               [41m [m              [10;100H[33m204 [m                    root->insert_date(year, term);                             [41m [m              [11;100H[33m205 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [12;100H[33m206 [m                                                                               [41m [m              [13;100H[33m207 [m                    Node * temp = current->go_right();                         [41m [m              [14;100H[33m208 [m                    [33mdelete[m current;                                            [41m [m              [15;100H[33m209 [m                    root = temp;                                               [41m [m              [16;100H[33m210 [m                    [33mreturn[m [31m1[m;                                                  [41m [m              [17;100H[33m211 [m                }                                                              [41m [m              [18;100H[33m212 [m                [33melse[m                                                           [41m [m              [19;100H[33m213 [m                {                                                              [41m [m              [20;100H[33m214 [m                    Node * prev = [31mNULL[m;                                        [41m [m              [21;100H[33m215 [m                                                                               [41m [m              [22;100H[33m216 [m                    [33mwhile[m(current->go_left())                                  [41m [m              [23;100H[33m217 [m                    {                                                          [41m [m              [24;100H[33m218 [m                        prev = current;                                        [41m [m              [25;100H[33m219 [m                        current = current->go_left();                          [41m [m              [26;100H[33m220 [m                    }                                                          [41m [m              [27;100H[33m221 [m                                                                               [41m [m              [28;100H[33m222 [m                    [32mint[m year = current->give_year();                           [41m [m              [29;100H[33m223 [m                    [32mint[m term = current->give_term();                           [41m [m              [30;100H[33m224 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [31;100H[33m225 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [32;100H[33m226 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [33;100H[33m227 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [34;100H[33m228 [m                                                                               [41m [m              [35;100H[33m229 [m                    root->insert_date(year, term);                             [41m [m              [36;100H[33m230 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [37;100H[33m231 [m                                                                               [41m [m              [38;100H[33m232 [m                                                                               [41m [m              [39;100H[33m233 [m                    [33mif[m(current->go_right())                                    [41m [m              [40;100H[33m234 [m                    {                                                          [41m [m              [41;100H[33m235 [m                        Node * temp = current->go_right();                     [41m [m              [42;100H[33m236 [m                        [33mdelete[m current;                                        [41m [m              [43;100H[33m237 [m                        prev->go_left() = temp;                                [41m [m              [44;100H[33m238 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [45;100H[33m239 [m                    }                                                          [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m240 [20Celse[m[55C[41m [m[47;100H[33m241 [m[20C{[58C[41m [m[48;100H[33m242 [24Cdelete[m current;[40C[41m [m[49;100H[33m243 [m[24Ccurrent = [31mNULL[m;[40C[41m [m[50;100H[33m244 [24Creturn[m [31m1[m;[46C[41m [m[51;182H[1m[7m7,[12C8%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H40,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m201 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [3;100H[33m202 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [4;100H[33m203 [m                                                                               [41m [m              [5;100H[33m204 [m                    root->insert_date(year, term);                             [41m [m              [6;100H[33m205 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [7;100H[33m206 [m                                                                               [41m [m              [8;100H[33m207 [m                    Node * temp = current->go_right();                         [41m [m              [9;100H[33m208 [m                    [33mdelete[m current;                                            [41m [m              [10;100H[33m209 [m                    root = temp;                                               [41m [m              [11;100H[33m210 [m                    [33mreturn[m [31m1[m;                                                  [41m [m              [12;100H[33m211 [m                }                                                              [41m [m              [13;100H[33m212 [m                [33melse[m                                                           [41m [m              [14;100H[33m213 [m                {                                                              [41m [m              [15;100H[33m214 [m                    Node * prev = [31mNULL[m;                                        [41m [m              [16;100H[33m215 [m                                                                               [41m [m              [17;100H[33m216 [m                    [33mwhile[m(current->go_left())                                  [41m [m              [18;100H[33m217 [m                    {                                                          [41m [m              [19;100H[33m218 [m                        prev = current;                                        [41m [m              [20;100H[33m219 [m                        current = current->go_left();                          [41m [m              [21;100H[33m220 [m                    }                                                          [41m [m              [22;100H[33m221 [m                                                                               [41m [m              [23;100H[33m222 [m                    [32mint[m year = current->give_year();                           [41m [m              [24;100H[33m223 [m                    [32mint[m term = current->give_term();                           [41m [m              [25;100H[33m224 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [26;100H[33m225 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [27;100H[33m226 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [28;100H[33m227 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [29;100H[33m228 [m                                                                               [41m [m              [30;100H[33m229 [m                    root->insert_date(year, term);                             [41m [m              [31;100H[33m230 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [32;100H[33m231 [m                                                                               [41m [m              [33;100H[33m232 [m                                                                               [41m [m              [34;100H[33m233 [m                    [33mif[m(current->go_right())                                    [41m [m              [35;100H[33m234 [m                    {                                                          [41m [m              [36;100H[33m235 [m                        Node * temp = current->go_right();                     [41m [m              [37;100H[33m236 [m                        [33mdelete[m current;                                        [41m [m              [38;100H[33m237 [m                        prev->go_left() = temp;                                [41m [m              [39;100H[33m238 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [40;100H[33m239 [m                    }                                                          [41m [m              [41;100H[33m240 [m                    [33melse[m                                                       [41m [m              [42;100H[33m241 [m                    {                                                          [41m [m              [43;100H[33m242 [m                        [33mdelete[m current;                                        [41m [m              [44;100H[33m243 [m                        current = [31mNULL[m;                                        [41m [m              [45;100H[33m244 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m245 [m[20C}[58C[41m [m[47;100H[33m246 [m[16C}[62C[41m [m[48;100H[33m247 [m[12C}[66C[41m [m[49;100H[33m248 [m[8C}[70C[41m [m[50;100H[33m249 [m    }[74C[41m [m[51;182H[1m[7m2,[12C9%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m206 [m                                                                               [41m [m              [3;100H[33m207 [m                    Node * temp = current->go_right();                         [41m [m              [4;100H[33m208 [m                    [33mdelete[m current;                                            [41m [m              [5;100H[33m209 [m                    root = temp;                                               [41m [m              [6;100H[33m210 [m                    [33mreturn[m [31m1[m;                                                  [41m [m              [7;100H[33m211 [m                }                                                              [41m [m              [8;100H[33m212 [m                [33melse[m                                                           [41m [m              [9;100H[33m213 [m                {                                                              [41m [m              [10;100H[33m214 [m                    Node * prev = [31mNULL[m;                                        [41m [m              [11;100H[33m215 [m                                                                               [41m [m              [12;100H[33m216 [m                    [33mwhile[m(current->go_left())                                  [41m [m              [13;100H[33m217 [m                    {                                                          [41m [m              [14;100H[33m218 [m                        prev = current;                                        [41m [m              [15;100H[33m219 [m                        current = current->go_left();                          [41m [m              [16;100H[33m220 [m                    }                                                          [41m [m              [17;100H[33m221 [m                                                                               [41m [m              [18;100H[33m222 [m                    [32mint[m year = current->give_year();                           [41m [m              [19;100H[33m223 [m                    [32mint[m term = current->give_term();                           [41m [m              [20;100H[33m224 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [21;100H[33m225 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [22;100H[33m226 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [23;100H[33m227 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [24;100H[33m228 [m                                                                               [41m [m              [25;100H[33m229 [m                    root->insert_date(year, term);                             [41m [m              [26;100H[33m230 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [27;100H[33m231 [m                                                                               [41m [m              [28;100H[33m232 [m                                                                               [41m [m              [29;100H[33m233 [m                    [33mif[m(current->go_right())                                    [41m [m              [30;100H[33m234 [m                    {                                                          [41m [m              [31;100H[33m235 [m                        Node * temp = current->go_right();                     [41m [m              [32;100H[33m236 [m                        [33mdelete[m current;                                        [41m [m              [33;100H[33m237 [m                        prev->go_left() = temp;                                [41m [m              [34;100H[33m238 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [35;100H[33m239 [m                    }                                                          [41m [m              [36;100H[33m240 [m                    [33melse[m                                                       [41m [m              [37;100H[33m241 [m                    {                                                          [41m [m              [38;100H[33m242 [m                        [33mdelete[m current;                                        [41m [m              [39;100H[33m243 [m                        current = [31mNULL[m;                                        [41m [m              [40;100H[33m244 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [41;100H[33m245 [m                    }                                                          [41m [m              [42;100H[33m246 [m                }                                                              [41m [m              [43;100H[33m247 [m            }                                                                  [41m [m              [44;100H[33m248 [m        }                                                                      [41m [m              [45;100H[33m249 [m    }                                                                          [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m250 [m    [33mreturn[m remove(root->go_left(),rm_year,rm_term) + remove(root->go_right(),rm[41m_[myear,rm_term);[47;100H[33m251 [m}[78C[41m [m[48;100H[33m252 [m[79C[41m [m[49;100H[33m253 [m[79C[41m [m[50;100H[33m254 [m[79C[41m [m[51;182H[1m[7m7,[11C50%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H50,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m211 [m                }                                                              [41m [m              [3;100H[33m212 [m                [33melse[m                                                           [41m [m              [4;100H[33m213 [m                {                                                              [41m [m              [5;100H[33m214 [m                    Node * prev = [31mNULL[m;                                        [41m [m              [6;100H[33m215 [m                                                                               [41m [m              [7;100H[33m216 [m                    [33mwhile[m(current->go_left())                                  [41m [m              [8;100H[33m217 [m                    {                                                          [41m [m              [9;100H[33m218 [m                        prev = current;                                        [41m [m              [10;100H[33m219 [m                        current = current->go_left();                          [41m [m              [11;100H[33m220 [m                    }                                                          [41m [m              [12;100H[33m221 [m                                                                               [41m [m              [13;100H[33m222 [m                    [32mint[m year = current->give_year();                           [41m [m              [14;100H[33m223 [m                    [32mint[m term = current->give_term();                           [41m [m              [15;100H[33m224 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [16;100H[33m225 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [17;100H[33m226 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [18;100H[33m227 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [19;100H[33m228 [m                                                                               [41m [m              [20;100H[33m229 [m                    root->insert_date(year, term);                             [41m [m              [21;100H[33m230 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [22;100H[33m231 [m                                                                               [41m [m              [23;100H[33m232 [m                                                                               [41m [m              [24;100H[33m233 [m                    [33mif[m(current->go_right())                                    [41m [m              [25;100H[33m234 [m                    {                                                          [41m [m              [26;100H[33m235 [m                        Node * temp = current->go_right();                     [41m [m              [27;100H[33m236 [m                        [33mdelete[m current;                                        [41m [m              [28;100H[33m237 [m                        prev->go_left() = temp;                                [41m [m              [29;100H[33m238 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [30;100H[33m239 [m                    }                                                          [41m [m              [31;100H[33m240 [m                    [33melse[m                                                       [41m [m              [32;100H[33m241 [m                    {                                                          [41m [m              [33;100H[33m242 [m                        [33mdelete[m current;                                        [41m [m              [34;100H[33m243 [m                        current = [31mNULL[m;                                        [41m [m              [35;100H[33m244 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [36;100H[33m245 [m                    }                                                          [41m [m              [37;100H[33m246 [m                }                                                              [41m [m              [38;100H[33m247 [m            }                                                                  [41m [m              [39;100H[33m248 [m        }                                                                      [41m [m              [40;100H[33m249 [m    }                                                                          [41m [m              [41;100H[33m250 [m    [33mreturn[m remove(root->go_left(),rm_year,rm_term) + remove(root->go_right(),rm[41m_[myear,rm_term);[42;100H[33m251 [m}                                                                              [41m [m              [43;100H[33m252 [m                                                                               [41m [m              [44;100H[33m253 [m                                                                               [41m [m              [45;100H[33m254 [m                                                                               [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m255 [m[34m//Task:   Displays the whole tree[m[46C[41m [m[47;100H[33m256 [m[34m//Input:  Root to recursively call upon itself[m[33C[41m [m[48;100H[33m257 [m[34m//Output: Displays each node[m[51C[41m [m[49;100H[33m258 [m[32mvoid[m Pine::display(Node * root) [32mconst[m[42C[41m [m[50;100H[33m259 [m{[78C[41m [m[51;182H[1m[7m2,0-1[9C1%[43;104H[?12l[?25h[?25l[51;182H1,1   [42;104H[?12l[?25h[?25l[51;182H2,0-1[43;104H[?12l[?25h[?25l[51;182H1,1   [42;104H[?12l[?25h[?25l[51;182H0,[41;104H[?12l[?25h[?25l[51;181H49,[40;104H[?12l[?25h[?25l[51;182H8,[39;104H[?12l[?25h[?25l[51;182H7,[38;104H[?12l[?25h[?25l[51;182H6,[37;104H[?12l[?25h[?25l[51;182H5,[36;104H[?12l[?25h[?25l[51;182H4,[35;104H[?12l[?25h[?25l[51;182H3,[34;104H[?12l[?25h[?25l[51;182H2,[33;104H[?12l[?25h[?25l[51;182H1,[32;104H[?12l[?25h[?25l[51;182H0,[31;104H[?12l[?25h[?25l[51;181H39,[30;104H[?12l[?25h[?25l[51;182H8,[29;104H[?12l[?25h[?25l[51;182H7,[28;104H[?12l[?25h[?25l[51;182H6,[27;104H[?12l[?25h[?25l[51;182H5,[26;104H[?12l[?25h[?25l[51;182H4,[25;104H[?12l[?25h[?25l[51;182H3,[24;104H[?12l[?25h[?25l[51;182H2,0-1[23;104H[?12l[?25h[?25l[51;182H1,[22;104H[?12l[?25h[?25l[51;182H0,1   [21;104H[?12l[?25h[?25l[51;181H29,[20;104H[?12l[?25h[?25l[51;182H8,0-1[19;104H[?12l[?25h[?25l[51;182H7,1   [18;104H[?12l[?25h[?25l[51;182H6,[17;104H[?12l[?25h[?25l[51;182H5,[16;104H[?12l[?25h[?25l[51;182H4,[15;104H[?12l[?25h[?25l[51;182H3,[14;104H[?12l[?25h[?25l[51;182H2,[13;104H[?12l[?25h[?25l[51;182H1,0-1[12;104H[?12l[?25h[?25l[51;182H0,1   [11;104H[?12l[?25h[?25l[51;181H19,[10;104H[?12l[?25h[?25l[51;182H8,[9;104H[?12l[?25h[?25l[51;182H7,[8;104H[?12l[?25h[?25l[51;182H6,[7;104H[?12l[?25h[?25l[51;182H5,0-1[6;104H[?12l[?25h[?25l[51;182H4,1   [5;104H[?12l[?25h[?25l[m[2;1H[99C                                                                                                  [3;100H                                                                                                  [4;100H                                                                                                  [5;100H                                                                                                  [6;100H                                                                                                  [7;100H[33m211 [m                }                                                              [41m [m              [8;100H[33m212 [m                [33melse[m                                                           [41m [m              [9;100H[33m213 [m                {                                                              [41m [m              [10;100H[33m214 [m                    Node * prev = [31mNULL[m;                                        [41m [m              [11;100H[33m215 [m                                                                               [41m [m              [12;100H[33m216 [m                    [33mwhile[m(current->go_left())                                  [41m [m              [13;100H[33m217 [m                    {                                                          [41m [m              [14;100H[33m218 [m                        prev = current;                                        [41m [m              [15;100H[33m219 [m                        current = current->go_left();                          [41m [m              [16;100H[33m220 [m                    }                                                          [41m [m              [17;100H[33m221 [m                                                                               [41m [m              [18;100H[33m222 [m                    [32mint[m year = current->give_year();                           [41m [m              [19;100H[33m223 [m                    [32mint[m term = current->give_term();                           [41m [m              [20;100H[33m224 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [21;100H[33m225 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [22;100H[33m226 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [23;100H[33m227 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [24;100H[33m228 [m                                                                               [41m [m              [25;100H[33m229 [m                    root->insert_date(year, term);                             [41m [m              [26;100H[33m230 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [27;100H[33m231 [m                                                                               [41m [m              [28;100H[33m232 [m                                                                               [41m [m              [29;100H[33m233 [m                    [33mif[m(current->go_right())                                    [41m [m              [30;100H[33m234 [m                    {                                                          [41m [m              [31;100H[33m235 [m                        Node * temp = current->go_right();                     [41m [m              [32;100H[33m236 [m                        [33mdelete[m current;                                        [41m [m              [33;100H[33m237 [m                        prev->go_left() = temp;                                [41m [m              [34;100H[33m238 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [35;100H[33m239 [m                    }                                                          [41m [m              [36;100H[33m240 [m                    [33melse[m                                                       [41m [m              [37;100H[33m241 [m                    {                                                          [41m [m              [38;100H[33m242 [m                        [33mdelete[m current;                                        [41m [m              [39;100H[33m243 [m                        current = [31mNULL[m;                                        [41m [m              [40;100H[33m244 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [41;100H[33m245 [m                    }                                                          [41m [m              [42;100H[33m246 [m                }                                                              [41m [m              [43;100H[33m247 [m            }                                                                  [41m [m              [44;100H[33m248 [m        }                                                                      [41m [m              [45;100H[33m249 [m    }                                                                          [41m [m              [46;100H[33m250 [m    [33mreturn[m remove(root->go_left(),rm_year,rm_term) + remove(root->go_right(),rm[41m_[myear,rm_term);[47;100H[33m251 [m}                                                                              [41m [m              [48;100H[33m252 [m                                                                               [41m [m              [49;100H[33m253 [m                                                                               [41m [m              [50;100H[33m254 [m                                                                               [41m [m              [2;100H[33m206 [m[79C[41m [m[3;100H[33m207 [m[20CNode * temp = current->go_right();[25C[41m [m[4;100H[33m208 [20Cdelete[m current;[44C[41m [m[5;100H[33m209 [m[20Croot = temp;[47C[41m [m[6;100H[33m210 [20Creturn[m [31m1[m;[50C[41m [m[51;182H[1m[7m3,[12C0%[9;104H[?12l[?25h[?25l[51;182H2,[8;104H[?12l[?25h[?25l[51;182H1,[7;104H[?12l[?25h[?25l[51;182H0,[6;104H[?12l[?25h[?25l[51;181H09,[5;104H[?12l[?25h[?25l[m[2;1H[99C                                                                                                  [3;100H                                                                                                  [4;100H                                                                                                  [5;100H                                                                                                  [6;100H                                                                                                  [7;100H[33m206 [m                                                                               [41m [m              [8;100H[33m207 [m                    Node * temp = current->go_right();                         [41m [m              [9;100H[33m208 [m                    [33mdelete[m current;                                            [41m [m              [10;100H[33m209 [m                    root = temp;                                               [41m [m              [11;100H[33m210 [m                    [33mreturn[m [31m1[m;                                                  [41m [m              [12;100H[33m211 [m                }                                                              [41m [m              [13;100H[33m212 [m                [33melse[m                                                           [41m [m              [14;100H[33m213 [m                {                                                              [41m [m              [15;100H[33m214 [m                    Node * prev = [31mNULL[m;                                        [41m [m              [16;100H[33m215 [m                                                                               [41m [m              [17;100H[33m216 [m                    [33mwhile[m(current->go_left())                                  [41m [m              [18;100H[33m217 [m                    {                                                          [41m [m              [19;100H[33m218 [m                        prev = current;                                        [41m [m              [20;100H[33m219 [m                        current = current->go_left();                          [41m [m              [21;100H[33m220 [m                    }                                                          [41m [m              [22;100H[33m221 [m                                                                               [41m [m              [23;100H[33m222 [m                    [32mint[m year = current->give_year();                           [41m [m              [24;100H[33m223 [m                    [32mint[m term = current->give_term();                           [41m [m              [25;100H[33m224 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [26;100H[33m225 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [27;100H[33m226 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [28;100H[33m227 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [29;100H[33m228 [m                                                                               [41m [m              [30;100H[33m229 [m                    root->insert_date(year, term);                             [41m [m              [31;100H[33m230 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [32;100H[33m231 [m                                                                               [41m [m              [33;100H[33m232 [m                                                                               [41m [m              [34;100H[33m233 [m                    [33mif[m(current->go_right())                                    [41m [m              [35;100H[33m234 [m                    {                                                          [41m [m              [36;100H[33m235 [m                        Node * temp = current->go_right();                     [41m [m              [37;100H[33m236 [m                        [33mdelete[m current;                                        [41m [m              [38;100H[33m237 [m                        prev->go_left() = temp;                                [41m [m              [39;100H[33m238 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [40;100H[33m239 [m                    }                                                          [41m [m              [41;100H[33m240 [m                    [33melse[m                                                       [41m [m              [42;100H[33m241 [m                    {                                                          [41m [m              [43;100H[33m242 [m                        [33mdelete[m current;                                        [41m [m              [44;100H[33m243 [m                        current = [31mNULL[m;                                        [41m [m              [45;100H[33m244 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [46;100H[33m245 [m                    }                                                          [41m [m              [47;100H[33m246 [m                }                                                              [41m [m              [48;100H[33m247 [m            }                                                                  [41m [m              [49;100H[33m248 [m        }                                                                      [41m [m              [50;100H[33m249 [m    }                                                                          [41m [m              [2;100H[33m201 [m[20C[32mint[m term_gpa = current->give_term_gpa();[19C[41m [m[3;100H[33m202 [m[20C[32mint[m cs_gpa = current->give_cs_gpa();[23C[41m [m[4;100H[33m203 [m[79C[41m [m[5;100H[33m204 [m[20Croot->insert_date(year, term);[29C[41m [m[6;100H[33m205 [m[20Croot->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m[51;182H[1m[7m8,[11C49%[9;104H[?12l[?25h[?25l[51;182H7,[8;104H[?12l[?25h[?25l[51;182H6,0-1[7;104H[?12l[?25h[?25l[51;182H7,1   [8;104H[?12l[?25h[?25l[51;182H8,[9;104H[?12l[?25h[?25l[51;182H9,[10;104H[?12l[?25h[?25l[51;181H10,[11;104H[?12l[?25h[?25l[51;182H1,[12;104H[?12l[?25h[?25l[51;182H2,[13;104H[?12l[?25h[?25l[51;182H3,[14;104H[?12l[?25h[?25l[51;182H4,[15;104H[?12l[?25h[?25l[51;182H5,0-1[16;104H[?12l[?25h[?25l[51;182H6,1   [17;104H[?12l[?25h[?25l[51;182H7,[18;104H[?12l[?25h[?25l[51;182H8,[19;104H[?12l[?25h[?25l[51;182H9,[20;104H[?12l[?25h[?25l[51;181H20,[21;104H[?12l[?25h[?25l[51;182H1,0-1[22;104H[?12l[?25h[?25l[51;182H2,1   [23;104H[?12l[?25h[?25l[51;182H3,[24;104H[?12l[?25h[?25l[51;182H4,[25;104H[?12l[?25h[?25l[51;182H5,[26;104H[?12l[?25h[?25l[51;182H6,[27;104H[?12l[?25h[?25l[51;182H7,[28;104H[?12l[?25h[?25l[51;182H8,0-1[29;104H[?12l[?25h[?25l[51;182H9,1   [30;104H[?12l[?25h[?25l[51;181H30,[31;104H[?12l[?25h[?25l[51;182H1,0-1[32;104H[?12l[?25h[?25l[51;182H2,[33;104H[?12l[?25h[?25l[51;182H3,1   [34;104H[?12l[?25h[?25l[51;182H4,[35;104H[?12l[?25h[?25l[51;182H5,[36;104H[?12l[?25h[?25l[51;182H6,[37;104H[?12l[?25h[?25l[51;182H7,[38;104H[?12l[?25h[?25l[51;182H8,[39;104H[?12l[?25h[?25l[51;182H9,[40;104H[?12l[?25h[?25l[51;181H40,[41;104H[?12l[?25h[?25l[51;182H1,[42;104H[?12l[?25h[?25l[51;182H2,[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m206 [m                                                                               [41m [m              [3;100H[33m207 [m                    Node * temp = current->go_right();                         [41m [m              [4;100H[33m208 [m                    [33mdelete[m current;                                            [41m [m              [5;100H[33m209 [m                    root = temp;                                               [41m [m              [6;100H[33m210 [m                    [33mreturn[m [31m1[m;                                                  [41m [m              [7;100H[33m211 [m                }                                                              [41m [m              [8;100H[33m212 [m                [33melse[m                                                           [41m [m              [9;100H[33m213 [m                {                                                              [41m [m              [10;100H[33m214 [m                    Node * prev = [31mNULL[m;                                        [41m [m              [11;100H[33m215 [m                                                                               [41m [m              [12;100H[33m216 [m                    [33mwhile[m(current->go_left())                                  [41m [m              [13;100H[33m217 [m                    {                                                          [41m [m              [14;100H[33m218 [m                        prev = current;                                        [41m [m              [15;100H[33m219 [m                        current = current->go_left();                          [41m [m              [16;100H[33m220 [m                    }                                                          [41m [m              [17;100H[33m221 [m                                                                               [41m [m              [18;100H[33m222 [m                    [32mint[m year = current->give_year();                           [41m [m              [19;100H[33m223 [m                    [32mint[m term = current->give_term();                           [41m [m              [20;100H[33m224 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [21;100H[33m225 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [22;100H[33m226 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [23;100H[33m227 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [24;100H[33m228 [m                                                                               [41m [m              [25;100H[33m229 [m                    root->insert_date(year, term);                             [41m [m              [26;100H[33m230 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [27;100H[33m231 [m                                                                               [41m [m              [28;100H[33m232 [m                                                                               [41m [m              [29;100H[33m233 [m                    [33mif[m(current->go_right())                                    [41m [m              [30;100H[33m234 [m                    {                                                          [41m [m              [31;100H[33m235 [m                        Node * temp = current->go_right();                     [41m [m              [32;100H[33m236 [m                        [33mdelete[m current;                                        [41m [m              [33;100H[33m237 [m                        prev->go_left() = temp;                                [41m [m              [34;100H[33m238 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [35;100H[33m239 [m                    }                                                          [41m [m              [36;100H[33m240 [m                    [33melse[m                                                       [41m [m              [37;100H[33m241 [m                    {                                                          [41m [m              [38;100H[33m242 [m                        [33mdelete[m current;                                        [41m [m              [39;100H[33m243 [m                        current = [31mNULL[m;                                        [41m [m              [40;100H[33m244 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [41;100H[33m245 [m                    }                                                          [41m [m              [42;100H[33m246 [m                }                                                              [41m [m              [43;100H[33m247 [m            }                                                                  [41m [m              [44;100H[33m248 [m        }                                                                      [41m [m              [45;100H[33m249 [m    }                                                                          [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m250 [m    [33mreturn[m remove(root->go_left(),rm_year,rm_term) + remove(root->go_right(),rm[41m_[myear,rm_term);[47;100H[33m251 [m}[78C[41m [m[48;100H[33m252 [m[79C[41m [m[49;100H[33m253 [m[79C[41m [m[50;100H[33m254 [m[79C[41m [m[51;182H[1m[7m7,[11C50%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H50,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m211 [m                }                                                              [41m [m              [3;100H[33m212 [m                [33melse[m                                                           [41m [m              [4;100H[33m213 [m                {                                                              [41m [m              [5;100H[33m214 [m                    Node * prev = [31mNULL[m;                                        [41m [m              [6;100H[33m215 [m                                                                               [41m [m              [7;100H[33m216 [m                    [33mwhile[m(current->go_left())                                  [41m [m              [8;100H[33m217 [m                    {                                                          [41m [m              [9;100H[33m218 [m                        prev = current;                                        [41m [m              [10;100H[33m219 [m                        current = current->go_left();                          [41m [m              [11;100H[33m220 [m                    }                                                          [41m [m              [12;100H[33m221 [m                                                                               [41m [m              [13;100H[33m222 [m                    [32mint[m year = current->give_year();                           [41m [m              [14;100H[33m223 [m                    [32mint[m term = current->give_term();                           [41m [m              [15;100H[33m224 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [16;100H[33m225 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [17;100H[33m226 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [18;100H[33m227 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [19;100H[33m228 [m                                                                               [41m [m              [20;100H[33m229 [m                    root->insert_date(year, term);                             [41m [m              [21;100H[33m230 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [22;100H[33m231 [m                                                                               [41m [m              [23;100H[33m232 [m                                                                               [41m [m              [24;100H[33m233 [m                    [33mif[m(current->go_right())                                    [41m [m              [25;100H[33m234 [m                    {                                                          [41m [m              [26;100H[33m235 [m                        Node * temp = current->go_right();                     [41m [m              [27;100H[33m236 [m                        [33mdelete[m current;                                        [41m [m              [28;100H[33m237 [m                        prev->go_left() = temp;                                [41m [m              [29;100H[33m238 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [30;100H[33m239 [m                    }                                                          [41m [m              [31;100H[33m240 [m                    [33melse[m                                                       [41m [m              [32;100H[33m241 [m                    {                                                          [41m [m              [33;100H[33m242 [m                        [33mdelete[m current;                                        [41m [m              [34;100H[33m243 [m                        current = [31mNULL[m;                                        [41m [m              [35;100H[33m244 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [36;100H[33m245 [m                    }                                                          [41m [m              [37;100H[33m246 [m                }                                                              [41m [m              [38;100H[33m247 [m            }                                                                  [41m [m              [39;100H[33m248 [m        }                                                                      [41m [m              [40;100H[33m249 [m    }                                                                          [41m [m              [41;100H[33m250 [m    [33mreturn[m remove(root->go_left(),rm_year,rm_term) + remove(root->go_right(),rm[41m_[myear,rm_term);[42;100H[33m251 [m}                                                                              [41m [m              [43;100H[33m252 [m                                                                               [41m [m              [44;100H[33m253 [m                                                                               [41m [m              [45;100H[33m254 [m                                                                               [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m255 [m[34m//Task:   Displays the whole tree[m[46C[41m [m[47;100H[33m256 [m[34m//Input:  Root to recursively call upon itself[m[33C[41m [m[48;100H[33m257 [m[34m//Output: Displays each node[m[51C[41m [m[49;100H[33m258 [m[32mvoid[m Pine::display(Node * root) [32mconst[m[42C[41m [m[50;100H[33m259 [m{[78C[41m [m[51;182H[1m[7m2,0-1[9C1%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,1   [46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m216 [m                    [33mwhile[m(current->go_left())                                  [41m [m              [3;100H[33m217 [m                    {                                                          [41m [m              [4;100H[33m218 [m                        prev = current;                                        [41m [m              [5;100H[33m219 [m                        current = current->go_left();                          [41m [m              [6;100H[33m220 [m                    }                                                          [41m [m              [7;100H[33m221 [m                                                                               [41m [m              [8;100H[33m222 [m                    [32mint[m year = current->give_year();                           [41m [m              [9;100H[33m223 [m                    [32mint[m term = current->give_term();                           [41m [m              [10;100H[33m224 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [11;100H[33m225 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [12;100H[33m226 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [13;100H[33m227 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [14;100H[33m228 [m                                                                               [41m [m              [15;100H[33m229 [m                    root->insert_date(year, term);                             [41m [m              [16;100H[33m230 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [17;100H[33m231 [m                                                                               [41m [m              [18;100H[33m232 [m                                                                               [41m [m              [19;100H[33m233 [m                    [33mif[m(current->go_right())                                    [41m [m              [20;100H[33m234 [m                    {                                                          [41m [m              [21;100H[33m235 [m                        Node * temp = current->go_right();                     [41m [m              [22;100H[33m236 [m                        [33mdelete[m current;                                        [41m [m              [23;100H[33m237 [m                        prev->go_left() = temp;                                [41m [m              [24;100H[33m238 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [25;100H[33m239 [m                    }                                                          [41m [m              [26;100H[33m240 [m                    [33melse[m                                                       [41m [m              [27;100H[33m241 [m                    {                                                          [41m [m              [28;100H[33m242 [m                        [33mdelete[m current;                                        [41m [m              [29;100H[33m243 [m                        current = [31mNULL[m;                                        [41m [m              [30;100H[33m244 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [31;100H[33m245 [m                    }                                                          [41m [m              [32;100H[33m246 [m                }                                                              [41m [m              [33;100H[33m247 [m            }                                                                  [41m [m              [34;100H[33m248 [m        }                                                                      [41m [m              [35;100H[33m249 [m    }                                                                          [41m [m              [36;100H[33m250 [m    [33mreturn[m remove(root->go_left(),rm_year,rm_term) + remove(root->go_right(),rm[41m_[myear,rm_term);[37;100H[33m251 [m}                                                                              [41m [m              [38;100H[33m252 [m                                                                               [41m [m              [39;100H[33m253 [m                                                                               [41m [m              [40;100H[33m254 [m                                                                               [41m [m              [41;100H[33m255 [m[34m//Task:   Displays the whole tree[m                                              [41m [m              [42;100H[33m256 [m[34m//Input:  Root to recursively call upon itself[m                                 [41m [m              [43;100H[33m257 [m[34m//Output: Displays each node[m                                                   [41m [m              [44;100H[33m258 [m[32mvoid[m Pine::display(Node * root) [32mconst[m                                          [41m [m              [45;100H[33m259 [m{                                                                              [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m260 [m    [33mif[m(!root) [33mreturn[m;[58C[41m [m[47;100H[33m261 [m[79C[41m [m[48;100H[33m262 [m    display(root->go_left());[50C[41m [m[49;100H[33m263 [m    root->display();[59C[41m [m[50;100H[33m264 [m    display(root->go_right());[49C[41m [m[51;182H[1m[7m7,[12C3%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H60,[46;104H[?12l[?25h[?25l[51;182H1,0-1[47;104H[?12l[?25h[?25l[m[2;100H[33m221 [m                                                                               [41m [m              [3;100H[33m222 [m                    [32mint[m year = current->give_year();                           [41m [m              [4;100H[33m223 [m                    [32mint[m term = current->give_term();                           [41m [m              [5;100H[33m224 [m                    [32mint[m credits = current->give_credits();                     [41m [m              [6;100H[33m225 [m                    [32mint[m cs_credits = current->give_cs_credits();               [41m [m              [7;100H[33m226 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [8;100H[33m227 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [9;100H[33m228 [m                                                                               [41m [m              [10;100H[33m229 [m                    root->insert_date(year, term);                             [41m [m              [11;100H[33m230 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [12;100H[33m231 [m                                                                               [41m [m              [13;100H[33m232 [m                                                                               [41m [m              [14;100H[33m233 [m                    [33mif[m(current->go_right())                                    [41m [m              [15;100H[33m234 [m                    {                                                          [41m [m              [16;100H[33m235 [m                        Node * temp = current->go_right();                     [41m [m              [17;100H[33m236 [m                        [33mdelete[m current;                                        [41m [m              [18;100H[33m237 [m                        prev->go_left() = temp;                                [41m [m              [19;100H[33m238 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [20;100H[33m239 [m                    }                                                          [41m [m              [21;100H[33m240 [m                    [33melse[m                                                       [41m [m              [22;100H[33m241 [m                    {                                                          [41m [m              [23;100H[33m242 [m                        [33mdelete[m current;                                        [41m [m              [24;100H[33m243 [m                        current = [31mNULL[m;                                        [41m [m              [25;100H[33m244 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [26;100H[33m245 [m                    }                                                          [41m [m              [27;100H[33m246 [m                }                                                              [41m [m              [28;100H[33m247 [m            }                                                                  [41m [m              [29;100H[33m248 [m        }                                                                      [41m [m              [30;100H[33m249 [m    }                                                                          [41m [m              [31;100H[33m250 [m    [33mreturn[m remove(root->go_left(),rm_year,rm_term) + remove(root->go_right(),rm[41m_[myear,rm_term);[32;100H[33m251 [m}                                                                              [41m [m              [33;100H[33m252 [m                                                                               [41m [m              [34;100H[33m253 [m                                                                               [41m [m              [35;100H[33m254 [m                                                                               [41m [m              [36;100H[33m255 [m[34m//Task:   Displays the whole tree[m                                              [41m [m              [37;100H[33m256 [m[34m//Input:  Root to recursively call upon itself[m                                 [41m [m              [38;100H[33m257 [m[34m//Output: Displays each node[m                                                   [41m [m              [39;100H[33m258 [m[32mvoid[m Pine::display(Node * root) [32mconst[m                                          [41m [m              [40;100H[33m259 [m{                                                                              [41m [m              [41;100H[33m260 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [42;100H[33m261 [m                                                                               [41m [m              [43;100H[33m262 [m    display(root->go_left());                                                  [41m [m              [44;100H[33m263 [m    root->display();                                                           [41m [m              [45;100H[33m264 [m    display(root->go_right());                                                 [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m265 [m}[78C[41m [m[47;100H[33m266 [m[79C[41m [m[48;100H[33m267 [m[79C[41m [m[49;100H[33m268 [m[79C[41m [m[50;100H[33m269 [m[34m//Task:   Removes all nodes[m[52C[41m [m[51;182H[1m[7m2,1   [8C4%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[m[40;104H[46m{[46;104H}[m[51;182H[1m[7m5,[46;104H[?12l[?25h[?25l[m[40;104H{[46;104H}[51;182H[1m[7m6,0-1[47;104H[?12l[?25h[?25l[m[2;100H[33m226 [m                    [32mint[m term_gpa = current->give_term_gpa();                   [41m [m              [3;100H[33m227 [m                    [32mint[m cs_gpa = current->give_cs_gpa();                       [41m [m              [4;100H[33m228 [m                                                                               [41m [m              [5;100H[33m229 [m                    root->insert_date(year, term);                             [41m [m              [6;100H[33m230 [m                    root->insert_data(credits,cs_credits,term_gpa,cs_gpa);     [41m [m              [7;100H[33m231 [m                                                                               [41m [m              [8;100H[33m232 [m                                                                               [41m [m              [9;100H[33m233 [m                    [33mif[m(current->go_right())                                    [41m [m              [10;100H[33m234 [m                    {                                                          [41m [m              [11;100H[33m235 [m                        Node * temp = current->go_right();                     [41m [m              [12;100H[33m236 [m                        [33mdelete[m current;                                        [41m [m              [13;100H[33m237 [m                        prev->go_left() = temp;                                [41m [m              [14;100H[33m238 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [15;100H[33m239 [m                    }                                                          [41m [m              [16;100H[33m240 [m                    [33melse[m                                                       [41m [m              [17;100H[33m241 [m                    {                                                          [41m [m              [18;100H[33m242 [m                        [33mdelete[m current;                                        [41m [m              [19;100H[33m243 [m                        current = [31mNULL[m;                                        [41m [m              [20;100H[33m244 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [21;100H[33m245 [m                    }                                                          [41m [m              [22;100H[33m246 [m                }                                                              [41m [m              [23;100H[33m247 [m            }                                                                  [41m [m              [24;100H[33m248 [m        }                                                                      [41m [m              [25;100H[33m249 [m    }                                                                          [41m [m              [26;100H[33m250 [m    [33mreturn[m remove(root->go_left(),rm_year,rm_term) + remove(root->go_right(),rm[41m_[myear,rm_term);[27;100H[33m251 [m}                                                                              [41m [m              [28;100H[33m252 [m                                                                               [41m [m              [29;100H[33m253 [m                                                                               [41m [m              [30;100H[33m254 [m                                                                               [41m [m              [31;100H[33m255 [m[34m//Task:   Displays the whole tree[m                                              [41m [m              [32;100H[33m256 [m[34m//Input:  Root to recursively call upon itself[m                                 [41m [m              [33;100H[33m257 [m[34m//Output: Displays each node[m                                                   [41m [m              [34;100H[33m258 [m[32mvoid[m Pine::display(Node * root) [32mconst[m                                          [41m [m              [35;100H[33m259 [m{                                                                              [41m [m              [36;100H[33m260 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [37;100H[33m261 [m                                                                               [41m [m              [38;100H[33m262 [m    display(root->go_left());                                                  [41m [m              [39;100H[33m263 [m    root->display();                                                           [41m [m              [40;100H[33m264 [m    display(root->go_right());                                                 [41m [m              [41;100H[33m265 [m}                                                                              [41m [m              [42;100H[33m266 [m                                                                               [41m [m              [43;100H[33m267 [m                                                                               [41m [m              [44;100H[33m268 [m                                                                               [41m [m              [45;100H[33m269 [m[34m//Task:   Removes all nodes[m                                                    [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m270 [m[34m//Input:  Root is passed by reference[m[42C[41m [m[47;100H[33m271 [m[34m//Ouptus: None[m[65C[41m [m[48;100H[33m272 [m[32mvoid[m Pine::remove_all(Node *& root)[44C[41m [m[49;100H[33m273 [m{[78C[41m [m[50;100H[33m274 [m    [33mif[m(!root) [33mreturn[m;[58C[41m [m[51;182H[1m[7m7,[12C5%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,1   [45;104H[?12l[?25h[?25l[51;181H70,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m231 [m                                                                               [41m [m              [3;100H[33m232 [m                                                                               [41m [m              [4;100H[33m233 [m                    [33mif[m(current->go_right())                                    [41m [m              [5;100H[33m234 [m                    {                                                          [41m [m              [6;100H[33m235 [m                        Node * temp = current->go_right();                     [41m [m              [7;100H[33m236 [m                        [33mdelete[m current;                                        [41m [m              [8;100H[33m237 [m                        prev->go_left() = temp;                                [41m [m              [9;100H[33m238 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [10;100H[33m239 [m                    }                                                          [41m [m              [11;100H[33m240 [m                    [33melse[m                                                       [41m [m              [12;100H[33m241 [m                    {                                                          [41m [m              [13;100H[33m242 [m                        [33mdelete[m current;                                        [41m [m              [14;100H[33m243 [m                        current = [31mNULL[m;                                        [41m [m              [15;100H[33m244 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [16;100H[33m245 [m                    }                                                          [41m [m              [17;100H[33m246 [m                }                                                              [41m [m              [18;100H[33m247 [m            }                                                                  [41m [m              [19;100H[33m248 [m        }                                                                      [41m [m              [20;100H[33m249 [m    }                                                                          [41m [m              [21;100H[33m250 [m    [33mreturn[m remove(root->go_left(),rm_year,rm_term) + remove(root->go_right(),rm[41m_[myear,rm_term);[22;100H[33m251 [m}                                                                              [41m [m              [23;100H[33m252 [m                                                                               [41m [m              [24;100H[33m253 [m                                                                               [41m [m              [25;100H[33m254 [m                                                                               [41m [m              [26;100H[33m255 [m[34m//Task:   Displays the whole tree[m                                              [41m [m              [27;100H[33m256 [m[34m//Input:  Root to recursively call upon itself[m                                 [41m [m              [28;100H[33m257 [m[34m//Output: Displays each node[m                                                   [41m [m              [29;100H[33m258 [m[32mvoid[m Pine::display(Node * root) [32mconst[m                                          [41m [m              [30;100H[33m259 [m{                                                                              [41m [m              [31;100H[33m260 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [32;100H[33m261 [m                                                                               [41m [m              [33;100H[33m262 [m    display(root->go_left());                                                  [41m [m              [34;100H[33m263 [m    root->display();                                                           [41m [m              [35;100H[33m264 [m    display(root->go_right());                                                 [41m [m              [36;100H[33m265 [m}                                                                              [41m [m              [37;100H[33m266 [m                                                                               [41m [m              [38;100H[33m267 [m                                                                               [41m [m              [39;100H[33m268 [m                                                                               [41m [m              [40;100H[33m269 [m[34m//Task:   Removes all nodes[m                                                    [41m [m              [41;100H[33m270 [m[34m//Input:  Root is passed by reference[m                                          [41m [m              [42;100H[33m271 [m[34m//Ouptus: None[m                                                                 [41m [m              [43;100H[33m272 [m[32mvoid[m Pine::remove_all(Node *& root)                                            [41m [m              [44;100H[33m273 [m{                                                                              [41m [m              [45;100H[33m274 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m275 [m    remove_all(root->go_left());[47C[41m [m[47;100H[33m276 [m    remove_all(root->go_right());[46C[41m [m[48;100H[33m277 [m[79C[41m [m[49;100H[33m278 [m    [33mdelete[m root;[63C[41m [m[50;100H[33m279 [m    root = [31mNULL[m;[63C[41m [m[51;182H[1m[7m2,[12C6%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m236 [m                        [33mdelete[m current;                                        [41m [m              [3;100H[33m237 [m                        prev->go_left() = temp;                                [41m [m              [4;100H[33m238 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [5;100H[33m239 [m                    }                                                          [41m [m              [6;100H[33m240 [m                    [33melse[m                                                       [41m [m              [7;100H[33m241 [m                    {                                                          [41m [m              [8;100H[33m242 [m                        [33mdelete[m current;                                        [41m [m              [9;100H[33m243 [m                        current = [31mNULL[m;                                        [41m [m              [10;100H[33m244 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [11;100H[33m245 [m                    }                                                          [41m [m              [12;100H[33m246 [m                }                                                              [41m [m              [13;100H[33m247 [m            }                                                                  [41m [m              [14;100H[33m248 [m        }                                                                      [41m [m              [15;100H[33m249 [m    }                                                                          [41m [m              [16;100H[33m250 [m    [33mreturn[m remove(root->go_left(),rm_year,rm_term) + remove(root->go_right(),rm[41m_[myear,rm_term);[17;100H[33m251 [m}                                                                              [41m [m              [18;100H[33m252 [m                                                                               [41m [m              [19;100H[33m253 [m                                                                               [41m [m              [20;100H[33m254 [m                                                                               [41m [m              [21;100H[33m255 [m[34m//Task:   Displays the whole tree[m                                              [41m [m              [22;100H[33m256 [m[34m//Input:  Root to recursively call upon itself[m                                 [41m [m              [23;100H[33m257 [m[34m//Output: Displays each node[m                                                   [41m [m              [24;100H[33m258 [m[32mvoid[m Pine::display(Node * root) [32mconst[m                                          [41m [m              [25;100H[33m259 [m{                                                                              [41m [m              [26;100H[33m260 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [27;100H[33m261 [m                                                                               [41m [m              [28;100H[33m262 [m    display(root->go_left());                                                  [41m [m              [29;100H[33m263 [m    root->display();                                                           [41m [m              [30;100H[33m264 [m    display(root->go_right());                                                 [41m [m              [31;100H[33m265 [m}                                                                              [41m [m              [32;100H[33m266 [m                                                                               [41m [m              [33;100H[33m267 [m                                                                               [41m [m              [34;100H[33m268 [m                                                                               [41m [m              [35;100H[33m269 [m[34m//Task:   Removes all nodes[m                                                    [41m [m              [36;100H[33m270 [m[34m//Input:  Root is passed by reference[m                                          [41m [m              [37;100H[33m271 [m[34m//Ouptus: None[m                                                                 [41m [m              [38;100H[33m272 [m[32mvoid[m Pine::remove_all(Node *& root)                                            [41m [m              [39;100H[33m273 [m{                                                                              [41m [m              [40;100H[33m274 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [41;100H[33m275 [m    remove_all(root->go_left());                                               [41m [m              [42;100H[33m276 [m    remove_all(root->go_right());                                              [41m [m              [43;100H[33m277 [m                                                                               [41m [m              [44;100H[33m278 [m    [33mdelete[m root;                                                               [41m [m              [45;100H[33m279 [m    root = [31mNULL[m;                                                               [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m280 [m}[78C[41m [m[47;100H[33m281 [m[79C[41m [m[48;100H[33m282 [m[79C[41m [m[49;100H[33m283 [m[34m//Client Constructor that initializes its data members[m[25C[41m [m[50;100H[33m284 [mClient::Client():total_gpa([31m0[m),total_cs_gpa([31m0[m),total_cs_credits([31m0[m),total_credits[41m([m[31m0[m) {}[51;182H[1m[7m7,0-1[9C8%[43;104H[?12l[?25h[?25l[51;182H8,1   [44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[m[39;104H[46m{[46;104H}[m[51;181H[1m[7m80,[46;104H[?12l[?25h[?25l[m[39;104H{[46;104H}[51;182H[1m[7m1,0-1[47;104H[?12l[?25h[?25l[m[2;100H[33m241 [m                    {                                                          [41m [m              [3;100H[33m242 [m                        [33mdelete[m current;                                        [41m [m              [4;100H[33m243 [m                        current = [31mNULL[m;                                        [41m [m              [5;100H[33m244 [m                        [33mreturn[m [31m1[m;                                              [41m [m              [6;100H[33m245 [m                    }                                                          [41m [m              [7;100H[33m246 [m                }                                                              [41m [m              [8;100H[33m247 [m            }                                                                  [41m [m              [9;100H[33m248 [m        }                                                                      [41m [m              [10;100H[33m249 [m    }                                                                          [41m [m              [11;100H[33m250 [m    [33mreturn[m remove(root->go_left(),rm_year,rm_term) + remove(root->go_right(),rm[41m_[myear,rm_term);[12;100H[33m251 [m}                                                                              [41m [m              [13;100H[33m252 [m                                                                               [41m [m              [14;100H[33m253 [m                                                                               [41m [m              [15;100H[33m254 [m                                                                               [41m [m              [16;100H[33m255 [m[34m//Task:   Displays the whole tree[m                                              [41m [m              [17;100H[33m256 [m[34m//Input:  Root to recursively call upon itself[m                                 [41m [m              [18;100H[33m257 [m[34m//Output: Displays each node[m                                                   [41m [m              [19;100H[33m258 [m[32mvoid[m Pine::display(Node * root) [32mconst[m                                          [41m [m              [20;100H[33m259 [m{                                                                              [41m [m              [21;100H[33m260 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [22;100H[33m261 [m                                                                               [41m [m              [23;100H[33m262 [m    display(root->go_left());                                                  [41m [m              [24;100H[33m263 [m    root->display();                                                           [41m [m              [25;100H[33m264 [m    display(root->go_right());                                                 [41m [m              [26;100H[33m265 [m}                                                                              [41m [m              [27;100H[33m266 [m                                                                               [41m [m              [28;100H[33m267 [m                                                                               [41m [m              [29;100H[33m268 [m                                                                               [41m [m              [30;100H[33m269 [m[34m//Task:   Removes all nodes[m                                                    [41m [m              [31;100H[33m270 [m[34m//Input:  Root is passed by reference[m                                          [41m [m              [32;100H[33m271 [m[34m//Ouptus: None[m                                                                 [41m [m              [33;100H[33m272 [m[32mvoid[m Pine::remove_all(Node *& root)                                            [41m [m              [34;100H[33m273 [m{                                                                              [41m [m              [35;100H[33m274 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [36;100H[33m275 [m    remove_all(root->go_left());                                               [41m [m              [37;100H[33m276 [m    remove_all(root->go_right());                                              [41m [m              [38;100H[33m277 [m                                                                               [41m [m              [39;100H[33m278 [m    [33mdelete[m root;                                                               [41m [m              [40;100H[33m279 [m    root = [31mNULL[m;                                                               [41m [m              [41;100H[33m280 [m}                                                                              [41m [m              [42;100H[33m281 [m                                                                               [41m [m              [43;100H[33m282 [m                                                                               [41m [m              [44;100H[33m283 [m[34m//Client Constructor that initializes its data members[m                         [41m [m              [45;100H[33m284 [mClient::Client():total_gpa([31m0[m),total_cs_gpa([31m0[m),total_cs_credits([31m0[m),total_credits[41m([m[31m0[m) {}         [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m285 [m[79C[41m [m[47;100H[33m286 [m[79C[41m [m[48;100H[33m287 [m[79C[41m [m[49;100H[33m288 [m[34m//Task:  Provides interface for user. Lets them add a course, remove course/ter[m[34m[41mm[m[50;100H[33m289 [m[34m//       display they courses inserted, and display the current overall and cs[m [41m [m[51;182H[1m[7m2,[12C9%[43;104H[?12l[?25h[?25l[51;182H3,1   [44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,0-1[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m246 [m                }                                                              [41m [m              [3;100H[33m247 [m            }                                                                  [41m [m              [4;100H[33m248 [m        }                                                                      [41m [m              [5;100H[33m249 [m    }                                                                          [41m [m              [6;100H[33m250 [m    [33mreturn[m remove(root->go_left(),rm_year,rm_term) + remove(root->go_right(),rm[41m_[myear,rm_term);[7;100H[33m251 [m}                                                                              [41m [m              [8;100H[33m252 [m                                                                               [41m [m              [9;100H[33m253 [m                                                                               [41m [m              [10;100H[33m254 [m                                                                               [41m [m              [11;100H[33m255 [m[34m//Task:   Displays the whole tree[m                                              [41m [m              [12;100H[33m256 [m[34m//Input:  Root to recursively call upon itself[m                                 [41m [m              [13;100H[33m257 [m[34m//Output: Displays each node[m                                                   [41m [m              [14;100H[33m258 [m[32mvoid[m Pine::display(Node * root) [32mconst[m                                          [41m [m              [15;100H[33m259 [m{                                                                              [41m [m              [16;100H[33m260 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [17;100H[33m261 [m                                                                               [41m [m              [18;100H[33m262 [m    display(root->go_left());                                                  [41m [m              [19;100H[33m263 [m    root->display();                                                           [41m [m              [20;100H[33m264 [m    display(root->go_right());                                                 [41m [m              [21;100H[33m265 [m}                                                                              [41m [m              [22;100H[33m266 [m                                                                               [41m [m              [23;100H[33m267 [m                                                                               [41m [m              [24;100H[33m268 [m                                                                               [41m [m              [25;100H[33m269 [m[34m//Task:   Removes all nodes[m                                                    [41m [m              [26;100H[33m270 [m[34m//Input:  Root is passed by reference[m                                          [41m [m              [27;100H[33m271 [m[34m//Ouptus: None[m                                                                 [41m [m              [28;100H[33m272 [m[32mvoid[m Pine::remove_all(Node *& root)                                            [41m [m              [29;100H[33m273 [m{                                                                              [41m [m              [30;100H[33m274 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [31;100H[33m275 [m    remove_all(root->go_left());                                               [41m [m              [32;100H[33m276 [m    remove_all(root->go_right());                                              [41m [m              [33;100H[33m277 [m                                                                               [41m [m              [34;100H[33m278 [m    [33mdelete[m root;                                                               [41m [m              [35;100H[33m279 [m    root = [31mNULL[m;                                                               [41m [m              [36;100H[33m280 [m}                                                                              [41m [m              [37;100H[33m281 [m                                                                               [41m [m              [38;100H[33m282 [m                                                                               [41m [m              [39;100H[33m283 [m[34m//Client Constructor that initializes its data members[m                         [41m [m              [40;100H[33m284 [mClient::Client():total_gpa([31m0[m),total_cs_gpa([31m0[m),total_cs_credits([31m0[m),total_credits[41m([m[31m0[m) {}         [41;100H[33m285 [m                                                                               [41m [m              [42;100H[33m286 [m                                                                               [41m [m              [43;100H[33m287 [m                                                                               [41m [m              [44;100H[33m288 [m[34m//Task:  Provides interface for user. Lets them add a course, remove course/ter[m[34m[41mm[m              [45;100H[33m289 [m[34m//       display they courses inserted, and display the current overall and cs[m [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m290 [m[34m//       gpa.[m[66C[41m [m[47;100H[33m291 [m[34m//Input:  None[m[65C[41m [m[48;100H[33m292 [m[34m//Output: Returns the users choice of what to do [m[30C[41m [m[49;100H[33m293 [m[32mint[m Client::prompt()[59C[41m [m[50;100H[33m294 [m{[78C[41m [m[51;182H[1m[7m7,[11C60%[43;104H[?12l[?25h[?25l[51;182H8,1   [44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H90,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m251 [m}                                                                              [41m [m              [3;100H[33m252 [m                                                                               [41m [m              [4;100H[33m253 [m                                                                               [41m [m              [5;100H[33m254 [m                                                                               [41m [m              [6;100H[33m255 [m[34m//Task:   Displays the whole tree[m                                              [41m [m              [7;100H[33m256 [m[34m//Input:  Root to recursively call upon itself[m                                 [41m [m              [8;100H[33m257 [m[34m//Output: Displays each node[m                                                   [41m [m              [9;100H[33m258 [m[32mvoid[m Pine::display(Node * root) [32mconst[m                                          [41m [m              [10;100H[33m259 [m{                                                                              [41m [m              [11;100H[33m260 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [12;100H[33m261 [m                                                                               [41m [m              [13;100H[33m262 [m    display(root->go_left());                                                  [41m [m              [14;100H[33m263 [m    root->display();                                                           [41m [m              [15;100H[33m264 [m    display(root->go_right());                                                 [41m [m              [16;100H[33m265 [m}                                                                              [41m [m              [17;100H[33m266 [m                                                                               [41m [m              [18;100H[33m267 [m                                                                               [41m [m              [19;100H[33m268 [m                                                                               [41m [m              [20;100H[33m269 [m[34m//Task:   Removes all nodes[m                                                    [41m [m              [21;100H[33m270 [m[34m//Input:  Root is passed by reference[m                                          [41m [m              [22;100H[33m271 [m[34m//Ouptus: None[m                                                                 [41m [m              [23;100H[33m272 [m[32mvoid[m Pine::remove_all(Node *& root)                                            [41m [m              [24;100H[33m273 [m{                                                                              [41m [m              [25;100H[33m274 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [26;100H[33m275 [m    remove_all(root->go_left());                                               [41m [m              [27;100H[33m276 [m    remove_all(root->go_right());                                              [41m [m              [28;100H[33m277 [m                                                                               [41m [m              [29;100H[33m278 [m    [33mdelete[m root;                                                               [41m [m              [30;100H[33m279 [m    root = [31mNULL[m;                                                               [41m [m              [31;100H[33m280 [m}                                                                              [41m [m              [32;100H[33m281 [m                                                                               [41m [m              [33;100H[33m282 [m                                                                               [41m [m              [34;100H[33m283 [m[34m//Client Constructor that initializes its data members[m                         [41m [m              [35;100H[33m284 [mClient::Client():total_gpa([31m0[m),total_cs_gpa([31m0[m),total_cs_credits([31m0[m),total_credits[41m([m[31m0[m) {}         [36;100H[33m285 [m                                                                               [41m [m              [37;100H[33m286 [m                                                                               [41m [m              [38;100H[33m287 [m                                                                               [41m [m              [39;100H[33m288 [m[34m//Task:  Provides interface for user. Lets them add a course, remove course/ter[m[34m[41mm[m              [40;100H[33m289 [m[34m//       display they courses inserted, and display the current overall and cs[m [41m [m              [41;100H[33m290 [m[34m//       gpa.[m                                                                  [41m [m              [42;100H[33m291 [m[34m//Input:  None[m                                                                 [41m [m              [43;100H[33m292 [m[34m//Output: Returns the users choice of what to do [m                              [41m [m              [44;100H[33m293 [m[32mint[m Client::prompt()                                                           [41m [m              [45;100H[33m294 [m{                                                                              [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m295 [m    [32mint[m choice = [31m0[m;[60C[41m [m[47;100H[33m296 [m[79C[41m [m[48;100H[33m297 [m    cout << [31m"[m[35m\n\n[m[31m---Menu---"[m << endl;[42C[41m [m[49;100H[33m298 [m    cout << [31m"1) Add A Course"[m << endl;[41C[41m [m[50;100H[33m299 [m    cout << [31m"2) Remove A Term/Course"[m << endl;[33C[41m [m[51;182H[1m[7m2,[12C1%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,0-1[47;104H[?12l[?25h[?25l[m[2;100H[33m256 [m[34m//Input:  Root to recursively call upon itself[m                                 [41m [m              [3;100H[33m257 [m[34m//Output: Displays each node[m                                                   [41m [m              [4;100H[33m258 [m[32mvoid[m Pine::display(Node * root) [32mconst[m                                          [41m [m              [5;100H[33m259 [m{                                                                              [41m [m              [6;100H[33m260 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [7;100H[33m261 [m                                                                               [41m [m              [8;100H[33m262 [m    display(root->go_left());                                                  [41m [m              [9;100H[33m263 [m    root->display();                                                           [41m [m              [10;100H[33m264 [m    display(root->go_right());                                                 [41m [m              [11;100H[33m265 [m}                                                                              [41m [m              [12;100H[33m266 [m                                                                               [41m [m              [13;100H[33m267 [m                                                                               [41m [m              [14;100H[33m268 [m                                                                               [41m [m              [15;100H[33m269 [m[34m//Task:   Removes all nodes[m                                                    [41m [m              [16;100H[33m270 [m[34m//Input:  Root is passed by reference[m                                          [41m [m              [17;100H[33m271 [m[34m//Ouptus: None[m                                                                 [41m [m              [18;100H[33m272 [m[32mvoid[m Pine::remove_all(Node *& root)                                            [41m [m              [19;100H[33m273 [m{                                                                              [41m [m              [20;100H[33m274 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [21;100H[33m275 [m    remove_all(root->go_left());                                               [41m [m              [22;100H[33m276 [m    remove_all(root->go_right());                                              [41m [m              [23;100H[33m277 [m                                                                               [41m [m              [24;100H[33m278 [m    [33mdelete[m root;                                                               [41m [m              [25;100H[33m279 [m    root = [31mNULL[m;                                                               [41m [m              [26;100H[33m280 [m}                                                                              [41m [m              [27;100H[33m281 [m                                                                               [41m [m              [28;100H[33m282 [m                                                                               [41m [m              [29;100H[33m283 [m[34m//Client Constructor that initializes its data members[m                         [41m [m              [30;100H[33m284 [mClient::Client():total_gpa([31m0[m),total_cs_gpa([31m0[m),total_cs_credits([31m0[m),total_credits[41m([m[31m0[m) {}         [31;100H[33m285 [m                                                                               [41m [m              [32;100H[33m286 [m                                                                               [41m [m              [33;100H[33m287 [m                                                                               [41m [m              [34;100H[33m288 [m[34m//Task:  Provides interface for user. Lets them add a course, remove course/ter[m[34m[41mm[m              [35;100H[33m289 [m[34m//       display they courses inserted, and display the current overall and cs[m [41m [m              [36;100H[33m290 [m[34m//       gpa.[m                                                                  [41m [m              [37;100H[33m291 [m[34m//Input:  None[m                                                                 [41m [m              [38;100H[33m292 [m[34m//Output: Returns the users choice of what to do [m                              [41m [m              [39;100H[33m293 [m[32mint[m Client::prompt()                                                           [41m [m              [40;100H[33m294 [m{                                                                              [41m [m              [41;100H[33m295 [m    [32mint[m choice = [31m0[m;                                                            [41m [m              [42;100H[33m296 [m                                                                               [41m [m              [43;100H[33m297 [m    cout << [31m"[m[35m\n\n[m[31m---Menu---"[m << endl;                                          [41m [m              [44;100H[33m298 [m    cout << [31m"1) Add A Course"[m << endl;                                         [41m [m              [45;100H[33m299 [m    cout << [31m"2) Remove A Term/Course"[m << endl;                                 [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m300 [m    cout << [31m"3) Evaluate CS Program Progression"[m << endl;[22C[41m [m[47;100H[33m301 [m    cout << [31m"4) Display Current Program Requirements"[m << endl;[17C[41m [m[48;100H[33m302 [m    cout << [31m"5) Quit"[m << endl;[49C[41m [m[49;100H[33m303 [m[79C[41m [m[50;100H[33m304 [m    cout << [31m"[m[35m\n[m[31mPlease Choose A Number: "[m;[38C[41m [m[51;182H[1m[7m7,1   [8C3%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;180H300,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m261 [m                                                                               [41m [m              [3;100H[33m262 [m    display(root->go_left());                                                  [41m [m              [4;100H[33m263 [m    root->display();                                                           [41m [m              [5;100H[33m264 [m    display(root->go_right());                                                 [41m [m              [6;100H[33m265 [m}                                                                              [41m [m              [7;100H[33m266 [m                                                                               [41m [m              [8;100H[33m267 [m                                                                               [41m [m              [9;100H[33m268 [m                                                                               [41m [m              [10;100H[33m269 [m[34m//Task:   Removes all nodes[m                                                    [41m [m              [11;100H[33m270 [m[34m//Input:  Root is passed by reference[m                                          [41m [m              [12;100H[33m271 [m[34m//Ouptus: None[m                                                                 [41m [m              [13;100H[33m272 [m[32mvoid[m Pine::remove_all(Node *& root)                                            [41m [m              [14;100H[33m273 [m{                                                                              [41m [m              [15;100H[33m274 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [16;100H[33m275 [m    remove_all(root->go_left());                                               [41m [m              [17;100H[33m276 [m    remove_all(root->go_right());                                              [41m [m              [18;100H[33m277 [m                                                                               [41m [m              [19;100H[33m278 [m    [33mdelete[m root;                                                               [41m [m              [20;100H[33m279 [m    root = [31mNULL[m;                                                               [41m [m              [21;100H[33m280 [m}                                                                              [41m [m              [22;100H[33m281 [m                                                                               [41m [m              [23;100H[33m282 [m                                                                               [41m [m              [24;100H[33m283 [m[34m//Client Constructor that initializes its data members[m                         [41m [m              [25;100H[33m284 [mClient::Client():total_gpa([31m0[m),total_cs_gpa([31m0[m),total_cs_credits([31m0[m),total_credits[41m([m[31m0[m) {}         [26;100H[33m285 [m                                                                               [41m [m              [27;100H[33m286 [m                                                                               [41m [m              [28;100H[33m287 [m                                                                               [41m [m              [29;100H[33m288 [m[34m//Task:  Provides interface for user. Lets them add a course, remove course/ter[m[34m[41mm[m              [30;100H[33m289 [m[34m//       display they courses inserted, and display the current overall and cs[m [41m [m              [31;100H[33m290 [m[34m//       gpa.[m                                                                  [41m [m              [32;100H[33m291 [m[34m//Input:  None[m                                                                 [41m [m              [33;100H[33m292 [m[34m//Output: Returns the users choice of what to do [m                              [41m [m              [34;100H[33m293 [m[32mint[m Client::prompt()                                                           [41m [m              [35;100H[33m294 [m{                                                                              [41m [m              [36;100H[33m295 [m    [32mint[m choice = [31m0[m;                                                            [41m [m              [37;100H[33m296 [m                                                                               [41m [m              [38;100H[33m297 [m    cout << [31m"[m[35m\n\n[m[31m---Menu---"[m << endl;                                          [41m [m              [39;100H[33m298 [m    cout << [31m"1) Add A Course"[m << endl;                                         [41m [m              [40;100H[33m299 [m    cout << [31m"2) Remove A Term/Course"[m << endl;                                 [41m [m              [41;100H[33m300 [m    cout << [31m"3) Evaluate CS Program Progression"[m << endl;                      [41m [m              [42;100H[33m301 [m    cout << [31m"4) Display Current Program Requirements"[m << endl;                 [41m [m              [43;100H[33m302 [m    cout << [31m"5) Quit"[m << endl;                                                 [41m [m              [44;100H[33m303 [m                                                                               [41m [m              [45;100H[33m304 [m    cout << [31m"[m[35m\n[m[31mPlease Choose A Number: "[m;                                      [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m305 [m    cin >> choice;[61C[41m [m[47;100H[33m306 [m    cin.ignore([31m100[m, [35m'\n'[m);[53C[41m [m[48;100H[33m307 [m[79C[41m [m[49;100H[33m308 [m    [33mif[m(choice > [31m5[m || choice <= [31m0[m)[46C[41m [m[50;100H[33m309 [m[8Cprompt();[62C[41m [m[51;182H[1m[7m2,[12C4%[43;104H[?12l[?25h[?25l[51;182H3,0-1[44;104H[?12l[?25h[?25l[51;182H4,1   [45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m266 [m                                                                               [41m [m              [3;100H[33m267 [m                                                                               [41m [m              [4;100H[33m268 [m                                                                               [41m [m              [5;100H[33m269 [m[34m//Task:   Removes all nodes[m                                                    [41m [m              [6;100H[33m270 [m[34m//Input:  Root is passed by reference[m                                          [41m [m              [7;100H[33m271 [m[34m//Ouptus: None[m                                                                 [41m [m              [8;100H[33m272 [m[32mvoid[m Pine::remove_all(Node *& root)                                            [41m [m              [9;100H[33m273 [m{                                                                              [41m [m              [10;100H[33m274 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [11;100H[33m275 [m    remove_all(root->go_left());                                               [41m [m              [12;100H[33m276 [m    remove_all(root->go_right());                                              [41m [m              [13;100H[33m277 [m                                                                               [41m [m              [14;100H[33m278 [m    [33mdelete[m root;                                                               [41m [m              [15;100H[33m279 [m    root = [31mNULL[m;                                                               [41m [m              [16;100H[33m280 [m}                                                                              [41m [m              [17;100H[33m281 [m                                                                               [41m [m              [18;100H[33m282 [m                                                                               [41m [m              [19;100H[33m283 [m[34m//Client Constructor that initializes its data members[m                         [41m [m              [20;100H[33m284 [mClient::Client():total_gpa([31m0[m),total_cs_gpa([31m0[m),total_cs_credits([31m0[m),total_credits[41m([m[31m0[m) {}         [21;100H[33m285 [m                                                                               [41m [m              [22;100H[33m286 [m                                                                               [41m [m              [23;100H[33m287 [m                                                                               [41m [m              [24;100H[33m288 [m[34m//Task:  Provides interface for user. Lets them add a course, remove course/ter[m[34m[41mm[m              [25;100H[33m289 [m[34m//       display they courses inserted, and display the current overall and cs[m [41m [m              [26;100H[33m290 [m[34m//       gpa.[m                                                                  [41m [m              [27;100H[33m291 [m[34m//Input:  None[m                                                                 [41m [m              [28;100H[33m292 [m[34m//Output: Returns the users choice of what to do [m                              [41m [m              [29;100H[33m293 [m[32mint[m Client::prompt()                                                           [41m [m              [30;100H[33m294 [m{                                                                              [41m [m              [31;100H[33m295 [m    [32mint[m choice = [31m0[m;                                                            [41m [m              [32;100H[33m296 [m                                                                               [41m [m              [33;100H[33m297 [m    cout << [31m"[m[35m\n\n[m[31m---Menu---"[m << endl;                                          [41m [m              [34;100H[33m298 [m    cout << [31m"1) Add A Course"[m << endl;                                         [41m [m              [35;100H[33m299 [m    cout << [31m"2) Remove A Term/Course"[m << endl;                                 [41m [m              [36;100H[33m300 [m    cout << [31m"3) Evaluate CS Program Progression"[m << endl;                      [41m [m              [37;100H[33m301 [m    cout << [31m"4) Display Current Program Requirements"[m << endl;                 [41m [m              [38;100H[33m302 [m    cout << [31m"5) Quit"[m << endl;                                                 [41m [m              [39;100H[33m303 [m                                                                               [41m [m              [40;100H[33m304 [m    cout << [31m"[m[35m\n[m[31mPlease Choose A Number: "[m;                                      [41m [m              [41;100H[33m305 [m    cin >> choice;                                                             [41m [m              [42;100H[33m306 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [43;100H[33m307 [m                                                                               [41m [m              [44;100H[33m308 [m    [33mif[m(choice > [31m5[m || choice <= [31m0[m)                                              [41m [m              [45;100H[33m309 [m        prompt();                                                              [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m310 [m[79C[41m [m[47;100H[33m311 [m    [33mreturn[m choice;[61C[41m [m[48;100H[33m312 [m}[78C[41m [m[49;100H[33m313 [m[79C[41m [m[50;100H[33m314 [m[79C[41m [m[51;182H[1m[7m7,0-1[9C5%[43;104H[?12l[?25h[?25l[51;182H8,1   [44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H10,0-1[46;104H[?12l[?25h[?25l[51;182H1,1   [47;104H[?12l[?25h[?25l[m[2;100H[33m271 [m[34m//Ouptus: None[m                                                                 [41m [m              [3;100H[33m272 [m[32mvoid[m Pine::remove_all(Node *& root)                                            [41m [m              [4;100H[33m273 [m{                                                                              [41m [m              [5;100H[33m274 [m    [33mif[m(!root) [33mreturn[m;                                                          [41m [m              [6;100H[33m275 [m    remove_all(root->go_left());                                               [41m [m              [7;100H[33m276 [m    remove_all(root->go_right());                                              [41m [m              [8;100H[33m277 [m                                                                               [41m [m              [9;100H[33m278 [m    [33mdelete[m root;                                                               [41m [m              [10;100H[33m279 [m    root = [31mNULL[m;                                                               [41m [m              [11;100H[33m280 [m}                                                                              [41m [m              [12;100H[33m281 [m                                                                               [41m [m              [13;100H[33m282 [m                                                                               [41m [m              [14;100H[33m283 [m[34m//Client Constructor that initializes its data members[m                         [41m [m              [15;100H[33m284 [mClient::Client():total_gpa([31m0[m),total_cs_gpa([31m0[m),total_cs_credits([31m0[m),total_credits[41m([m[31m0[m) {}         [16;100H[33m285 [m                                                                               [41m [m              [17;100H[33m286 [m                                                                               [41m [m              [18;100H[33m287 [m                                                                               [41m [m              [19;100H[33m288 [m[34m//Task:  Provides interface for user. Lets them add a course, remove course/ter[m[34m[41mm[m              [20;100H[33m289 [m[34m//       display they courses inserted, and display the current overall and cs[m [41m [m              [21;100H[33m290 [m[34m//       gpa.[m                                                                  [41m [m              [22;100H[33m291 [m[34m//Input:  None[m                                                                 [41m [m              [23;100H[33m292 [m[34m//Output: Returns the users choice of what to do [m                              [41m [m              [24;100H[33m293 [m[32mint[m Client::prompt()                                                           [41m [m              [25;100H[33m294 [m{                                                                              [41m [m              [26;100H[33m295 [m    [32mint[m choice = [31m0[m;                                                            [41m [m              [27;100H[33m296 [m                                                                               [41m [m              [28;100H[33m297 [m    cout << [31m"[m[35m\n\n[m[31m---Menu---"[m << endl;                                          [41m [m              [29;100H[33m298 [m    cout << [31m"1) Add A Course"[m << endl;                                         [41m [m              [30;100H[33m299 [m    cout << [31m"2) Remove A Term/Course"[m << endl;                                 [41m [m              [31;100H[33m300 [m    cout << [31m"3) Evaluate CS Program Progression"[m << endl;                      [41m [m              [32;100H[33m301 [m    cout << [31m"4) Display Current Program Requirements"[m << endl;                 [41m [m              [33;100H[33m302 [m    cout << [31m"5) Quit"[m << endl;                                                 [41m [m              [34;100H[33m303 [m                                                                               [41m [m              [35;100H[33m304 [m    cout << [31m"[m[35m\n[m[31mPlease Choose A Number: "[m;                                      [41m [m              [36;100H[33m305 [m    cin >> choice;                                                             [41m [m              [37;100H[33m306 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [38;100H[33m307 [m                                                                               [41m [m              [39;100H[33m308 [m    [33mif[m(choice > [31m5[m || choice <= [31m0[m)                                              [41m [m              [40;100H[33m309 [m        prompt();                                                              [41m [m              [41;100H[33m310 [m                                                                               [41m [m              [42;100H[33m311 [m    [33mreturn[m choice;                                                             [41m [m              [43;100H[33m312 [m}                                                                              [41m [m              [44;100H[33m313 [m                                                                               [41m [m              [45;100H[33m314 [m                                                                               [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [25;104H[46m{[43;104H}[m[46;100H[33m315 [m[79C[41m [m[47;100H[33m316 [m[34m//Task: This acts as the manager of the whole program. Provides an interface fo[m[34m[41mr[m[48;100H[33m317 [m[34m//      the user to use.[m[55C[41m [m[49;100H[33m318 [m[34m//Input: None[m[66C[41m [m[50;100H[33m319 [m[34m//Output: Returns 1 upon completion of program[m[33C[41m [m[51;182H[1m[7m2,[12C6%[43;104H[?12l[?25h[?25l[m[25;104H{[43;104H}[51;182H[1m[7m3,0-1[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,1   [47;104H[?12l[?25h[?25l[m[2;100H[33m276 [m    remove_all(root->go_right());                                              [41m [m              [3;100H[33m277 [m                                                                               [41m [m              [4;100H[33m278 [m    [33mdelete[m root;                                                               [41m [m              [5;100H[33m279 [m    root = [31mNULL[m;                                                               [41m [m              [6;100H[33m280 [m}                                                                              [41m [m              [7;100H[33m281 [m                                                                               [41m [m              [8;100H[33m282 [m                                                                               [41m [m              [9;100H[33m283 [m[34m//Client Constructor that initializes its data members[m                         [41m [m              [10;100H[33m284 [mClient::Client():total_gpa([31m0[m),total_cs_gpa([31m0[m),total_cs_credits([31m0[m),total_credits[41m([m[31m0[m) {}         [11;100H[33m285 [m                                                                               [41m [m              [12;100H[33m286 [m                                                                               [41m [m              [13;100H[33m287 [m                                                                               [41m [m              [14;100H[33m288 [m[34m//Task:  Provides interface for user. Lets them add a course, remove course/ter[m[34m[41mm[m              [15;100H[33m289 [m[34m//       display they courses inserted, and display the current overall and cs[m [41m [m              [16;100H[33m290 [m[34m//       gpa.[m                                                                  [41m [m              [17;100H[33m291 [m[34m//Input:  None[m                                                                 [41m [m              [18;100H[33m292 [m[34m//Output: Returns the users choice of what to do [m                              [41m [m              [19;100H[33m293 [m[32mint[m Client::prompt()                                                           [41m [m              [20;100H[33m294 [m{                                                                              [41m [m              [21;100H[33m295 [m    [32mint[m choice = [31m0[m;                                                            [41m [m              [22;100H[33m296 [m                                                                               [41m [m              [23;100H[33m297 [m    cout << [31m"[m[35m\n\n[m[31m---Menu---"[m << endl;                                          [41m [m              [24;100H[33m298 [m    cout << [31m"1) Add A Course"[m << endl;                                         [41m [m              [25;100H[33m299 [m    cout << [31m"2) Remove A Term/Course"[m << endl;                                 [41m [m              [26;100H[33m300 [m    cout << [31m"3) Evaluate CS Program Progression"[m << endl;                      [41m [m              [27;100H[33m301 [m    cout << [31m"4) Display Current Program Requirements"[m << endl;                 [41m [m              [28;100H[33m302 [m    cout << [31m"5) Quit"[m << endl;                                                 [41m [m              [29;100H[33m303 [m                                                                               [41m [m              [30;100H[33m304 [m    cout << [31m"[m[35m\n[m[31mPlease Choose A Number: "[m;                                      [41m [m              [31;100H[33m305 [m    cin >> choice;                                                             [41m [m              [32;100H[33m306 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [33;100H[33m307 [m                                                                               [41m [m              [34;100H[33m308 [m    [33mif[m(choice > [31m5[m || choice <= [31m0[m)                                              [41m [m              [35;100H[33m309 [m        prompt();                                                              [41m [m              [36;100H[33m310 [m                                                                               [41m [m              [37;100H[33m311 [m    [33mreturn[m choice;                                                             [41m [m              [38;100H[33m312 [m}                                                                              [41m [m              [39;100H[33m313 [m                                                                               [41m [m              [40;100H[33m314 [m                                                                               [41m [m              [41;100H[33m315 [m                                                                               [41m [m              [42;100H[33m316 [m[34m//Task: This acts as the manager of the whole program. Provides an interface fo[m[34m[41mr[m              [43;100H[33m317 [m[34m//      the user to use.[m                                                       [41m [m              [44;100H[33m318 [m[34m//Input: None[m                                                                  [41m [m              [45;100H[33m319 [m[34m//Output: Returns 1 upon completion of program[m                                 [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m320 [m[32mint[m Client::operation()[56C[41m [m[47;100H[33m321 [m{[78C[41m [m[48;100H[33m322 [m    [32mint[m option = [31m0[m; [34m//Holds choice of what the user wants to do [m[15C[41m [m[49;100H[33m323 [m    [32mint[m term_year = [31m0[m; [34m//Holds temporary term year to be passed to insert[m      [41m [m[50;100H[33m324 [m    [32mint[m term = [31m0[m; [34m//Fall,Winter,Spring,Summer[m[34C[41m [m[51;182H[1m[7m7,[12C8%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H20,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m281 [m                                                                               [41m [m              [3;100H[33m282 [m                                                                               [41m [m              [4;100H[33m283 [m[34m//Client Constructor that initializes its data members[m                         [41m [m              [5;100H[33m284 [mClient::Client():total_gpa([31m0[m),total_cs_gpa([31m0[m),total_cs_credits([31m0[m),total_credits[41m([m[31m0[m) {}         [6;100H[33m285 [m                                                                               [41m [m              [7;100H[33m286 [m                                                                               [41m [m              [8;100H[33m287 [m                                                                               [41m [m              [9;100H[33m288 [m[34m//Task:  Provides interface for user. Lets them add a course, remove course/ter[m[34m[41mm[m              [10;100H[33m289 [m[34m//       display they courses inserted, and display the current overall and cs[m [41m [m              [11;100H[33m290 [m[34m//       gpa.[m                                                                  [41m [m              [12;100H[33m291 [m[34m//Input:  None[m                                                                 [41m [m              [13;100H[33m292 [m[34m//Output: Returns the users choice of what to do [m                              [41m [m              [14;100H[33m293 [m[32mint[m Client::prompt()                                                           [41m [m              [15;100H[33m294 [m{                                                                              [41m [m              [16;100H[33m295 [m    [32mint[m choice = [31m0[m;                                                            [41m [m              [17;100H[33m296 [m                                                                               [41m [m              [18;100H[33m297 [m    cout << [31m"[m[35m\n\n[m[31m---Menu---"[m << endl;                                          [41m [m              [19;100H[33m298 [m    cout << [31m"1) Add A Course"[m << endl;                                         [41m [m              [20;100H[33m299 [m    cout << [31m"2) Remove A Term/Course"[m << endl;                                 [41m [m              [21;100H[33m300 [m    cout << [31m"3) Evaluate CS Program Progression"[m << endl;                      [41m [m              [22;100H[33m301 [m    cout << [31m"4) Display Current Program Requirements"[m << endl;                 [41m [m              [23;100H[33m302 [m    cout << [31m"5) Quit"[m << endl;                                                 [41m [m              [24;100H[33m303 [m                                                                               [41m [m              [25;100H[33m304 [m    cout << [31m"[m[35m\n[m[31mPlease Choose A Number: "[m;                                      [41m [m              [26;100H[33m305 [m    cin >> choice;                                                             [41m [m              [27;100H[33m306 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [28;100H[33m307 [m                                                                               [41m [m              [29;100H[33m308 [m    [33mif[m(choice > [31m5[m || choice <= [31m0[m)                                              [41m [m              [30;100H[33m309 [m        prompt();                                                              [41m [m              [31;100H[33m310 [m                                                                               [41m [m              [32;100H[33m311 [m    [33mreturn[m choice;                                                             [41m [m              [33;100H[33m312 [m}                                                                              [41m [m              [34;100H[33m313 [m                                                                               [41m [m              [35;100H[33m314 [m                                                                               [41m [m              [36;100H[33m315 [m                                                                               [41m [m              [37;100H[33m316 [m[34m//Task: This acts as the manager of the whole program. Provides an interface fo[m[34m[41mr[m              [38;100H[33m317 [m[34m//      the user to use.[m                                                       [41m [m              [39;100H[33m318 [m[34m//Input: None[m                                                                  [41m [m              [40;100H[33m319 [m[34m//Output: Returns 1 upon completion of program[m                                 [41m [m              [41;100H[33m320 [m[32mint[m Client::operation()                                                        [41m [m              [42;100H[33m321 [m{                                                                              [41m [m              [43;100H[33m322 [m    [32mint[m option = [31m0[m; [34m//Holds choice of what the user wants to do [m               [41m [m              [44;100H[33m323 [m    [32mint[m term_year = [31m0[m; [34m//Holds temporary term year to be passed to insert[m      [41m [m              [45;100H[33m324 [m    [32mint[m term = [31m0[m; [34m//Fall,Winter,Spring,Summer[m                                  [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m325 [m    [32mint[m rm_year = [31m0[m; [34m//Holds year of term to be removed[m[24C[41m [m[47;100H[33m326 [m    [32mint[m rm_term = [31m0[m; [34m//Holds term to be removed[m[32C[41m [m[48;100H[33m327 [m[79C[41m [m[49;100H[33m328 [m    cout << [31m"[m[35m\n\n[m[31mWelcome to my program! The purpose of this program is to help"[m[41m [m[50;100H[33m329 [m[12C[31m"evaluate your progress in the CS Program."[m << endl;[15C[41m [m[51;182H[1m[7m2,[12C9%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m286 [m                                                                               [41m [m              [3;100H[33m287 [m                                                                               [41m [m              [4;100H[33m288 [m[34m//Task:  Provides interface for user. Lets them add a course, remove course/ter[m[34m[41mm[m              [5;100H[33m289 [m[34m//       display they courses inserted, and display the current overall and cs[m [41m [m              [6;100H[33m290 [m[34m//       gpa.[m                                                                  [41m [m              [7;100H[33m291 [m[34m//Input:  None[m                                                                 [41m [m              [8;100H[33m292 [m[34m//Output: Returns the users choice of what to do [m                              [41m [m              [9;100H[33m293 [m[32mint[m Client::prompt()                                                           [41m [m              [10;100H[33m294 [m{                                                                              [41m [m              [11;100H[33m295 [m    [32mint[m choice = [31m0[m;                                                            [41m [m              [12;100H[33m296 [m                                                                               [41m [m              [13;100H[33m297 [m    cout << [31m"[m[35m\n\n[m[31m---Menu---"[m << endl;                                          [41m [m              [14;100H[33m298 [m    cout << [31m"1) Add A Course"[m << endl;                                         [41m [m              [15;100H[33m299 [m    cout << [31m"2) Remove A Term/Course"[m << endl;                                 [41m [m              [16;100H[33m300 [m    cout << [31m"3) Evaluate CS Program Progression"[m << endl;                      [41m [m              [17;100H[33m301 [m    cout << [31m"4) Display Current Program Requirements"[m << endl;                 [41m [m              [18;100H[33m302 [m    cout << [31m"5) Quit"[m << endl;                                                 [41m [m              [19;100H[33m303 [m                                                                               [41m [m              [20;100H[33m304 [m    cout << [31m"[m[35m\n[m[31mPlease Choose A Number: "[m;                                      [41m [m              [21;100H[33m305 [m    cin >> choice;                                                             [41m [m              [22;100H[33m306 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [23;100H[33m307 [m                                                                               [41m [m              [24;100H[33m308 [m    [33mif[m(choice > [31m5[m || choice <= [31m0[m)                                              [41m [m              [25;100H[33m309 [m        prompt();                                                              [41m [m              [26;100H[33m310 [m                                                                               [41m [m              [27;100H[33m311 [m    [33mreturn[m choice;                                                             [41m [m              [28;100H[33m312 [m}                                                                              [41m [m              [29;100H[33m313 [m                                                                               [41m [m              [30;100H[33m314 [m                                                                               [41m [m              [31;100H[33m315 [m                                                                               [41m [m              [32;100H[33m316 [m[34m//Task: This acts as the manager of the whole program. Provides an interface fo[m[34m[41mr[m              [33;100H[33m317 [m[34m//      the user to use.[m                                                       [41m [m              [34;100H[33m318 [m[34m//Input: None[m                                                                  [41m [m              [35;100H[33m319 [m[34m//Output: Returns 1 upon completion of program[m                                 [41m [m              [36;100H[33m320 [m[32mint[m Client::operation()                                                        [41m [m              [37;100H[33m321 [m{                                                                              [41m [m              [38;100H[33m322 [m    [32mint[m option = [31m0[m; [34m//Holds choice of what the user wants to do [m               [41m [m              [39;100H[33m323 [m    [32mint[m term_year = [31m0[m; [34m//Holds temporary term year to be passed to insert[m      [41m [m              [40;100H[33m324 [m    [32mint[m term = [31m0[m; [34m//Fall,Winter,Spring,Summer[m                                  [41m [m              [41;100H[33m325 [m    [32mint[m rm_year = [31m0[m; [34m//Holds year of term to be removed[m                        [41m [m              [42;100H[33m326 [m    [32mint[m rm_term = [31m0[m; [34m//Holds term to be removed[m                                [41m [m              [43;100H[33m327 [m                                                                               [41m [m              [44;100H[33m328 [m    cout << [31m"[m[35m\n\n[m[31mWelcome to my program! The purpose of this program is to help"[m[41m [m              [45;100H[33m329 [m            [31m"evaluate your progress in the CS Program."[m << endl;               [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m330 [m[79C[41m [m[47;100H[33m331 [m    [33mdo[m[73C[41m [m[48;100H[33m332 [m    {[74C[41m [m[49;100H[33m333 [8Cif[m([31m5[m < right_height || [31m5[m < left_height)[34m//if balance is off then rotate[m [41m [m[50;100H[33m334 [m[12Crotation();[56C[41m [m[51;182H[1m[7m7,0-1[8C70%[43;104H[?12l[?25h[?25l[51;182H8,1   [44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H30,0-1[46;104H[?12l[?25h[?25l[51;182H1,1   [47;104H[?12l[?25h[?25l[m[2;100H[33m291 [m[34m//Input:  None[m                                                                 [41m [m              [3;100H[33m292 [m[34m//Output: Returns the users choice of what to do [m                              [41m [m              [4;100H[33m293 [m[32mint[m Client::prompt()                                                           [41m [m              [5;100H[33m294 [m{                                                                              [41m [m              [6;100H[33m295 [m    [32mint[m choice = [31m0[m;                                                            [41m [m              [7;100H[33m296 [m                                                                               [41m [m              [8;100H[33m297 [m    cout << [31m"[m[35m\n\n[m[31m---Menu---"[m << endl;                                          [41m [m              [9;100H[33m298 [m    cout << [31m"1) Add A Course"[m << endl;                                         [41m [m              [10;100H[33m299 [m    cout << [31m"2) Remove A Term/Course"[m << endl;                                 [41m [m              [11;100H[33m300 [m    cout << [31m"3) Evaluate CS Program Progression"[m << endl;                      [41m [m              [12;100H[33m301 [m    cout << [31m"4) Display Current Program Requirements"[m << endl;                 [41m [m              [13;100H[33m302 [m    cout << [31m"5) Quit"[m << endl;                                                 [41m [m              [14;100H[33m303 [m                                                                               [41m [m              [15;100H[33m304 [m    cout << [31m"[m[35m\n[m[31mPlease Choose A Number: "[m;                                      [41m [m              [16;100H[33m305 [m    cin >> choice;                                                             [41m [m              [17;100H[33m306 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [18;100H[33m307 [m                                                                               [41m [m              [19;100H[33m308 [m    [33mif[m(choice > [31m5[m || choice <= [31m0[m)                                              [41m [m              [20;100H[33m309 [m        prompt();                                                              [41m [m              [21;100H[33m310 [m                                                                               [41m [m              [22;100H[33m311 [m    [33mreturn[m choice;                                                             [41m [m              [23;100H[33m312 [m}                                                                              [41m [m              [24;100H[33m313 [m                                                                               [41m [m              [25;100H[33m314 [m                                                                               [41m [m              [26;100H[33m315 [m                                                                               [41m [m              [27;100H[33m316 [m[34m//Task: This acts as the manager of the whole program. Provides an interface fo[m[34m[41mr[m              [28;100H[33m317 [m[34m//      the user to use.[m                                                       [41m [m              [29;100H[33m318 [m[34m//Input: None[m                                                                  [41m [m              [30;100H[33m319 [m[34m//Output: Returns 1 upon completion of program[m                                 [41m [m              [31;100H[33m320 [m[32mint[m Client::operation()                                                        [41m [m              [32;100H[33m321 [m{                                                                              [41m [m              [33;100H[33m322 [m    [32mint[m option = [31m0[m; [34m//Holds choice of what the user wants to do [m               [41m [m              [34;100H[33m323 [m    [32mint[m term_year = [31m0[m; [34m//Holds temporary term year to be passed to insert[m      [41m [m              [35;100H[33m324 [m    [32mint[m term = [31m0[m; [34m//Fall,Winter,Spring,Summer[m                                  [41m [m              [36;100H[33m325 [m    [32mint[m rm_year = [31m0[m; [34m//Holds year of term to be removed[m                        [41m [m              [37;100H[33m326 [m    [32mint[m rm_term = [31m0[m; [34m//Holds term to be removed[m                                [41m [m              [38;100H[33m327 [m                                                                               [41m [m              [39;100H[33m328 [m    cout << [31m"[m[35m\n\n[m[31mWelcome to my program! The purpose of this program is to help"[m[41m [m              [40;100H[33m329 [m            [31m"evaluate your progress in the CS Program."[m << endl;               [41m [m              [41;100H[33m330 [m                                                                               [41m [m              [42;100H[33m331 [m    [33mdo[m                                                                         [41m [m              [43;100H[33m332 [m    {                                                                          [41m [m              [44;100H[33m333 [m        [33mif[m([31m5[m < right_height || [31m5[m < left_height)[34m//if balance is off then rotate[m [41m [m              [45;100H[33m334 [m            rotation();                                                        [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m335 [m[8Coption = prompt();[53C[41m [m[47;100H[33m336 [m[79C[41m [m[48;100H[33m337 [8Cswitch[m(option)[57C[41m [m[49;100H[33m338 [m[8C{[70C[41m [m[50;100H[33m339 [12Ccase[m [31m1[m:[60C[41m [m[51;182H[1m[7m2,[12C1%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,0-1[47;104H[?12l[?25h[?25l[m[2;100H[33m296 [m                                                                               [41m [m              [3;100H[33m297 [m    cout << [31m"[m[35m\n\n[m[31m---Menu---"[m << endl;                                          [41m [m              [4;100H[33m298 [m    cout << [31m"1) Add A Course"[m << endl;                                         [41m [m              [5;100H[33m299 [m    cout << [31m"2) Remove A Term/Course"[m << endl;                                 [41m [m              [6;100H[33m300 [m    cout << [31m"3) Evaluate CS Program Progression"[m << endl;                      [41m [m              [7;100H[33m301 [m    cout << [31m"4) Display Current Program Requirements"[m << endl;                 [41m [m              [8;100H[33m302 [m    cout << [31m"5) Quit"[m << endl;                                                 [41m [m              [9;100H[33m303 [m                                                                               [41m [m              [10;100H[33m304 [m    cout << [31m"[m[35m\n[m[31mPlease Choose A Number: "[m;                                      [41m [m              [11;100H[33m305 [m    cin >> choice;                                                             [41m [m              [12;100H[33m306 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [13;100H[33m307 [m                                                                               [41m [m              [14;100H[33m308 [m    [33mif[m(choice > [31m5[m || choice <= [31m0[m)                                              [41m [m              [15;100H[33m309 [m        prompt();                                                              [41m [m              [16;100H[33m310 [m                                                                               [41m [m              [17;100H[33m311 [m    [33mreturn[m choice;                                                             [41m [m              [18;100H[33m312 [m}                                                                              [41m [m              [19;100H[33m313 [m                                                                               [41m [m              [20;100H[33m314 [m                                                                               [41m [m              [21;100H[33m315 [m                                                                               [41m [m              [22;100H[33m316 [m[34m//Task: This acts as the manager of the whole program. Provides an interface fo[m[34m[41mr[m              [23;100H[33m317 [m[34m//      the user to use.[m                                                       [41m [m              [24;100H[33m318 [m[34m//Input: None[m                                                                  [41m [m              [25;100H[33m319 [m[34m//Output: Returns 1 upon completion of program[m                                 [41m [m              [26;100H[33m320 [m[32mint[m Client::operation()                                                        [41m [m              [27;100H[33m321 [m{                                                                              [41m [m              [28;100H[33m322 [m    [32mint[m option = [31m0[m; [34m//Holds choice of what the user wants to do [m               [41m [m              [29;100H[33m323 [m    [32mint[m term_year = [31m0[m; [34m//Holds temporary term year to be passed to insert[m      [41m [m              [30;100H[33m324 [m    [32mint[m term = [31m0[m; [34m//Fall,Winter,Spring,Summer[m                                  [41m [m              [31;100H[33m325 [m    [32mint[m rm_year = [31m0[m; [34m//Holds year of term to be removed[m                        [41m [m              [32;100H[33m326 [m    [32mint[m rm_term = [31m0[m; [34m//Holds term to be removed[m                                [41m [m              [33;100H[33m327 [m                                                                               [41m [m              [34;100H[33m328 [m    cout << [31m"[m[35m\n\n[m[31mWelcome to my program! The purpose of this program is to help"[m[41m [m              [35;100H[33m329 [m            [31m"evaluate your progress in the CS Program."[m << endl;               [41m [m              [36;100H[33m330 [m                                                                               [41m [m              [37;100H[33m331 [m    [33mdo[m                                                                         [41m [m              [38;100H[33m332 [m    {                                                                          [41m [m              [39;100H[33m333 [m        [33mif[m([31m5[m < right_height || [31m5[m < left_height)[34m//if balance is off then rotate[m [41m [m              [40;100H[33m334 [m            rotation();                                                        [41m [m              [41;100H[33m335 [m        option = prompt();                                                     [41m [m              [42;100H[33m336 [m                                                                               [41m [m              [43;100H[33m337 [m        [33mswitch[m(option)                                                         [41m [m              [44;100H[33m338 [m        {                                                                      [41m [m              [45;100H[33m339 [m            [33mcase[m [31m1[m:                                                            [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m340 [m[16Cselect_term(term_year, term);[34C[41m [m[47;100H[33m341 [m[16Cinsert(root, term_year, term);[33C[41m [m[48;100H[33m342 [16Cbreak[m;[57C[41m [m[49;100H[33m343 [12Ccase[m [31m2[m:[60C[41m [m[50;100H[33m344 [m[16Cselect_term(rm_year, rm_term);[33C[41m [m[51;182H[1m[7m7,1   [8C3%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H40,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m301 [m    cout << [31m"4) Display Current Program Requirements"[m << endl;                 [41m [m              [3;100H[33m302 [m    cout << [31m"5) Quit"[m << endl;                                                 [41m [m              [4;100H[33m303 [m                                                                               [41m [m              [5;100H[33m304 [m    cout << [31m"[m[35m\n[m[31mPlease Choose A Number: "[m;                                      [41m [m              [6;100H[33m305 [m    cin >> choice;                                                             [41m [m              [7;100H[33m306 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [8;100H[33m307 [m                                                                               [41m [m              [9;100H[33m308 [m    [33mif[m(choice > [31m5[m || choice <= [31m0[m)                                              [41m [m              [10;100H[33m309 [m        prompt();                                                              [41m [m              [11;100H[33m310 [m                                                                               [41m [m              [12;100H[33m311 [m    [33mreturn[m choice;                                                             [41m [m              [13;100H[33m312 [m}                                                                              [41m [m              [14;100H[33m313 [m                                                                               [41m [m              [15;100H[33m314 [m                                                                               [41m [m              [16;100H[33m315 [m                                                                               [41m [m              [17;100H[33m316 [m[34m//Task: This acts as the manager of the whole program. Provides an interface fo[m[34m[41mr[m              [18;100H[33m317 [m[34m//      the user to use.[m                                                       [41m [m              [19;100H[33m318 [m[34m//Input: None[m                                                                  [41m [m              [20;100H[33m319 [m[34m//Output: Returns 1 upon completion of program[m                                 [41m [m              [21;100H[33m320 [m[32mint[m Client::operation()                                                        [41m [m              [22;100H[33m321 [m{                                                                              [41m [m              [23;100H[33m322 [m    [32mint[m option = [31m0[m; [34m//Holds choice of what the user wants to do [m               [41m [m              [24;100H[33m323 [m    [32mint[m term_year = [31m0[m; [34m//Holds temporary term year to be passed to insert[m      [41m [m              [25;100H[33m324 [m    [32mint[m term = [31m0[m; [34m//Fall,Winter,Spring,Summer[m                                  [41m [m              [26;100H[33m325 [m    [32mint[m rm_year = [31m0[m; [34m//Holds year of term to be removed[m                        [41m [m              [27;100H[33m326 [m    [32mint[m rm_term = [31m0[m; [34m//Holds term to be removed[m                                [41m [m              [28;100H[33m327 [m                                                                               [41m [m              [29;100H[33m328 [m    cout << [31m"[m[35m\n\n[m[31mWelcome to my program! The purpose of this program is to help"[m[41m [m              [30;100H[33m329 [m            [31m"evaluate your progress in the CS Program."[m << endl;               [41m [m              [31;100H[33m330 [m                                                                               [41m [m              [32;100H[33m331 [m    [33mdo[m                                                                         [41m [m              [33;100H[33m332 [m    {                                                                          [41m [m              [34;100H[33m333 [m        [33mif[m([31m5[m < right_height || [31m5[m < left_height)[34m//if balance is off then rotate[m [41m [m              [35;100H[33m334 [m            rotation();                                                        [41m [m              [36;100H[33m335 [m        option = prompt();                                                     [41m [m              [37;100H[33m336 [m                                                                               [41m [m              [38;100H[33m337 [m        [33mswitch[m(option)                                                         [41m [m              [39;100H[33m338 [m        {                                                                      [41m [m              [40;100H[33m339 [m            [33mcase[m [31m1[m:                                                            [41m [m              [41;100H[33m340 [m                select_term(term_year, term);                                  [41m [m              [42;100H[33m341 [m                insert(root, term_year, term);                                 [41m [m              [43;100H[33m342 [m                [33mbreak[m;                                                         [41m [m              [44;100H[33m343 [m            [33mcase[m [31m2[m:                                                            [41m [m              [45;100H[33m344 [m                select_term(rm_year, rm_term);                                 [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m345 [m[16Cremove(root, rm_year, rm_term);[32C[41m [m[47;100H[33m346 [16Cbreak[m;[57C[41m [m[48;100H[33m347 [12Ccase[m [31m3[m:[60C[41m [m[49;100H[33m348 [m[16Cdisplay(root);[49C[41m [m[50;100H[33m349 [16Cbreak[m;[57C[41m [m[51;182H[1m[7m2,[12C4%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m306 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [3;100H[33m307 [m                                                                               [41m [m              [4;100H[33m308 [m    [33mif[m(choice > [31m5[m || choice <= [31m0[m)                                              [41m [m              [5;100H[33m309 [m        prompt();                                                              [41m [m              [6;100H[33m310 [m                                                                               [41m [m              [7;100H[33m311 [m    [33mreturn[m choice;                                                             [41m [m              [8;100H[33m312 [m}                                                                              [41m [m              [9;100H[33m313 [m                                                                               [41m [m              [10;100H[33m314 [m                                                                               [41m [m              [11;100H[33m315 [m                                                                               [41m [m              [12;100H[33m316 [m[34m//Task: This acts as the manager of the whole program. Provides an interface fo[m[34m[41mr[m              [13;100H[33m317 [m[34m//      the user to use.[m                                                       [41m [m              [14;100H[33m318 [m[34m//Input: None[m                                                                  [41m [m              [15;100H[33m319 [m[34m//Output: Returns 1 upon completion of program[m                                 [41m [m              [16;100H[33m320 [m[32mint[m Client::operation()                                                        [41m [m              [17;100H[33m321 [m{                                                                              [41m [m              [18;100H[33m322 [m    [32mint[m option = [31m0[m; [34m//Holds choice of what the user wants to do [m               [41m [m              [19;100H[33m323 [m    [32mint[m term_year = [31m0[m; [34m//Holds temporary term year to be passed to insert[m      [41m [m              [20;100H[33m324 [m    [32mint[m term = [31m0[m; [34m//Fall,Winter,Spring,Summer[m                                  [41m [m              [21;100H[33m325 [m    [32mint[m rm_year = [31m0[m; [34m//Holds year of term to be removed[m                        [41m [m              [22;100H[33m326 [m    [32mint[m rm_term = [31m0[m; [34m//Holds term to be removed[m                                [41m [m              [23;100H[33m327 [m                                                                               [41m [m              [24;100H[33m328 [m    cout << [31m"[m[35m\n\n[m[31mWelcome to my program! The purpose of this program is to help"[m[41m [m              [25;100H[33m329 [m            [31m"evaluate your progress in the CS Program."[m << endl;               [41m [m              [26;100H[33m330 [m                                                                               [41m [m              [27;100H[33m331 [m    [33mdo[m                                                                         [41m [m              [28;100H[33m332 [m    {                                                                          [41m [m              [29;100H[33m333 [m        [33mif[m([31m5[m < right_height || [31m5[m < left_height)[34m//if balance is off then rotate[m [41m [m              [30;100H[33m334 [m            rotation();                                                        [41m [m              [31;100H[33m335 [m        option = prompt();                                                     [41m [m              [32;100H[33m336 [m                                                                               [41m [m              [33;100H[33m337 [m        [33mswitch[m(option)                                                         [41m [m              [34;100H[33m338 [m        {                                                                      [41m [m              [35;100H[33m339 [m            [33mcase[m [31m1[m:                                                            [41m [m              [36;100H[33m340 [m                select_term(term_year, term);                                  [41m [m              [37;100H[33m341 [m                insert(root, term_year, term);                                 [41m [m              [38;100H[33m342 [m                [33mbreak[m;                                                         [41m [m              [39;100H[33m343 [m            [33mcase[m [31m2[m:                                                            [41m [m              [40;100H[33m344 [m                select_term(rm_year, rm_term);                                 [41m [m              [41;100H[33m345 [m                remove(root, rm_year, rm_term);                                [41m [m              [42;100H[33m346 [m                [33mbreak[m;                                                         [41m [m              [43;100H[33m347 [m            [33mcase[m [31m3[m:                                                            [41m [m              [44;100H[33m348 [m                display(root);                                                 [41m [m              [45;100H[33m349 [m                [33mbreak[m;                                                         [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m350 [12Ccase[m [31m4[m:[60C[41m [m[47;100H[33m351 [16Cif[m(root)[55C[41m [m[48;100H[33m352 [m[16C{[62C[41m [m[49;100H[33m353 [m[20Croot->insert_gpa();[40C[41m [m[50;100H[33m354 [m[20Creceive_gpa(root);[41C[41m [m[51;182H[1m[7m7,[12C5%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H50,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m311 [m    [33mreturn[m choice;                                                             [41m [m              [3;100H[33m312 [m}                                                                              [41m [m              [4;100H[33m313 [m                                                                               [41m [m              [5;100H[33m314 [m                                                                               [41m [m              [6;100H[33m315 [m                                                                               [41m [m              [7;100H[33m316 [m[34m//Task: This acts as the manager of the whole program. Provides an interface fo[m[34m[41mr[m              [8;100H[33m317 [m[34m//      the user to use.[m                                                       [41m [m              [9;100H[33m318 [m[34m//Input: None[m                                                                  [41m [m              [10;100H[33m319 [m[34m//Output: Returns 1 upon completion of program[m                                 [41m [m              [11;100H[33m320 [m[32mint[m Client::operation()                                                        [41m [m              [12;100H[33m321 [m{                                                                              [41m [m              [13;100H[33m322 [m    [32mint[m option = [31m0[m; [34m//Holds choice of what the user wants to do [m               [41m [m              [14;100H[33m323 [m    [32mint[m term_year = [31m0[m; [34m//Holds temporary term year to be passed to insert[m      [41m [m              [15;100H[33m324 [m    [32mint[m term = [31m0[m; [34m//Fall,Winter,Spring,Summer[m                                  [41m [m              [16;100H[33m325 [m    [32mint[m rm_year = [31m0[m; [34m//Holds year of term to be removed[m                        [41m [m              [17;100H[33m326 [m    [32mint[m rm_term = [31m0[m; [34m//Holds term to be removed[m                                [41m [m              [18;100H[33m327 [m                                                                               [41m [m              [19;100H[33m328 [m    cout << [31m"[m[35m\n\n[m[31mWelcome to my program! The purpose of this program is to help"[m[41m [m              [20;100H[33m329 [m            [31m"evaluate your progress in the CS Program."[m << endl;               [41m [m              [21;100H[33m330 [m                                                                               [41m [m              [22;100H[33m331 [m    [33mdo[m                                                                         [41m [m              [23;100H[33m332 [m    {                                                                          [41m [m              [24;100H[33m333 [m        [33mif[m([31m5[m < right_height || [31m5[m < left_height)[34m//if balance is off then rotate[m [41m [m              [25;100H[33m334 [m            rotation();                                                        [41m [m              [26;100H[33m335 [m        option = prompt();                                                     [41m [m              [27;100H[33m336 [m                                                                               [41m [m              [28;100H[33m337 [m        [33mswitch[m(option)                                                         [41m [m              [29;100H[33m338 [m        {                                                                      [41m [m              [30;100H[33m339 [m            [33mcase[m [31m1[m:                                                            [41m [m              [31;100H[33m340 [m                select_term(term_year, term);                                  [41m [m              [32;100H[33m341 [m                insert(root, term_year, term);                                 [41m [m              [33;100H[33m342 [m                [33mbreak[m;                                                         [41m [m              [34;100H[33m343 [m            [33mcase[m [31m2[m:                                                            [41m [m              [35;100H[33m344 [m                select_term(rm_year, rm_term);                                 [41m [m              [36;100H[33m345 [m                remove(root, rm_year, rm_term);                                [41m [m              [37;100H[33m346 [m                [33mbreak[m;                                                         [41m [m              [38;100H[33m347 [m            [33mcase[m [31m3[m:                                                            [41m [m              [39;100H[33m348 [m                display(root);                                                 [41m [m              [40;100H[33m349 [m                [33mbreak[m;                                                         [41m [m              [41;100H[33m350 [m            [33mcase[m [31m4[m:                                                            [41m [m              [42;100H[33m351 [m                [33mif[m(root)                                                       [41m [m              [43;100H[33m352 [m                {                                                              [41m [m              [44;100H[33m353 [m                    root->insert_gpa();                                        [41m [m              [45;100H[33m354 [m                    receive_gpa(root);                                         [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m355 [m[20Ccalc_gpa();[48C[41m [m[47;100H[33m356 [m[20Cevaluate_progress();[39C[41m [m[48;100H[33m357 [m[16C}[62C[41m [m[49;100H[33m358 [16Celse[m[59C[41m [m[50;100H[33m359 [m[20Ccout << [31m"Please add some classes first! "[m << endl;[9C[41m [m[51;182H[1m[7m2,[12C6%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m316 [m[34m//Task: This acts as the manager of the whole program. Provides an interface fo[m[34m[41mr[m              [3;100H[33m317 [m[34m//      the user to use.[m                                                       [41m [m              [4;100H[33m318 [m[34m//Input: None[m                                                                  [41m [m              [5;100H[33m319 [m[34m//Output: Returns 1 upon completion of program[m                                 [41m [m              [6;100H[33m320 [m[32mint[m Client::operation()                                                        [41m [m              [7;100H[33m321 [m{                                                                              [41m [m              [8;100H[33m322 [m    [32mint[m option = [31m0[m; [34m//Holds choice of what the user wants to do [m               [41m [m              [9;100H[33m323 [m    [32mint[m term_year = [31m0[m; [34m//Holds temporary term year to be passed to insert[m      [41m [m              [10;100H[33m324 [m    [32mint[m term = [31m0[m; [34m//Fall,Winter,Spring,Summer[m                                  [41m [m              [11;100H[33m325 [m    [32mint[m rm_year = [31m0[m; [34m//Holds year of term to be removed[m                        [41m [m              [12;100H[33m326 [m    [32mint[m rm_term = [31m0[m; [34m//Holds term to be removed[m                                [41m [m              [13;100H[33m327 [m                                                                               [41m [m              [14;100H[33m328 [m    cout << [31m"[m[35m\n\n[m[31mWelcome to my program! The purpose of this program is to help"[m[41m [m              [15;100H[33m329 [m            [31m"evaluate your progress in the CS Program."[m << endl;               [41m [m              [16;100H[33m330 [m                                                                               [41m [m              [17;100H[33m331 [m    [33mdo[m                                                                         [41m [m              [18;100H[33m332 [m    {                                                                          [41m [m              [19;100H[33m333 [m        [33mif[m([31m5[m < right_height || [31m5[m < left_height)[34m//if balance is off then rotate[m [41m [m              [20;100H[33m334 [m            rotation();                                                        [41m [m              [21;100H[33m335 [m        option = prompt();                                                     [41m [m              [22;100H[33m336 [m                                                                               [41m [m              [23;100H[33m337 [m        [33mswitch[m(option)                                                         [41m [m              [24;100H[33m338 [m        {                                                                      [41m [m              [25;100H[33m339 [m            [33mcase[m [31m1[m:                                                            [41m [m              [26;100H[33m340 [m                select_term(term_year, term);                                  [41m [m              [27;100H[33m341 [m                insert(root, term_year, term);                                 [41m [m              [28;100H[33m342 [m                [33mbreak[m;                                                         [41m [m              [29;100H[33m343 [m            [33mcase[m [31m2[m:                                                            [41m [m              [30;100H[33m344 [m                select_term(rm_year, rm_term);                                 [41m [m              [31;100H[33m345 [m                remove(root, rm_year, rm_term);                                [41m [m              [32;100H[33m346 [m                [33mbreak[m;                                                         [41m [m              [33;100H[33m347 [m            [33mcase[m [31m3[m:                                                            [41m [m              [34;100H[33m348 [m                display(root);                                                 [41m [m              [35;100H[33m349 [m                [33mbreak[m;                                                         [41m [m              [36;100H[33m350 [m            [33mcase[m [31m4[m:                                                            [41m [m              [37;100H[33m351 [m                [33mif[m(root)                                                       [41m [m              [38;100H[33m352 [m                {                                                              [41m [m              [39;100H[33m353 [m                    root->insert_gpa();                                        [41m [m              [40;100H[33m354 [m                    receive_gpa(root);                                         [41m [m              [41;100H[33m355 [m                    calc_gpa();                                                [41m [m              [42;100H[33m356 [m                    evaluate_progress();                                       [41m [m              [43;100H[33m357 [m                }                                                              [41m [m              [44;100H[33m358 [m                [33melse[m                                                           [41m [m              [45;100H[33m359 [m                    cout << [31m"Please add some classes first! "[m << endl;         [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m360 [16Cbreak[m;[57C[41m [m[47;100H[33m361 [12Ccase[m [31m5[m:[60C[41m [m[48;100H[33m362 [m[16Ccout << [31m"[m[35m\n[m[31mGoodbye! "[m << endl;[33C[41m [m[49;100H[33m363 [m[8C}[70C[41m [m[50;100H[33m364 [m    }[74C[41m [m[51;182H[1m[7m7,[12C7%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H60,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m321 [m{                                                                              [41m [m              [3;100H[33m322 [m    [32mint[m option = [31m0[m; [34m//Holds choice of what the user wants to do [m               [41m [m              [4;100H[33m323 [m    [32mint[m term_year = [31m0[m; [34m//Holds temporary term year to be passed to insert[m      [41m [m              [5;100H[33m324 [m    [32mint[m term = [31m0[m; [34m//Fall,Winter,Spring,Summer[m                                  [41m [m              [6;100H[33m325 [m    [32mint[m rm_year = [31m0[m; [34m//Holds year of term to be removed[m                        [41m [m              [7;100H[33m326 [m    [32mint[m rm_term = [31m0[m; [34m//Holds term to be removed[m                                [41m [m              [8;100H[33m327 [m                                                                               [41m [m              [9;100H[33m328 [m    cout << [31m"[m[35m\n\n[m[31mWelcome to my program! The purpose of this program is to help"[m[41m [m              [10;100H[33m329 [m            [31m"evaluate your progress in the CS Program."[m << endl;               [41m [m              [11;100H[33m330 [m                                                                               [41m [m              [12;100H[33m331 [m    [33mdo[m                                                                         [41m [m              [13;100H[33m332 [m    {                                                                          [41m [m              [14;100H[33m333 [m        [33mif[m([31m5[m < right_height || [31m5[m < left_height)[34m//if balance is off then rotate[m [41m [m              [15;100H[33m334 [m            rotation();                                                        [41m [m              [16;100H[33m335 [m        option = prompt();                                                     [41m [m              [17;100H[33m336 [m                                                                               [41m [m              [18;100H[33m337 [m        [33mswitch[m(option)                                                         [41m [m              [19;100H[33m338 [m        {                                                                      [41m [m              [20;100H[33m339 [m            [33mcase[m [31m1[m:                                                            [41m [m              [21;100H[33m340 [m                select_term(term_year, term);                                  [41m [m              [22;100H[33m341 [m                insert(root, term_year, term);                                 [41m [m              [23;100H[33m342 [m                [33mbreak[m;                                                         [41m [m              [24;100H[33m343 [m            [33mcase[m [31m2[m:                                                            [41m [m              [25;100H[33m344 [m                select_term(rm_year, rm_term);                                 [41m [m              [26;100H[33m345 [m                remove(root, rm_year, rm_term);                                [41m [m              [27;100H[33m346 [m                [33mbreak[m;                                                         [41m [m              [28;100H[33m347 [m            [33mcase[m [31m3[m:                                                            [41m [m              [29;100H[33m348 [m                display(root);                                                 [41m [m              [30;100H[33m349 [m                [33mbreak[m;                                                         [41m [m              [31;100H[33m350 [m            [33mcase[m [31m4[m:                                                            [41m [m              [32;100H[33m351 [m                [33mif[m(root)                                                       [41m [m              [33;100H[33m352 [m                {                                                              [41m [m              [34;100H[33m353 [m                    root->insert_gpa();                                        [41m [m              [35;100H[33m354 [m                    receive_gpa(root);                                         [41m [m              [36;100H[33m355 [m                    calc_gpa();                                                [41m [m              [37;100H[33m356 [m                    evaluate_progress();                                       [41m [m              [38;100H[33m357 [m                }                                                              [41m [m              [39;100H[33m358 [m                [33melse[m                                                           [41m [m              [40;100H[33m359 [m                    cout << [31m"Please add some classes first! "[m << endl;         [41m [m              [41;100H[33m360 [m                [33mbreak[m;                                                         [41m [m              [42;100H[33m361 [m            [33mcase[m [31m5[m:                                                            [41m [m              [43;100H[33m362 [m                cout << [31m"[m[35m\n[m[31mGoodbye! "[m << endl;                                 [41m [m              [44;100H[33m363 [m        }                                                                      [41m [m              [45;100H[33m364 [m    }                                                                          [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m365 [m    [33mwhile[m(option != [31m5[m);[56C[41m [m[47;100H[33m366 [m[79C[41m [m[48;100H[33m367 [m    [33mreturn[m [31m1[m;[66C[41m [m[49;100H[33m368 [m}[78C[41m [m[50;100H[33m369 [m[79C[41m [m[51;182H[1m[7m2,[12C9%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,0-1[47;104H[?12l[?25h[?25l[m[2;100H[33m326 [m    [32mint[m rm_term = [31m0[m; [34m//Holds term to be removed[m                                [41m [m              [3;100H[33m327 [m                                                                               [41m [m              [4;100H[33m328 [m    cout << [31m"[m[35m\n\n[m[31mWelcome to my program! The purpose of this program is to help"[m[41m [m              [5;100H[33m329 [m            [31m"evaluate your progress in the CS Program."[m << endl;               [41m [m              [6;100H[33m330 [m                                                                               [41m [m              [7;100H[33m331 [m    [33mdo[m                                                                         [41m [m              [8;100H[33m332 [m    {                                                                          [41m [m              [9;100H[33m333 [m        [33mif[m([31m5[m < right_height || [31m5[m < left_height)[34m//if balance is off then rotate[m [41m [m              [10;100H[33m334 [m            rotation();                                                        [41m [m              [11;100H[33m335 [m        option = prompt();                                                     [41m [m              [12;100H[33m336 [m                                                                               [41m [m              [13;100H[33m337 [m        [33mswitch[m(option)                                                         [41m [m              [14;100H[33m338 [m        {                                                                      [41m [m              [15;100H[33m339 [m            [33mcase[m [31m1[m:                                                            [41m [m              [16;100H[33m340 [m                select_term(term_year, term);                                  [41m [m              [17;100H[33m341 [m                insert(root, term_year, term);                                 [41m [m              [18;100H[33m342 [m                [33mbreak[m;                                                         [41m [m              [19;100H[33m343 [m            [33mcase[m [31m2[m:                                                            [41m [m              [20;100H[33m344 [m                select_term(rm_year, rm_term);                                 [41m [m              [21;100H[33m345 [m                remove(root, rm_year, rm_term);                                [41m [m              [22;100H[33m346 [m                [33mbreak[m;                                                         [41m [m              [23;100H[33m347 [m            [33mcase[m [31m3[m:                                                            [41m [m              [24;100H[33m348 [m                display(root);                                                 [41m [m              [25;100H[33m349 [m                [33mbreak[m;                                                         [41m [m              [26;100H[33m350 [m            [33mcase[m [31m4[m:                                                            [41m [m              [27;100H[33m351 [m                [33mif[m(root)                                                       [41m [m              [28;100H[33m352 [m                {                                                              [41m [m              [29;100H[33m353 [m                    root->insert_gpa();                                        [41m [m              [30;100H[33m354 [m                    receive_gpa(root);                                         [41m [m              [31;100H[33m355 [m                    calc_gpa();                                                [41m [m              [32;100H[33m356 [m                    evaluate_progress();                                       [41m [m              [33;100H[33m357 [m                }                                                              [41m [m              [34;100H[33m358 [m                [33melse[m                                                           [41m [m              [35;100H[33m359 [m                    cout << [31m"Please add some classes first! "[m << endl;         [41m [m              [36;100H[33m360 [m                [33mbreak[m;                                                         [41m [m              [37;100H[33m361 [m            [33mcase[m [31m5[m:                                                            [41m [m              [38;100H[33m362 [m                cout << [31m"[m[35m\n[m[31mGoodbye! "[m << endl;                                 [41m [m              [39;100H[33m363 [m        }                                                                      [41m [m              [40;100H[33m364 [m    }                                                                          [41m [m              [41;100H[33m365 [m    [33mwhile[m(option != [31m5[m);                                                        [41m [m              [42;100H[33m366 [m                                                                               [41m [m              [43;100H[33m367 [m    [33mreturn[m [31m1[m;                                                                  [41m [m              [44;100H[33m368 [m}                                                                              [41m [m              [45;100H[33m369 [m                                                                               [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m370 [m[79C[41m [m[47;100H[33m371 [m[79C[41m [m[48;100H[33m372 [m[34m//Task:   Allows user to choose the term and year[m[30C[41m [m[49;100H[33m373 [m[34m//Input:  Term and year by reference to set[m[36C[41m [m[50;100H[33m374 [m[34m//Output: Term and year changed via reference[m[34C[41m [m[51;182H[1m[7m7,1   [7C80%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,0-1[45;104H[?12l[?25h[?25l[51;181H70,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m331 [m    [33mdo[m                                                                         [41m [m              [3;100H[33m332 [m    {                                                                          [41m [m              [4;100H[33m333 [m        [33mif[m([31m5[m < right_height || [31m5[m < left_height)[34m//if balance is off then rotate[m [41m [m              [5;100H[33m334 [m            rotation();                                                        [41m [m              [6;100H[33m335 [m        option = prompt();                                                     [41m [m              [7;100H[33m336 [m                                                                               [41m [m              [8;100H[33m337 [m        [33mswitch[m(option)                                                         [41m [m              [9;100H[33m338 [m        {                                                                      [41m [m              [10;100H[33m339 [m            [33mcase[m [31m1[m:                                                            [41m [m              [11;100H[33m340 [m                select_term(term_year, term);                                  [41m [m              [12;100H[33m341 [m                insert(root, term_year, term);                                 [41m [m              [13;100H[33m342 [m                [33mbreak[m;                                                         [41m [m              [14;100H[33m343 [m            [33mcase[m [31m2[m:                                                            [41m [m              [15;100H[33m344 [m                select_term(rm_year, rm_term);                                 [41m [m              [16;100H[33m345 [m                remove(root, rm_year, rm_term);                                [41m [m              [17;100H[33m346 [m                [33mbreak[m;                                                         [41m [m              [18;100H[33m347 [m            [33mcase[m [31m3[m:                                                            [41m [m              [19;100H[33m348 [m                display(root);                                                 [41m [m              [20;100H[33m349 [m                [33mbreak[m;                                                         [41m [m              [21;100H[33m350 [m            [33mcase[m [31m4[m:                                                            [41m [m              [22;100H[33m351 [m                [33mif[m(root)                                                       [41m [m              [23;100H[33m352 [m                {                                                              [41m [m              [24;100H[33m353 [m                    root->insert_gpa();                                        [41m [m              [25;100H[33m354 [m                    receive_gpa(root);                                         [41m [m              [26;100H[33m355 [m                    calc_gpa();                                                [41m [m              [27;100H[33m356 [m                    evaluate_progress();                                       [41m [m              [28;100H[33m357 [m                }                                                              [41m [m              [29;100H[33m358 [m                [33melse[m                                                           [41m [m              [30;100H[33m359 [m                    cout << [31m"Please add some classes first! "[m << endl;         [41m [m              [31;100H[33m360 [m                [33mbreak[m;                                                         [41m [m              [32;100H[33m361 [m            [33mcase[m [31m5[m:                                                            [41m [m              [33;100H[33m362 [m                cout << [31m"[m[35m\n[m[31mGoodbye! "[m << endl;                                 [41m [m              [34;100H[33m363 [m        }                                                                      [41m [m              [35;100H[33m364 [m    }                                                                          [41m [m              [36;100H[33m365 [m    [33mwhile[m(option != [31m5[m);                                                        [41m [m              [37;100H[33m366 [m                                                                               [41m [m              [38;100H[33m367 [m    [33mreturn[m [31m1[m;                                                                  [41m [m              [39;100H[33m368 [m}                                                                              [41m [m              [40;100H[33m369 [m                                                                               [41m [m              [41;100H[33m370 [m                                                                               [41m [m              [42;100H[33m371 [m                                                                               [41m [m              [43;100H[33m372 [m[34m//Task:   Allows user to choose the term and year[m                              [41m [m              [44;100H[33m373 [m[34m//Input:  Term and year by reference to set[m                                    [41m [m              [45;100H[33m374 [m[34m//Output: Term and year changed via reference[m                                  [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m375 [m[32mvoid[m Client::select_term([32mint[m & term_year, [32mint[m & term)[26C[41m [m[47;100H[33m376 [m{[78C[41m [m[48;100H[33m377 [m    cout << [31m"[m[35m\n[m[31mWhat year was your course taken(EX: 2015)? "[m << endl;[11C[41m [m[49;100H[33m378 [m    cin >> term_year;[58C[41m [m[50;100H[33m379 [m    cin.ignore([31m100[m, [35m'\n'[m);[53C[41m [m[51;182H[1m[7m2,1   [8C1%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m336 [m                                                                               [41m [m              [3;100H[33m337 [m        [33mswitch[m(option)                                                         [41m [m              [4;100H[33m338 [m        {                                                                      [41m [m              [5;100H[33m339 [m            [33mcase[m [31m1[m:                                                            [41m [m              [6;100H[33m340 [m                select_term(term_year, term);                                  [41m [m              [7;100H[33m341 [m                insert(root, term_year, term);                                 [41m [m              [8;100H[33m342 [m                [33mbreak[m;                                                         [41m [m              [9;100H[33m343 [m            [33mcase[m [31m2[m:                                                            [41m [m              [10;100H[33m344 [m                select_term(rm_year, rm_term);                                 [41m [m              [11;100H[33m345 [m                remove(root, rm_year, rm_term);                                [41m [m              [12;100H[33m346 [m                [33mbreak[m;                                                         [41m [m              [13;100H[33m347 [m            [33mcase[m [31m3[m:                                                            [41m [m              [14;100H[33m348 [m                display(root);                                                 [41m [m              [15;100H[33m349 [m                [33mbreak[m;                                                         [41m [m              [16;100H[33m350 [m            [33mcase[m [31m4[m:                                                            [41m [m              [17;100H[33m351 [m                [33mif[m(root)                                                       [41m [m              [18;100H[33m352 [m                {                                                              [41m [m              [19;100H[33m353 [m                    root->insert_gpa();                                        [41m [m              [20;100H[33m354 [m                    receive_gpa(root);                                         [41m [m              [21;100H[33m355 [m                    calc_gpa();                                                [41m [m              [22;100H[33m356 [m                    evaluate_progress();                                       [41m [m              [23;100H[33m357 [m                }                                                              [41m [m              [24;100H[33m358 [m                [33melse[m                                                           [41m [m              [25;100H[33m359 [m                    cout << [31m"Please add some classes first! "[m << endl;         [41m [m              [26;100H[33m360 [m                [33mbreak[m;                                                         [41m [m              [27;100H[33m361 [m            [33mcase[m [31m5[m:                                                            [41m [m              [28;100H[33m362 [m                cout << [31m"[m[35m\n[m[31mGoodbye! "[m << endl;                                 [41m [m              [29;100H[33m363 [m        }                                                                      [41m [m              [30;100H[33m364 [m    }                                                                          [41m [m              [31;100H[33m365 [m    [33mwhile[m(option != [31m5[m);                                                        [41m [m              [32;100H[33m366 [m                                                                               [41m [m              [33;100H[33m367 [m    [33mreturn[m [31m1[m;                                                                  [41m [m              [34;100H[33m368 [m}                                                                              [41m [m              [35;100H[33m369 [m                                                                               [41m [m              [36;100H[33m370 [m                                                                               [41m [m              [37;100H[33m371 [m                                                                               [41m [m              [38;100H[33m372 [m[34m//Task:   Allows user to choose the term and year[m                              [41m [m              [39;100H[33m373 [m[34m//Input:  Term and year by reference to set[m                                    [41m [m              [40;100H[33m374 [m[34m//Output: Term and year changed via reference[m                                  [41m [m              [41;100H[33m375 [m[32mvoid[m Client::select_term([32mint[m & term_year, [32mint[m & term)                          [41m [m              [42;100H[33m376 [m{                                                                              [41m [m              [43;100H[33m377 [m    cout << [31m"[m[35m\n[m[31mWhat year was your course taken(EX: 2015)? "[m << endl;           [41m [m              [44;100H[33m378 [m    cin >> term_year;                                                          [41m [m              [45;100H[33m379 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m380 [m[79C[41m [m[47;100H[33m381 [m    [33mdo[m[73C[41m [m[48;100H[33m382 [m    {[74C[41m [m[49;100H[33m383 [m[8Ccout << [31m"[m[35m\n[m[31mPlease choose which term(using #): "[m << endl;[15C[41m [m[50;100H[33m384 [m[8Ccout << [31m"1) Fall"[m << endl;[45C[41m [m[51;182H[1m[7m7,[12C2%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H80,0-1[46;104H[?12l[?25h[?25l[51;182H1,1   [47;104H[?12l[?25h[?25l[m[2;100H[33m341 [m                insert(root, term_year, term);                                 [41m [m              [3;100H[33m342 [m                [33mbreak[m;                                                         [41m [m              [4;100H[33m343 [m            [33mcase[m [31m2[m:                                                            [41m [m              [5;100H[33m344 [m                select_term(rm_year, rm_term);                                 [41m [m              [6;100H[33m345 [m                remove(root, rm_year, rm_term);                                [41m [m              [7;100H[33m346 [m                [33mbreak[m;                                                         [41m [m              [8;100H[33m347 [m            [33mcase[m [31m3[m:                                                            [41m [m              [9;100H[33m348 [m                display(root);                                                 [41m [m              [10;100H[33m349 [m                [33mbreak[m;                                                         [41m [m              [11;100H[33m350 [m            [33mcase[m [31m4[m:                                                            [41m [m              [12;100H[33m351 [m                [33mif[m(root)                                                       [41m [m              [13;100H[33m352 [m                {                                                              [41m [m              [14;100H[33m353 [m                    root->insert_gpa();                                        [41m [m              [15;100H[33m354 [m                    receive_gpa(root);                                         [41m [m              [16;100H[33m355 [m                    calc_gpa();                                                [41m [m              [17;100H[33m356 [m                    evaluate_progress();                                       [41m [m              [18;100H[33m357 [m                }                                                              [41m [m              [19;100H[33m358 [m                [33melse[m                                                           [41m [m              [20;100H[33m359 [m                    cout << [31m"Please add some classes first! "[m << endl;         [41m [m              [21;100H[33m360 [m                [33mbreak[m;                                                         [41m [m              [22;100H[33m361 [m            [33mcase[m [31m5[m:                                                            [41m [m              [23;100H[33m362 [m                cout << [31m"[m[35m\n[m[31mGoodbye! "[m << endl;                                 [41m [m              [24;100H[33m363 [m        }                                                                      [41m [m              [25;100H[33m364 [m    }                                                                          [41m [m              [26;100H[33m365 [m    [33mwhile[m(option != [31m5[m);                                                        [41m [m              [27;100H[33m366 [m                                                                               [41m [m              [28;100H[33m367 [m    [33mreturn[m [31m1[m;                                                                  [41m [m              [29;100H[33m368 [m}                                                                              [41m [m              [30;100H[33m369 [m                                                                               [41m [m              [31;100H[33m370 [m                                                                               [41m [m              [32;100H[33m371 [m                                                                               [41m [m              [33;100H[33m372 [m[34m//Task:   Allows user to choose the term and year[m                              [41m [m              [34;100H[33m373 [m[34m//Input:  Term and year by reference to set[m                                    [41m [m              [35;100H[33m374 [m[34m//Output: Term and year changed via reference[m                                  [41m [m              [36;100H[33m375 [m[32mvoid[m Client::select_term([32mint[m & term_year, [32mint[m & term)                          [41m [m              [37;100H[33m376 [m{                                                                              [41m [m              [38;100H[33m377 [m    cout << [31m"[m[35m\n[m[31mWhat year was your course taken(EX: 2015)? "[m << endl;           [41m [m              [39;100H[33m378 [m    cin >> term_year;                                                          [41m [m              [40;100H[33m379 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [41;100H[33m380 [m                                                                               [41m [m              [42;100H[33m381 [m    [33mdo[m                                                                         [41m [m              [43;100H[33m382 [m    {                                                                          [41m [m              [44;100H[33m383 [m        cout << [31m"[m[35m\n[m[31mPlease choose which term(using #): "[m << endl;               [41m [m              [45;100H[33m384 [m        cout << [31m"1) Fall"[m << endl;                                             [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m385 [m[8Ccout << [31m"2) Winter"[m << endl;[43C[41m [m[47;100H[33m386 [m[8Ccout << [31m"3) Spring"[m << endl;[43C[41m [m[48;100H[33m387 [m[8Ccout << [31m"4) Summer"[m << endl << endl;[35C[41m [m[49;100H[33m388 [m[79C[41m [m[50;100H[33m389 [m[8Ccin >> term;[59C[41m [m[51;182H[1m[7m2,[12C4%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m346 [m                [33mbreak[m;                                                         [41m [m              [3;100H[33m347 [m            [33mcase[m [31m3[m:                                                            [41m [m              [4;100H[33m348 [m                display(root);                                                 [41m [m              [5;100H[33m349 [m                [33mbreak[m;                                                         [41m [m              [6;100H[33m350 [m            [33mcase[m [31m4[m:                                                            [41m [m              [7;100H[33m351 [m                [33mif[m(root)                                                       [41m [m              [8;100H[33m352 [m                {                                                              [41m [m              [9;100H[33m353 [m                    root->insert_gpa();                                        [41m [m              [10;100H[33m354 [m                    receive_gpa(root);                                         [41m [m              [11;100H[33m355 [m                    calc_gpa();                                                [41m [m              [12;100H[33m356 [m                    evaluate_progress();                                       [41m [m              [13;100H[33m357 [m                }                                                              [41m [m              [14;100H[33m358 [m                [33melse[m                                                           [41m [m              [15;100H[33m359 [m                    cout << [31m"Please add some classes first! "[m << endl;         [41m [m              [16;100H[33m360 [m                [33mbreak[m;                                                         [41m [m              [17;100H[33m361 [m            [33mcase[m [31m5[m:                                                            [41m [m              [18;100H[33m362 [m                cout << [31m"[m[35m\n[m[31mGoodbye! "[m << endl;                                 [41m [m              [19;100H[33m363 [m        }                                                                      [41m [m              [20;100H[33m364 [m    }                                                                          [41m [m              [21;100H[33m365 [m    [33mwhile[m(option != [31m5[m);                                                        [41m [m              [22;100H[33m366 [m                                                                               [41m [m              [23;100H[33m367 [m    [33mreturn[m [31m1[m;                                                                  [41m [m              [24;100H[33m368 [m}                                                                              [41m [m              [25;100H[33m369 [m                                                                               [41m [m              [26;100H[33m370 [m                                                                               [41m [m              [27;100H[33m371 [m                                                                               [41m [m              [28;100H[33m372 [m[34m//Task:   Allows user to choose the term and year[m                              [41m [m              [29;100H[33m373 [m[34m//Input:  Term and year by reference to set[m                                    [41m [m              [30;100H[33m374 [m[34m//Output: Term and year changed via reference[m                                  [41m [m              [31;100H[33m375 [m[32mvoid[m Client::select_term([32mint[m & term_year, [32mint[m & term)                          [41m [m              [32;100H[33m376 [m{                                                                              [41m [m              [33;100H[33m377 [m    cout << [31m"[m[35m\n[m[31mWhat year was your course taken(EX: 2015)? "[m << endl;           [41m [m              [34;100H[33m378 [m    cin >> term_year;                                                          [41m [m              [35;100H[33m379 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [36;100H[33m380 [m                                                                               [41m [m              [37;100H[33m381 [m    [33mdo[m                                                                         [41m [m              [38;100H[33m382 [m    {                                                                          [41m [m              [39;100H[33m383 [m        cout << [31m"[m[35m\n[m[31mPlease choose which term(using #): "[m << endl;               [41m [m              [40;100H[33m384 [m        cout << [31m"1) Fall"[m << endl;                                             [41m [m              [41;100H[33m385 [m        cout << [31m"2) Winter"[m << endl;                                           [41m [m              [42;100H[33m386 [m        cout << [31m"3) Spring"[m << endl;                                           [41m [m              [43;100H[33m387 [m        cout << [31m"4) Summer"[m << endl << endl;                                   [41m [m              [44;100H[33m388 [m                                                                               [41m [m              [45;100H[33m389 [m        cin >> term;                                                           [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m390 [m[8Ccin.ignore([31m100[m, [35m'\n'[m);[49C[41m [m[47;100H[33m391 [m    }[74C[41m [m[48;100H[33m392 [m    [33mwhile[m(term > [31m4[m || term <= [31m0[m);[46C[41m [m[49;100H[33m393 [m}[78C[41m [m[50;100H[33m394 [m[79C[41m [m[51;182H[1m[7m7,[12C5%[43;104H[?12l[?25h[?25l[51;182H8,0-1[44;104H[?12l[?25h[?25l[51;182H9,1   [45;104H[?12l[?25h[?25l[51;181H90,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m351 [m                [33mif[m(root)                                                       [41m [m              [3;100H[33m352 [m                {                                                              [41m [m              [4;100H[33m353 [m                    root->insert_gpa();                                        [41m [m              [5;100H[33m354 [m                    receive_gpa(root);                                         [41m [m              [6;100H[33m355 [m                    calc_gpa();                                                [41m [m              [7;100H[33m356 [m                    evaluate_progress();                                       [41m [m              [8;100H[33m357 [m                }                                                              [41m [m              [9;100H[33m358 [m                [33melse[m                                                           [41m [m              [10;100H[33m359 [m                    cout << [31m"Please add some classes first! "[m << endl;         [41m [m              [11;100H[33m360 [m                [33mbreak[m;                                                         [41m [m              [12;100H[33m361 [m            [33mcase[m [31m5[m:                                                            [41m [m              [13;100H[33m362 [m                cout << [31m"[m[35m\n[m[31mGoodbye! "[m << endl;                                 [41m [m              [14;100H[33m363 [m        }                                                                      [41m [m              [15;100H[33m364 [m    }                                                                          [41m [m              [16;100H[33m365 [m    [33mwhile[m(option != [31m5[m);                                                        [41m [m              [17;100H[33m366 [m                                                                               [41m [m              [18;100H[33m367 [m    [33mreturn[m [31m1[m;                                                                  [41m [m              [19;100H[33m368 [m}                                                                              [41m [m              [20;100H[33m369 [m                                                                               [41m [m              [21;100H[33m370 [m                                                                               [41m [m              [22;100H[33m371 [m                                                                               [41m [m              [23;100H[33m372 [m[34m//Task:   Allows user to choose the term and year[m                              [41m [m              [24;100H[33m373 [m[34m//Input:  Term and year by reference to set[m                                    [41m [m              [25;100H[33m374 [m[34m//Output: Term and year changed via reference[m                                  [41m [m              [26;100H[33m375 [m[32mvoid[m Client::select_term([32mint[m & term_year, [32mint[m & term)                          [41m [m              [27;100H[33m376 [m{                                                                              [41m [m              [28;100H[33m377 [m    cout << [31m"[m[35m\n[m[31mWhat year was your course taken(EX: 2015)? "[m << endl;           [41m [m              [29;100H[33m378 [m    cin >> term_year;                                                          [41m [m              [30;100H[33m379 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [31;100H[33m380 [m                                                                               [41m [m              [32;100H[33m381 [m    [33mdo[m                                                                         [41m [m              [33;100H[33m382 [m    {                                                                          [41m [m              [34;100H[33m383 [m        cout << [31m"[m[35m\n[m[31mPlease choose which term(using #): "[m << endl;               [41m [m              [35;100H[33m384 [m        cout << [31m"1) Fall"[m << endl;                                             [41m [m              [36;100H[33m385 [m        cout << [31m"2) Winter"[m << endl;                                           [41m [m              [37;100H[33m386 [m        cout << [31m"3) Spring"[m << endl;                                           [41m [m              [38;100H[33m387 [m        cout << [31m"4) Summer"[m << endl << endl;                                   [41m [m              [39;100H[33m388 [m                                                                               [41m [m              [40;100H[33m389 [m        cin >> term;                                                           [41m [m              [41;100H[33m390 [m        cin.ignore([31m100[m, [35m'\n'[m);                                                 [41m [m              [42;100H[33m391 [m    }                                                                          [41m [m              [43;100H[33m392 [m    [33mwhile[m(term > [31m4[m || term <= [31m0[m);                                              [41m [m              [44;100H[33m393 [m}                                                                              [41m [m              [45;100H[33m394 [m                                                                               [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m395 [m[79C[41m [m[47;100H[33m396 [m[79C[41m [m[48;100H[33m397 [m[34m//Task:  Receives term gpa and credits and adds them to the overall amount. [m   [41m [m[49;100H[33m398 [m[34m//Input:  Root is received to be able to be a recursive function[m[15C[41m [m[50;100H[33m399 [m[34m//Output: Zero is returned when Null is reached.[m[31C[41m [m[51;182H[1m[7m2,[12C6%[43;104H[?12l[?25h[?25l[m[27;104H[46m{[44;104H}[m[51;182H[1m[7m3,[44;104H[?12l[?25h[?25l[m[27;104H{[44;104H}[51;182H[1m[7m4,0-1[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m356 [m                    evaluate_progress();                                       [41m [m              [3;100H[33m357 [m                }                                                              [41m [m              [4;100H[33m358 [m                [33melse[m                                                           [41m [m              [5;100H[33m359 [m                    cout << [31m"Please add some classes first! "[m << endl;         [41m [m              [6;100H[33m360 [m                [33mbreak[m;                                                         [41m [m              [7;100H[33m361 [m            [33mcase[m [31m5[m:                                                            [41m [m              [8;100H[33m362 [m                cout << [31m"[m[35m\n[m[31mGoodbye! "[m << endl;                                 [41m [m              [9;100H[33m363 [m        }                                                                      [41m [m              [10;100H[33m364 [m    }                                                                          [41m [m              [11;100H[33m365 [m    [33mwhile[m(option != [31m5[m);                                                        [41m [m              [12;100H[33m366 [m                                                                               [41m [m              [13;100H[33m367 [m    [33mreturn[m [31m1[m;                                                                  [41m [m              [14;100H[33m368 [m}                                                                              [41m [m              [15;100H[33m369 [m                                                                               [41m [m              [16;100H[33m370 [m                                                                               [41m [m              [17;100H[33m371 [m                                                                               [41m [m              [18;100H[33m372 [m[34m//Task:   Allows user to choose the term and year[m                              [41m [m              [19;100H[33m373 [m[34m//Input:  Term and year by reference to set[m                                    [41m [m              [20;100H[33m374 [m[34m//Output: Term and year changed via reference[m                                  [41m [m              [21;100H[33m375 [m[32mvoid[m Client::select_term([32mint[m & term_year, [32mint[m & term)                          [41m [m              [22;100H[33m376 [m{                                                                              [41m [m              [23;100H[33m377 [m    cout << [31m"[m[35m\n[m[31mWhat year was your course taken(EX: 2015)? "[m << endl;           [41m [m              [24;100H[33m378 [m    cin >> term_year;                                                          [41m [m              [25;100H[33m379 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [26;100H[33m380 [m                                                                               [41m [m              [27;100H[33m381 [m    [33mdo[m                                                                         [41m [m              [28;100H[33m382 [m    {                                                                          [41m [m              [29;100H[33m383 [m        cout << [31m"[m[35m\n[m[31mPlease choose which term(using #): "[m << endl;               [41m [m              [30;100H[33m384 [m        cout << [31m"1) Fall"[m << endl;                                             [41m [m              [31;100H[33m385 [m        cout << [31m"2) Winter"[m << endl;                                           [41m [m              [32;100H[33m386 [m        cout << [31m"3) Spring"[m << endl;                                           [41m [m              [33;100H[33m387 [m        cout << [31m"4) Summer"[m << endl << endl;                                   [41m [m              [34;100H[33m388 [m                                                                               [41m [m              [35;100H[33m389 [m        cin >> term;                                                           [41m [m              [36;100H[33m390 [m        cin.ignore([31m100[m, [35m'\n'[m);                                                 [41m [m              [37;100H[33m391 [m    }                                                                          [41m [m              [38;100H[33m392 [m    [33mwhile[m(term > [31m4[m || term <= [31m0[m);                                              [41m [m              [39;100H[33m393 [m}                                                                              [41m [m              [40;100H[33m394 [m                                                                               [41m [m              [41;100H[33m395 [m                                                                               [41m [m              [42;100H[33m396 [m                                                                               [41m [m              [43;100H[33m397 [m[34m//Task:  Receives term gpa and credits and adds them to the overall amount. [m   [41m [m              [44;100H[33m398 [m[34m//Input:  Root is received to be able to be a recursive function[m               [41m [m              [45;100H[33m399 [m[34m//Output: Zero is returned when Null is reached.[m                               [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m400 [m[32mint[m Client::receive_gpa(Node * root)[43C[41m [m[47;100H[33m401 [m{[78C[41m [m[48;100H[33m402 [m    [33mif[m(!root) [33mreturn[m [31m0[m;[56C[41m [m[49;100H[33m403 [m[79C[41m [m[50;100H[33m404 [m    total_gpa += root->give_term_gpa();[40C[41m [m[51;182H[1m[7m7,1   [8C7%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;180H400,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m361 [m            [33mcase[m [31m5[m:                                                            [41m [m              [3;100H[33m362 [m                cout << [31m"[m[35m\n[m[31mGoodbye! "[m << endl;                                 [41m [m              [4;100H[33m363 [m        }                                                                      [41m [m              [5;100H[33m364 [m    }                                                                          [41m [m              [6;100H[33m365 [m    [33mwhile[m(option != [31m5[m);                                                        [41m [m              [7;100H[33m366 [m                                                                               [41m [m              [8;100H[33m367 [m    [33mreturn[m [31m1[m;                                                                  [41m [m              [9;100H[33m368 [m}                                                                              [41m [m              [10;100H[33m369 [m                                                                               [41m [m              [11;100H[33m370 [m                                                                               [41m [m              [12;100H[33m371 [m                                                                               [41m [m              [13;100H[33m372 [m[34m//Task:   Allows user to choose the term and year[m                              [41m [m              [14;100H[33m373 [m[34m//Input:  Term and year by reference to set[m                                    [41m [m              [15;100H[33m374 [m[34m//Output: Term and year changed via reference[m                                  [41m [m              [16;100H[33m375 [m[32mvoid[m Client::select_term([32mint[m & term_year, [32mint[m & term)                          [41m [m              [17;100H[33m376 [m{                                                                              [41m [m              [18;100H[33m377 [m    cout << [31m"[m[35m\n[m[31mWhat year was your course taken(EX: 2015)? "[m << endl;           [41m [m              [19;100H[33m378 [m    cin >> term_year;                                                          [41m [m              [20;100H[33m379 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [21;100H[33m380 [m                                                                               [41m [m              [22;100H[33m381 [m    [33mdo[m                                                                         [41m [m              [23;100H[33m382 [m    {                                                                          [41m [m              [24;100H[33m383 [m        cout << [31m"[m[35m\n[m[31mPlease choose which term(using #): "[m << endl;               [41m [m              [25;100H[33m384 [m        cout << [31m"1) Fall"[m << endl;                                             [41m [m              [26;100H[33m385 [m        cout << [31m"2) Winter"[m << endl;                                           [41m [m              [27;100H[33m386 [m        cout << [31m"3) Spring"[m << endl;                                           [41m [m              [28;100H[33m387 [m        cout << [31m"4) Summer"[m << endl << endl;                                   [41m [m              [29;100H[33m388 [m                                                                               [41m [m              [30;100H[33m389 [m        cin >> term;                                                           [41m [m              [31;100H[33m390 [m        cin.ignore([31m100[m, [35m'\n'[m);                                                 [41m [m              [32;100H[33m391 [m    }                                                                          [41m [m              [33;100H[33m392 [m    [33mwhile[m(term > [31m4[m || term <= [31m0[m);                                              [41m [m              [34;100H[33m393 [m}                                                                              [41m [m              [35;100H[33m394 [m                                                                               [41m [m              [36;100H[33m395 [m                                                                               [41m [m              [37;100H[33m396 [m                                                                               [41m [m              [38;100H[33m397 [m[34m//Task:  Receives term gpa and credits and adds them to the overall amount. [m   [41m [m              [39;100H[33m398 [m[34m//Input:  Root is received to be able to be a recursive function[m               [41m [m              [40;100H[33m399 [m[34m//Output: Zero is returned when Null is reached.[m                               [41m [m              [41;100H[33m400 [m[32mint[m Client::receive_gpa(Node * root)                                           [41m [m              [42;100H[33m401 [m{                                                                              [41m [m              [43;100H[33m402 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [44;100H[33m403 [m                                                                               [41m [m              [45;100H[33m404 [m    total_gpa += root->give_term_gpa();                                        [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m405 [m    total_credits += root->give_credits();[37C[41m [m[47;100H[33m406 [m    total_cs_credits += root->give_cs_credits();[31C[41m [m[48;100H[33m407 [m    total_cs_gpa += root->give_cs_gpa();[39C[41m [m[49;100H[33m408 [m[79C[41m [m[50;100H[33m409 [m    [33mreturn[m receive_gpa(root->go_left()) + receive_gpa(root->go_right());[7C[41m [m[51;182H[1m[7m2,[12C9%[43;104H[?12l[?25h[?25l[51;182H3,0-1[44;104H[?12l[?25h[?25l[51;182H4,1   [45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m366 [m                                                                               [41m [m              [3;100H[33m367 [m    [33mreturn[m [31m1[m;                                                                  [41m [m              [4;100H[33m368 [m}                                                                              [41m [m              [5;100H[33m369 [m                                                                               [41m [m              [6;100H[33m370 [m                                                                               [41m [m              [7;100H[33m371 [m                                                                               [41m [m              [8;100H[33m372 [m[34m//Task:   Allows user to choose the term and year[m                              [41m [m              [9;100H[33m373 [m[34m//Input:  Term and year by reference to set[m                                    [41m [m              [10;100H[33m374 [m[34m//Output: Term and year changed via reference[m                                  [41m [m              [11;100H[33m375 [m[32mvoid[m Client::select_term([32mint[m & term_year, [32mint[m & term)                          [41m [m              [12;100H[33m376 [m{                                                                              [41m [m              [13;100H[33m377 [m    cout << [31m"[m[35m\n[m[31mWhat year was your course taken(EX: 2015)? "[m << endl;           [41m [m              [14;100H[33m378 [m    cin >> term_year;                                                          [41m [m              [15;100H[33m379 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [16;100H[33m380 [m                                                                               [41m [m              [17;100H[33m381 [m    [33mdo[m                                                                         [41m [m              [18;100H[33m382 [m    {                                                                          [41m [m              [19;100H[33m383 [m        cout << [31m"[m[35m\n[m[31mPlease choose which term(using #): "[m << endl;               [41m [m              [20;100H[33m384 [m        cout << [31m"1) Fall"[m << endl;                                             [41m [m              [21;100H[33m385 [m        cout << [31m"2) Winter"[m << endl;                                           [41m [m              [22;100H[33m386 [m        cout << [31m"3) Spring"[m << endl;                                           [41m [m              [23;100H[33m387 [m        cout << [31m"4) Summer"[m << endl << endl;                                   [41m [m              [24;100H[33m388 [m                                                                               [41m [m              [25;100H[33m389 [m        cin >> term;                                                           [41m [m              [26;100H[33m390 [m        cin.ignore([31m100[m, [35m'\n'[m);                                                 [41m [m              [27;100H[33m391 [m    }                                                                          [41m [m              [28;100H[33m392 [m    [33mwhile[m(term > [31m4[m || term <= [31m0[m);                                              [41m [m              [29;100H[33m393 [m}                                                                              [41m [m              [30;100H[33m394 [m                                                                               [41m [m              [31;100H[33m395 [m                                                                               [41m [m              [32;100H[33m396 [m                                                                               [41m [m              [33;100H[33m397 [m[34m//Task:  Receives term gpa and credits and adds them to the overall amount. [m   [41m [m              [34;100H[33m398 [m[34m//Input:  Root is received to be able to be a recursive function[m               [41m [m              [35;100H[33m399 [m[34m//Output: Zero is returned when Null is reached.[m                               [41m [m              [36;100H[33m400 [m[32mint[m Client::receive_gpa(Node * root)                                           [41m [m              [37;100H[33m401 [m{                                                                              [41m [m              [38;100H[33m402 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [39;100H[33m403 [m                                                                               [41m [m              [40;100H[33m404 [m    total_gpa += root->give_term_gpa();                                        [41m [m              [41;100H[33m405 [m    total_credits += root->give_credits();                                     [41m [m              [42;100H[33m406 [m    total_cs_credits += root->give_cs_credits();                               [41m [m              [43;100H[33m407 [m    total_cs_gpa += root->give_cs_gpa();                                       [41m [m              [44;100H[33m408 [m                                                                               [41m [m              [45;100H[33m409 [m    [33mreturn[m receive_gpa(root->go_left()) + receive_gpa(root->go_right());       [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m410 [m[79C[41m [m[47;100H[33m411 [m}[78C[41m [m[48;100H[33m412 [m[79C[41m [m[49;100H[33m413 [m[79C[41m [m[50;100H[33m414 [m[79C[41m [m[51;182H[1m[7m7,[11C90%[43;104H[?12l[?25h[?25l[51;182H8,0-1[44;104H[?12l[?25h[?25l[51;182H9,1   [45;104H[?12l[?25h[?25l[51;181H10,0-1[46;104H[?12l[?25h[?25l[m[37;104H[46m{[47;104H}[m[51;182H[1m[7m1,1   [47;104H[?12l[?25h[?25l[m[2;100H[33m371 [m                                                                               [41m [m              [3;100H[33m372 [m[34m//Task:   Allows user to choose the term and year[m                              [41m [m              [4;100H[33m373 [m[34m//Input:  Term and year by reference to set[m                                    [41m [m              [5;100H[33m374 [m[34m//Output: Term and year changed via reference[m                                  [41m [m              [6;100H[33m375 [m[32mvoid[m Client::select_term([32mint[m & term_year, [32mint[m & term)                          [41m [m              [7;100H[33m376 [m{                                                                              [41m [m              [8;100H[33m377 [m    cout << [31m"[m[35m\n[m[31mWhat year was your course taken(EX: 2015)? "[m << endl;           [41m [m              [9;100H[33m378 [m    cin >> term_year;                                                          [41m [m              [10;100H[33m379 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [11;100H[33m380 [m                                                                               [41m [m              [12;100H[33m381 [m    [33mdo[m                                                                         [41m [m              [13;100H[33m382 [m    {                                                                          [41m [m              [14;100H[33m383 [m        cout << [31m"[m[35m\n[m[31mPlease choose which term(using #): "[m << endl;               [41m [m              [15;100H[33m384 [m        cout << [31m"1) Fall"[m << endl;                                             [41m [m              [16;100H[33m385 [m        cout << [31m"2) Winter"[m << endl;                                           [41m [m              [17;100H[33m386 [m        cout << [31m"3) Spring"[m << endl;                                           [41m [m              [18;100H[33m387 [m        cout << [31m"4) Summer"[m << endl << endl;                                   [41m [m              [19;100H[33m388 [m                                                                               [41m [m              [20;100H[33m389 [m        cin >> term;                                                           [41m [m              [21;100H[33m390 [m        cin.ignore([31m100[m, [35m'\n'[m);                                                 [41m [m              [22;100H[33m391 [m    }                                                                          [41m [m              [23;100H[33m392 [m    [33mwhile[m(term > [31m4[m || term <= [31m0[m);                                              [41m [m              [24;100H[33m393 [m}                                                                              [41m [m              [25;100H[33m394 [m                                                                               [41m [m              [26;100H[33m395 [m                                                                               [41m [m              [27;100H[33m396 [m                                                                               [41m [m              [28;100H[33m397 [m[34m//Task:  Receives term gpa and credits and adds them to the overall amount. [m   [41m [m              [29;100H[33m398 [m[34m//Input:  Root is received to be able to be a recursive function[m               [41m [m              [30;100H[33m399 [m[34m//Output: Zero is returned when Null is reached.[m                               [41m [m              [31;100H[33m400 [m[32mint[m Client::receive_gpa(Node * root)                                           [41m [m              [32;100H[33m401 [m[46m{[m                                                                              [41m [m              [33;100H[33m402 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [34;100H[33m403 [m                                                                               [41m [m              [35;100H[33m404 [m    total_gpa += root->give_term_gpa();                                        [41m [m              [36;100H[33m405 [m    total_credits += root->give_credits();                                     [41m [m              [37;100H[33m406 [m    total_cs_credits += root->give_cs_credits();                               [41m [m              [38;100H[33m407 [m    total_cs_gpa += root->give_cs_gpa();                                       [41m [m              [39;100H[33m408 [m                                                                               [41m [m              [40;100H[33m409 [m    [33mreturn[m receive_gpa(root->go_left()) + receive_gpa(root->go_right());       [41m [m              [41;100H[33m410 [m                                                                               [41m [m              [42;100H[33m411 [m[46m}[m                                                                              [41m [m              [43;100H[33m412 [m                                                                               [41m [m              [44;100H[33m413 [m                                                                               [41m [m              [45;100H[33m414 [m                                                                               [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [32;104H{[42;104H}[46;100H[33m415 [m[34m//Task:   Calculates the overall and CS GPA by dividing the total GPA by credit[m[34m[41ms[m[47;100H[33m416 [m[34m//Input:  None[m[65C[41m [m[48;100H[33m417 [m[34m//Output: One upon completion of function[m[38C[41m [m[49;100H[33m418 [m[32mint[m Client::calc_gpa()[57C[41m [m[50;100H[33m419 [m{[78C[41m [m[51;182H[1m[7m2,0-1[9C1%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,1   [46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m376 [m{                                                                              [41m [m              [3;100H[33m377 [m    cout << [31m"[m[35m\n[m[31mWhat year was your course taken(EX: 2015)? "[m << endl;           [41m [m              [4;100H[33m378 [m    cin >> term_year;                                                          [41m [m              [5;100H[33m379 [m    cin.ignore([31m100[m, [35m'\n'[m);                                                     [41m [m              [6;100H[33m380 [m                                                                               [41m [m              [7;100H[33m381 [m    [33mdo[m                                                                         [41m [m              [8;100H[33m382 [m    {                                                                          [41m [m              [9;100H[33m383 [m        cout << [31m"[m[35m\n[m[31mPlease choose which term(using #): "[m << endl;               [41m [m              [10;100H[33m384 [m        cout << [31m"1) Fall"[m << endl;                                             [41m [m              [11;100H[33m385 [m        cout << [31m"2) Winter"[m << endl;                                           [41m [m              [12;100H[33m386 [m        cout << [31m"3) Spring"[m << endl;                                           [41m [m              [13;100H[33m387 [m        cout << [31m"4) Summer"[m << endl << endl;                                   [41m [m              [14;100H[33m388 [m                                                                               [41m [m              [15;100H[33m389 [m        cin >> term;                                                           [41m [m              [16;100H[33m390 [m        cin.ignore([31m100[m, [35m'\n'[m);                                                 [41m [m              [17;100H[33m391 [m    }                                                                          [41m [m              [18;100H[33m392 [m    [33mwhile[m(term > [31m4[m || term <= [31m0[m);                                              [41m [m              [19;100H[33m393 [m}                                                                              [41m [m              [20;100H[33m394 [m                                                                               [41m [m              [21;100H[33m395 [m                                                                               [41m [m              [22;100H[33m396 [m                                                                               [41m [m              [23;100H[33m397 [m[34m//Task:  Receives term gpa and credits and adds them to the overall amount. [m   [41m [m              [24;100H[33m398 [m[34m//Input:  Root is received to be able to be a recursive function[m               [41m [m              [25;100H[33m399 [m[34m//Output: Zero is returned when Null is reached.[m                               [41m [m              [26;100H[33m400 [m[32mint[m Client::receive_gpa(Node * root)                                           [41m [m              [27;100H[33m401 [m{                                                                              [41m [m              [28;100H[33m402 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [29;100H[33m403 [m                                                                               [41m [m              [30;100H[33m404 [m    total_gpa += root->give_term_gpa();                                        [41m [m              [31;100H[33m405 [m    total_credits += root->give_credits();                                     [41m [m              [32;100H[33m406 [m    total_cs_credits += root->give_cs_credits();                               [41m [m              [33;100H[33m407 [m    total_cs_gpa += root->give_cs_gpa();                                       [41m [m              [34;100H[33m408 [m                                                                               [41m [m              [35;100H[33m409 [m    [33mreturn[m receive_gpa(root->go_left()) + receive_gpa(root->go_right());       [41m [m              [36;100H[33m410 [m                                                                               [41m [m              [37;100H[33m411 [m}                                                                              [41m [m              [38;100H[33m412 [m                                                                               [41m [m              [39;100H[33m413 [m                                                                               [41m [m              [40;100H[33m414 [m                                                                               [41m [m              [41;100H[33m415 [m[34m//Task:   Calculates the overall and CS GPA by dividing the total GPA by credit[m[34m[41ms[m              [42;100H[33m416 [m[34m//Input:  None[m                                                                 [41m [m              [43;100H[33m417 [m[34m//Output: One upon completion of function[m                                      [41m [m              [44;100H[33m418 [m[32mint[m Client::calc_gpa()                                                         [41m [m              [45;100H[33m419 [m{                                                                              [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m420 [m    [32mfloat[m overall_gpa = [31m0[m; [34m//holds results of GPA / credits[m[20C[41m [m[47;100H[33m421 [m    [32mfloat[m overall_cs_gpa = [31m0[m; [34m//holds results of CS GPA / CS credits[m[11C[41m [m[48;100H[33m422 [m[79C[41m [m[49;100H[33m423 [m    overall_gpa = total_gpa / total_credits;[35C[41m [m[50;100H[33m424 [m    overall_cs_gpa = total_cs_gpa / total_cs_credits;[26C[41m [m[51;182H[1m[7m7,[12C2%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H20,[46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m381 [m    [33mdo[m                                                                         [41m [m              [3;100H[33m382 [m    {                                                                          [41m [m              [4;100H[33m383 [m        cout << [31m"[m[35m\n[m[31mPlease choose which term(using #): "[m << endl;               [41m [m              [5;100H[33m384 [m        cout << [31m"1) Fall"[m << endl;                                             [41m [m              [6;100H[33m385 [m        cout << [31m"2) Winter"[m << endl;                                           [41m [m              [7;100H[33m386 [m        cout << [31m"3) Spring"[m << endl;                                           [41m [m              [8;100H[33m387 [m        cout << [31m"4) Summer"[m << endl << endl;                                   [41m [m              [9;100H[33m388 [m                                                                               [41m [m              [10;100H[33m389 [m        cin >> term;                                                           [41m [m              [11;100H[33m390 [m        cin.ignore([31m100[m, [35m'\n'[m);                                                 [41m [m              [12;100H[33m391 [m    }                                                                          [41m [m              [13;100H[33m392 [m    [33mwhile[m(term > [31m4[m || term <= [31m0[m);                                              [41m [m              [14;100H[33m393 [m}                                                                              [41m [m              [15;100H[33m394 [m                                                                               [41m [m              [16;100H[33m395 [m                                                                               [41m [m              [17;100H[33m396 [m                                                                               [41m [m              [18;100H[33m397 [m[34m//Task:  Receives term gpa and credits and adds them to the overall amount. [m   [41m [m              [19;100H[33m398 [m[34m//Input:  Root is received to be able to be a recursive function[m               [41m [m              [20;100H[33m399 [m[34m//Output: Zero is returned when Null is reached.[m                               [41m [m              [21;100H[33m400 [m[32mint[m Client::receive_gpa(Node * root)                                           [41m [m              [22;100H[33m401 [m{                                                                              [41m [m              [23;100H[33m402 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [24;100H[33m403 [m                                                                               [41m [m              [25;100H[33m404 [m    total_gpa += root->give_term_gpa();                                        [41m [m              [26;100H[33m405 [m    total_credits += root->give_credits();                                     [41m [m              [27;100H[33m406 [m    total_cs_credits += root->give_cs_credits();                               [41m [m              [28;100H[33m407 [m    total_cs_gpa += root->give_cs_gpa();                                       [41m [m              [29;100H[33m408 [m                                                                               [41m [m              [30;100H[33m409 [m    [33mreturn[m receive_gpa(root->go_left()) + receive_gpa(root->go_right());       [41m [m              [31;100H[33m410 [m                                                                               [41m [m              [32;100H[33m411 [m}                                                                              [41m [m              [33;100H[33m412 [m                                                                               [41m [m              [34;100H[33m413 [m                                                                               [41m [m              [35;100H[33m414 [m                                                                               [41m [m              [36;100H[33m415 [m[34m//Task:   Calculates the overall and CS GPA by dividing the total GPA by credit[m[34m[41ms[m              [37;100H[33m416 [m[34m//Input:  None[m                                                                 [41m [m              [38;100H[33m417 [m[34m//Output: One upon completion of function[m                                      [41m [m              [39;100H[33m418 [m[32mint[m Client::calc_gpa()                                                         [41m [m              [40;100H[33m419 [m{                                                                              [41m [m              [41;100H[33m420 [m    [32mfloat[m overall_gpa = [31m0[m; [34m//holds results of GPA / credits[m                    [41m [m              [42;100H[33m421 [m    [32mfloat[m overall_cs_gpa = [31m0[m; [34m//holds results of CS GPA / CS credits[m           [41m [m              [43;100H[33m422 [m                                                                               [41m [m              [44;100H[33m423 [m    overall_gpa = total_gpa / total_credits;                                   [41m [m              [45;100H[33m424 [m    overall_cs_gpa = total_cs_gpa / total_cs_credits;                          [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m425 [m[79C[41m [m[47;100H[33m426 [m    cout << [31m"[m[35m\n\n[m[31m---GPA---"[m << endl;[43C[41m [m[48;100H[33m427 [m    cout << [31m"Total: "[m << overall_gpa << endl;[34C[41m [m[49;100H[33m428 [m    cout << [31m"CS: "[m << overall_cs_gpa << endl;[34C[41m [m[50;100H[33m429 [m[79C[41m [m[51;182H[1m[7m2,0-1[9C4%[43;104H[?12l[?25h[?25l[51;182H3,1   [44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,0-1[46;104H[?12l[?25h[?25l[51;182H6,1   [47;104H[?12l[?25h[?25l[m[2;100H[33m386 [m        cout << [31m"3) Spring"[m << endl;                                           [41m [m              [3;100H[33m387 [m        cout << [31m"4) Summer"[m << endl << endl;                                   [41m [m              [4;100H[33m388 [m                                                                               [41m [m              [5;100H[33m389 [m        cin >> term;                                                           [41m [m              [6;100H[33m390 [m        cin.ignore([31m100[m, [35m'\n'[m);                                                 [41m [m              [7;100H[33m391 [m    }                                                                          [41m [m              [8;100H[33m392 [m    [33mwhile[m(term > [31m4[m || term <= [31m0[m);                                              [41m [m              [9;100H[33m393 [m}                                                                              [41m [m              [10;100H[33m394 [m                                                                               [41m [m              [11;100H[33m395 [m                                                                               [41m [m              [12;100H[33m396 [m                                                                               [41m [m              [13;100H[33m397 [m[34m//Task:  Receives term gpa and credits and adds them to the overall amount. [m   [41m [m              [14;100H[33m398 [m[34m//Input:  Root is received to be able to be a recursive function[m               [41m [m              [15;100H[33m399 [m[34m//Output: Zero is returned when Null is reached.[m                               [41m [m              [16;100H[33m400 [m[32mint[m Client::receive_gpa(Node * root)                                           [41m [m              [17;100H[33m401 [m{                                                                              [41m [m              [18;100H[33m402 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [19;100H[33m403 [m                                                                               [41m [m              [20;100H[33m404 [m    total_gpa += root->give_term_gpa();                                        [41m [m              [21;100H[33m405 [m    total_credits += root->give_credits();                                     [41m [m              [22;100H[33m406 [m    total_cs_credits += root->give_cs_credits();                               [41m [m              [23;100H[33m407 [m    total_cs_gpa += root->give_cs_gpa();                                       [41m [m              [24;100H[33m408 [m                                                                               [41m [m              [25;100H[33m409 [m    [33mreturn[m receive_gpa(root->go_left()) + receive_gpa(root->go_right());       [41m [m              [26;100H[33m410 [m                                                                               [41m [m              [27;100H[33m411 [m}                                                                              [41m [m              [28;100H[33m412 [m                                                                               [41m [m              [29;100H[33m413 [m                                                                               [41m [m              [30;100H[33m414 [m                                                                               [41m [m              [31;100H[33m415 [m[34m//Task:   Calculates the overall and CS GPA by dividing the total GPA by credit[m[34m[41ms[m              [32;100H[33m416 [m[34m//Input:  None[m                                                                 [41m [m              [33;100H[33m417 [m[34m//Output: One upon completion of function[m                                      [41m [m              [34;100H[33m418 [m[32mint[m Client::calc_gpa()                                                         [41m [m              [35;100H[33m419 [m{                                                                              [41m [m              [36;100H[33m420 [m    [32mfloat[m overall_gpa = [31m0[m; [34m//holds results of GPA / credits[m                    [41m [m              [37;100H[33m421 [m    [32mfloat[m overall_cs_gpa = [31m0[m; [34m//holds results of CS GPA / CS credits[m           [41m [m              [38;100H[33m422 [m                                                                               [41m [m              [39;100H[33m423 [m    overall_gpa = total_gpa / total_credits;                                   [41m [m              [40;100H[33m424 [m    overall_cs_gpa = total_cs_gpa / total_cs_credits;                          [41m [m              [41;100H[33m425 [m                                                                               [41m [m              [42;100H[33m426 [m    cout << [31m"[m[35m\n\n[m[31m---GPA---"[m << endl;                                           [41m [m              [43;100H[33m427 [m    cout << [31m"Total: "[m << overall_gpa << endl;                                  [41m [m              [44;100H[33m428 [m    cout << [31m"CS: "[m << overall_cs_gpa << endl;                                  [41m [m              [45;100H[33m429 [m                                                                               [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m430 [m    [33mif[m(overall_gpa < [31m2.0[m || overall_cs_gpa < [31m2.0[m)[30C[41m [m[47;100H[33m431 [m[8Ccout << [31m"[m[35m\n[m[31mWarning...Must work on improving academic standing."[m << endl[41m;[m[48;100H[33m432 [m    [33melse[m[71C[41m [m[49;100H[33m433 [m[8Ccout << [31m"[m[35m\n[m[31mGood Academic Standing"[m << endl;[28C[41m [m[50;100H[33m434 [m[79C[41m [m[51;182H[1m[7m7,[12C5%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,0-1[45;104H[?12l[?25h[?25l[51;181H30,1   [46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m391 [m    }                                                                          [41m [m              [3;100H[33m392 [m    [33mwhile[m(term > [31m4[m || term <= [31m0[m);                                              [41m [m              [4;100H[33m393 [m}                                                                              [41m [m              [5;100H[33m394 [m                                                                               [41m [m              [6;100H[33m395 [m                                                                               [41m [m              [7;100H[33m396 [m                                                                               [41m [m              [8;100H[33m397 [m[34m//Task:  Receives term gpa and credits and adds them to the overall amount. [m   [41m [m              [9;100H[33m398 [m[34m//Input:  Root is received to be able to be a recursive function[m               [41m [m              [10;100H[33m399 [m[34m//Output: Zero is returned when Null is reached.[m                               [41m [m              [11;100H[33m400 [m[32mint[m Client::receive_gpa(Node * root)                                           [41m [m              [12;100H[33m401 [m{                                                                              [41m [m              [13;100H[33m402 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [14;100H[33m403 [m                                                                               [41m [m              [15;100H[33m404 [m    total_gpa += root->give_term_gpa();                                        [41m [m              [16;100H[33m405 [m    total_credits += root->give_credits();                                     [41m [m              [17;100H[33m406 [m    total_cs_credits += root->give_cs_credits();                               [41m [m              [18;100H[33m407 [m    total_cs_gpa += root->give_cs_gpa();                                       [41m [m              [19;100H[33m408 [m                                                                               [41m [m              [20;100H[33m409 [m    [33mreturn[m receive_gpa(root->go_left()) + receive_gpa(root->go_right());       [41m [m              [21;100H[33m410 [m                                                                               [41m [m              [22;100H[33m411 [m}                                                                              [41m [m              [23;100H[33m412 [m                                                                               [41m [m              [24;100H[33m413 [m                                                                               [41m [m              [25;100H[33m414 [m                                                                               [41m [m              [26;100H[33m415 [m[34m//Task:   Calculates the overall and CS GPA by dividing the total GPA by credit[m[34m[41ms[m              [27;100H[33m416 [m[34m//Input:  None[m                                                                 [41m [m              [28;100H[33m417 [m[34m//Output: One upon completion of function[m                                      [41m [m              [29;100H[33m418 [m[32mint[m Client::calc_gpa()                                                         [41m [m              [30;100H[33m419 [m{                                                                              [41m [m              [31;100H[33m420 [m    [32mfloat[m overall_gpa = [31m0[m; [34m//holds results of GPA / credits[m                    [41m [m              [32;100H[33m421 [m    [32mfloat[m overall_cs_gpa = [31m0[m; [34m//holds results of CS GPA / CS credits[m           [41m [m              [33;100H[33m422 [m                                                                               [41m [m              [34;100H[33m423 [m    overall_gpa = total_gpa / total_credits;                                   [41m [m              [35;100H[33m424 [m    overall_cs_gpa = total_cs_gpa / total_cs_credits;                          [41m [m              [36;100H[33m425 [m                                                                               [41m [m              [37;100H[33m426 [m    cout << [31m"[m[35m\n\n[m[31m---GPA---"[m << endl;                                           [41m [m              [38;100H[33m427 [m    cout << [31m"Total: "[m << overall_gpa << endl;                                  [41m [m              [39;100H[33m428 [m    cout << [31m"CS: "[m << overall_cs_gpa << endl;                                  [41m [m              [40;100H[33m429 [m                                                                               [41m [m              [41;100H[33m430 [m    [33mif[m(overall_gpa < [31m2.0[m || overall_cs_gpa < [31m2.0[m)                              [41m [m              [42;100H[33m431 [m        cout << [31m"[m[35m\n[m[31mWarning...Must work on improving academic standing."[m << endl[41m;[m              [43;100H[33m432 [m    [33melse[m                                                                       [41m [m              [44;100H[33m433 [m        cout << [31m"[m[35m\n[m[31mGood Academic Standing"[m << endl;                            [41m [m              [45;100H[33m434 [m                                                                               [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m435 [m    [33mreturn[m [31m1[m;[66C[41m [m[47;100H[33m436 [m}[78C[41m [m[48;100H[33m437 [m[79C[41m [m[49;100H[33m438 [m[79C[41m [m[50;100H[33m439 [m[79C[41m [m[51;182H[1m[7m2,[12C6%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,0-1[45;104H[?12l[?25h[?25l[51;182H5,1   [46;104H[?12l[?25h[?25l[m[30;104H[46m{[47;104H}[m[51;182H[1m[7m6,[47;104H[?12l[?25h[?25l[m[2;100H[33m396 [m                                                                               [41m [m              [3;100H[33m397 [m[34m//Task:  Receives term gpa and credits and adds them to the overall amount. [m   [41m [m              [4;100H[33m398 [m[34m//Input:  Root is received to be able to be a recursive function[m               [41m [m              [5;100H[33m399 [m[34m//Output: Zero is returned when Null is reached.[m                               [41m [m              [6;100H[33m400 [m[32mint[m Client::receive_gpa(Node * root)                                           [41m [m              [7;100H[33m401 [m{                                                                              [41m [m              [8;100H[33m402 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [9;100H[33m403 [m                                                                               [41m [m              [10;100H[33m404 [m    total_gpa += root->give_term_gpa();                                        [41m [m              [11;100H[33m405 [m    total_credits += root->give_credits();                                     [41m [m              [12;100H[33m406 [m    total_cs_credits += root->give_cs_credits();                               [41m [m              [13;100H[33m407 [m    total_cs_gpa += root->give_cs_gpa();                                       [41m [m              [14;100H[33m408 [m                                                                               [41m [m              [15;100H[33m409 [m    [33mreturn[m receive_gpa(root->go_left()) + receive_gpa(root->go_right());       [41m [m              [16;100H[33m410 [m                                                                               [41m [m              [17;100H[33m411 [m}                                                                              [41m [m              [18;100H[33m412 [m                                                                               [41m [m              [19;100H[33m413 [m                                                                               [41m [m              [20;100H[33m414 [m                                                                               [41m [m              [21;100H[33m415 [m[34m//Task:   Calculates the overall and CS GPA by dividing the total GPA by credit[m[34m[41ms[m              [22;100H[33m416 [m[34m//Input:  None[m                                                                 [41m [m              [23;100H[33m417 [m[34m//Output: One upon completion of function[m                                      [41m [m              [24;100H[33m418 [m[32mint[m Client::calc_gpa()                                                         [41m [m              [25;100H[33m419 [m[46m{[m                                                                              [41m [m              [26;100H[33m420 [m    [32mfloat[m overall_gpa = [31m0[m; [34m//holds results of GPA / credits[m                    [41m [m              [27;100H[33m421 [m    [32mfloat[m overall_cs_gpa = [31m0[m; [34m//holds results of CS GPA / CS credits[m           [41m [m              [28;100H[33m422 [m                                                                               [41m [m              [29;100H[33m423 [m    overall_gpa = total_gpa / total_credits;                                   [41m [m              [30;100H[33m424 [m    overall_cs_gpa = total_cs_gpa / total_cs_credits;                          [41m [m              [31;100H[33m425 [m                                                                               [41m [m              [32;100H[33m426 [m    cout << [31m"[m[35m\n\n[m[31m---GPA---"[m << endl;                                           [41m [m              [33;100H[33m427 [m    cout << [31m"Total: "[m << overall_gpa << endl;                                  [41m [m              [34;100H[33m428 [m    cout << [31m"CS: "[m << overall_cs_gpa << endl;                                  [41m [m              [35;100H[33m429 [m                                                                               [41m [m              [36;100H[33m430 [m    [33mif[m(overall_gpa < [31m2.0[m || overall_cs_gpa < [31m2.0[m)                              [41m [m              [37;100H[33m431 [m        cout << [31m"[m[35m\n[m[31mWarning...Must work on improving academic standing."[m << endl[41m;[m              [38;100H[33m432 [m    [33melse[m                                                                       [41m [m              [39;100H[33m433 [m        cout << [31m"[m[35m\n[m[31mGood Academic Standing"[m << endl;                            [41m [m              [40;100H[33m434 [m                                                                               [41m [m              [41;100H[33m435 [m    [33mreturn[m [31m1[m;                                                                  [41m [m              [42;100H[33m436 [m[46m}[m                                                                              [41m [m              [43;100H[33m437 [m                                                                               [41m [m              [44;100H[33m438 [m                                                                               [41m [m              [45;100H[33m439 [m                                                                               [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [25;104H{[42;104H}[46;100H[33m440 [m[34m//Task:   Checks for total amount of credits and shows if user is able to apply[m[41m [m[47;100H[33m441 [m[34m//        to program.[m[58C[41m [m[48;100H[33m442 [m[34m//Input:  None[m[65C[41m [m[49;100H[33m443 [m[34m//Output: Returns one upon completion[m[42C[41m [m[50;100H[33m444 [m[32mint[m Client::evaluate_progress()[48C[41m [m[51;182H[1m[7m7,0-1[9C7%[43;104H[?12l[?25h[?25l[51;182H8,[44;104H[?12l[?25h[?25l[51;182H9,[45;104H[?12l[?25h[?25l[51;181H40,1   [46;104H[?12l[?25h[?25l[51;182H1,[47;104H[?12l[?25h[?25l[m[2;100H[33m401 [m{                                                                              [41m [m              [3;100H[33m402 [m    [33mif[m(!root) [33mreturn[m [31m0[m;                                                        [41m [m              [4;100H[33m403 [m                                                                               [41m [m              [5;100H[33m404 [m    total_gpa += root->give_term_gpa();                                        [41m [m              [6;100H[33m405 [m    total_credits += root->give_credits();                                     [41m [m              [7;100H[33m406 [m    total_cs_credits += root->give_cs_credits();                               [41m [m              [8;100H[33m407 [m    total_cs_gpa += root->give_cs_gpa();                                       [41m [m              [9;100H[33m408 [m                                                                               [41m [m              [10;100H[33m409 [m    [33mreturn[m receive_gpa(root->go_left()) + receive_gpa(root->go_right());       [41m [m              [11;100H[33m410 [m                                                                               [41m [m              [12;100H[33m411 [m}                                                                              [41m [m              [13;100H[33m412 [m                                                                               [41m [m              [14;100H[33m413 [m                                                                               [41m [m              [15;100H[33m414 [m                                                                               [41m [m              [16;100H[33m415 [m[34m//Task:   Calculates the overall and CS GPA by dividing the total GPA by credit[m[34m[41ms[m              [17;100H[33m416 [m[34m//Input:  None[m                                                                 [41m [m              [18;100H[33m417 [m[34m//Output: One upon completion of function[m                                      [41m [m              [19;100H[33m418 [m[32mint[m Client::calc_gpa()                                                         [41m [m              [20;100H[33m419 [m{                                                                              [41m [m              [21;100H[33m420 [m    [32mfloat[m overall_gpa = [31m0[m; [34m//holds results of GPA / credits[m                    [41m [m              [22;100H[33m421 [m    [32mfloat[m overall_cs_gpa = [31m0[m; [34m//holds results of CS GPA / CS credits[m           [41m [m              [23;100H[33m422 [m                                                                               [41m [m              [24;100H[33m423 [m    overall_gpa = total_gpa / total_credits;                                   [41m [m              [25;100H[33m424 [m    overall_cs_gpa = total_cs_gpa / total_cs_credits;                          [41m [m              [26;100H[33m425 [m                                                                               [41m [m              [27;100H[33m426 [m    cout << [31m"[m[35m\n\n[m[31m---GPA---"[m << endl;                                           [41m [m              [28;100H[33m427 [m    cout << [31m"Total: "[m << overall_gpa << endl;                                  [41m [m              [29;100H[33m428 [m    cout << [31m"CS: "[m << overall_cs_gpa << endl;                                  [41m [m              [30;100H[33m429 [m                                                                               [41m [m              [31;100H[33m430 [m    [33mif[m(overall_gpa < [31m2.0[m || overall_cs_gpa < [31m2.0[m)                              [41m [m              [32;100H[33m431 [m        cout << [31m"[m[35m\n[m[31mWarning...Must work on improving academic standing."[m << endl[41m;[m              [33;100H[33m432 [m    [33melse[m                                                                       [41m [m              [34;100H[33m433 [m        cout << [31m"[m[35m\n[m[31mGood Academic Standing"[m << endl;                            [41m [m              [35;100H[33m434 [m                                                                               [41m [m              [36;100H[33m435 [m    [33mreturn[m [31m1[m;                                                                  [41m [m              [37;100H[33m436 [m}                                                                              [41m [m              [38;100H[33m437 [m                                                                               [41m [m              [39;100H[33m438 [m                                                                               [41m [m              [40;100H[33m439 [m                                                                               [41m [m              [41;100H[33m440 [m[34m//Task:   Checks for total amount of credits and shows if user is able to apply[m[41m [m              [42;100H[33m441 [m[34m//        to program.[m                                                          [41m [m              [43;100H[33m442 [m[34m//Input:  None[m                                                                 [41m [m              [44;100H[33m443 [m[34m//Output: Returns one upon completion[m                                          [41m [m              [45;100H[33m444 [m[32mint[m Client::evaluate_progress()                                                [41m [m              [46;100H                                                                                                  [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [46;100H[33m445 [m{[78C[41m [m[47;100H[33m446 [m    [33mif[m(total_credits < [31m90[m)[53C[41m [m[48;100H[33m447 [m[8Ccout << [31m"[m[35m\n[m[31mYou have "[m << total_credits << [31m" which does not meet the req[m[31m[41mi[m[31mrements"[m[49;100H[33m448 [m[13C<< [31m" to be accepted into the CS Program"[m << endl;[17C[41m [m[50;100H[33m449 [m    [33melse[m[71C[41m [m[51;182H[1m[7m2,[12C9%[43;104H[?12l[?25h[?25l[51;182H3,[44;104H[?12l[?25h[?25l[51;182H4,[45;104H[?12l[?25h[?25l[51;182H5,[46;104H[?12l[?25h[?25l[51;182H6,[47;104H[?12l[?25h[?25l[m[2;100H[33m405 [m    total_credits += root->give_credits();                                     [41m [m              [3;100H[33m406 [m    total_cs_credits += root->give_cs_credits();                               [41m [m              [4;100H[33m407 [m    total_cs_gpa += root->give_cs_gpa();                                       [41m [m              [5;100H[33m408 [m                                                                               [41m [m              [6;100H[33m409 [m    [33mreturn[m receive_gpa(root->go_left()) + receive_gpa(root->go_right());       [41m [m              [7;100H[33m410 [m                                                                               [41m [m              [8;100H[33m411 [m}                                                                              [41m [m              [9;100H[33m412 [m                                                                               [41m [m              [10;100H[33m413 [m                                                                               [41m [m              [11;100H[33m414 [m                                                                               [41m [m              [12;100H[33m415 [m[34m//Task:   Calculates the overall and CS GPA by dividing the total GPA by credit[m[34m[41ms[m              [13;100H[33m416 [m[34m//Input:  None[m                                                                 [41m [m              [14;100H[33m417 [m[34m//Output: One upon completion of function[m                                      [41m [m              [15;100H[33m418 [m[32mint[m Client::calc_gpa()                                                         [41m [m              [16;100H[33m419 [m{                                                                              [41m [m              [17;100H[33m420 [m    [32mfloat[m overall_gpa = [31m0[m; [34m//holds results of GPA / credits[m                    [41m [m              [18;100H[33m421 [m    [32mfloat[m overall_cs_gpa = [31m0[m; [34m//holds results of CS GPA / CS credits[m           [41m [m              [19;100H[33m422 [m                                                                               [41m [m              [20;100H[33m423 [m    overall_gpa = total_gpa / total_credits;                                   [41m [m              [21;100H[33m424 [m    overall_cs_gpa = total_cs_gpa / total_cs_credits;                          [41m [m              [22;100H[33m425 [m                                                                               [41m [m              [23;100H[33m426 [m    cout << [31m"[m[35m\n\n[m[31m---GPA---"[m << endl;                                           [41m [m              [24;100H[33m427 [m    cout << [31m"Total: "[m << overall_gpa << endl;                                  [41m [m              [25;100H[33m428 [m    cout << [31m"CS: "[m << overall_cs_gpa << endl;                                  [41m [m              [26;100H[33m429 [m                                                                               [41m [m              [27;100H[33m430 [m    [33mif[m(overall_gpa < [31m2.0[m || overall_cs_gpa < [31m2.0[m)                              [41m [m              [28;100H[33m431 [m        cout << [31m"[m[35m\n[m[31mWarning...Must work on improving academic standing."[m << endl[41m;[m              [29;100H[33m432 [m    [33melse[m                                                                       [41m [m              [30;100H[33m433 [m        cout << [31m"[m[35m\n[m[31mGood Academic Standing"[m << endl;                            [41m [m              [31;100H[33m434 [m                                                                               [41m [m              [32;100H[33m435 [m    [33mreturn[m [31m1[m;                                                                  [41m [m              [33;100H[33m436 [m}                                                                              [41m [m              [34;100H[33m437 [m                                                                               [41m [m              [35;100H[33m438 [m                                                                               [41m [m              [36;100H[33m439 [m                                                                               [41m [m              [37;100H[33m440 [m[34m//Task:   Checks for total amount of credits and shows if user is able to apply[m[41m [m              [38;100H[33m441 [m[34m//        to program.[m                                                          [41m [m              [39;100H[33m442 [m[34m//Input:  None[m                                                                 [41m [m              [40;100H[33m443 [m[34m//Output: Returns one upon completion[m                                          [41m [m              [41;100H[33m444 [m[32mint[m Client::evaluate_progress()                                                [41m [m              [42;100H[33m445 [m{                                                                              [41m [m              [43;100H[33m446 [m    [33mif[m(total_credits < [31m90[m)                                                     [41m [m              [44;100H[33m447 [m        cout << [31m"[m[35m\n[m[31mYou have "[m << total_credits << [31m" which does not meet the req[m[31m[41mi[m[31mrements"[m      [45;100H[33m448 [m             << [31m" to be accepted into the CS Program"[m << endl;                 [41m [m              [46;100H[33m449 [m    [33melse[m                                                                       [41m [m              [47;100H                                                                                                  [48;100H                                                                                                  [49;100H                                                                                                  [50;100H                                                                                                  [47;100H[33m450 [m[8Ccout << [31m"[m[35m\n[m[31mCongradulations! You made it!"[m << endl;[21C[41m [m[48;100H[33m451 [m[79C[41m [m[49;100H[33m452 [m    [33mreturn[m [31m1[m;[66C[41m [m[50;100H[33m453 [m}[78C[41m [m[51;182H[1m[7m7,[11CBot[44;104H[?12l[?25h[?25l[51;182H8,[45;104H[?12l[?25h[?25l[51;182H9,[46;104H[?12l[?25h[?25l[51;181H50,[47;104H[?12l[?25h[?25l[51;182H1,0-1[48;104H[?12l[?25h[?25l[51;182H2,1   [49;104H[?12l[?25h[?25l[m[42;104H[46m{[50;104H}[m[51;182H[1m[7m3,[50;104H[?12l[?25h[?25l

[m:[?12l[?25hw[?25l[?12l[?25ha[?25l[?12l[?25h[?25l[52;3H[K[52;3H[?12l[?25h[?25l[52;2H[K[52;2H[?12l[?25h [50;104H[?25l

:[?12l[?25hx[?25l[?12l[?25ha[?25l[?12l[?25h[?25l[52;1H[K[52;1H[?1l>[?12l[?25h[?1049lcherber2@ada:~/CS202/Program2$ exit
exit

Script done on Fri 08 May 2015 01:06:21 PM PDT
